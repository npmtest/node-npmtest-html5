{"/home/travis/build/npmtest/node-npmtest-html5/test.js":"/* istanbul instrument in package npmtest_html5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-html5/lib.npmtest_html5.js":"/* istanbul instrument in package npmtest_html5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_html5 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_html5 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-html5/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-html5 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_html5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_html5\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_html5.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_html5.rollup.js'] =\n            local.assetsDict['/assets.npmtest_html5.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_html5.__dirname + '/lib.npmtest_html5.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/index.js":"module.exports = {\n\tDOMParser: require('./dom/DOMParser').DOMParser,\n\tDOMTreeBuilder: require('./dom/DOMTreeBuilder').DOMTreeBuilder,\n\tJSDOMParser: require('./jsdom/JSDOMParser').JSDOMParser,\n\tJSDOMTreeBuilder: require('./jsdom/JSDOMTreeBuilder').JSDOMTreeBuilder,\n\tSAXParser: require('./sax/SAXParser').SAXParser,\n\tSAXTreeBuilder: require('./sax/SAXTreeBuilder').SAXTreeBuilder,\n\tTokenizer: require('./Tokenizer').Tokenizer\n};\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/dom/DOMParser.js":"var DOMTreeBuilder = require('./DOMTreeBuilder').DOMTreeBuilder;\nvar Tokenizer = require('../Tokenizer').Tokenizer;\n\n/**\n * @constructor\n * @param {DOMImplementation} implementation\n */\nfunction DOMParser(implementation) {\n\tthis._treeBuilder = new DOMTreeBuilder(implementation);\n\tthis._tokenizer = new Tokenizer(this._treeBuilder);\n\tthis._scriptingEnabled = false;\n}\n\n/**\n * @param {String} source HTML source to parse\n */\nDOMParser.prototype.parse = function(source) {\n\tthis._tokenizer.tokenize(source);\n\treturn this._treeBuilder.document;\n};\n\nDOMParser.prototype.parseFragment = function(source, context) {\n\tthis._treeBuilder.setFragmentContext(context);\n\tthis._tokenizer.tokenize(source);\n\treturn this._treeBuilder.getFragment();\n};\n\nObject.defineProperty(DOMParser.prototype, 'scriptingEnabled', {\n\tget: function() {\n\t\treturn this._scriptingEnabled;\n\t},\n\tset: function(value) {\n\t\tthis._scriptingEnabled = value;\n\t\tthis._treeBuilder.scriptingEnabled = value;\n\t}\n});\n\nexports.DOMParser = DOMParser;\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/dom/DOMTreeBuilder.js":"var util = require('util');\nvar TreeBuilder = require('../TreeBuilder').TreeBuilder;\n\nfunction DOMTreeBuilder(implementation) {\n    this.implementation = implementation;\n\tTreeBuilder.call(this);\n}\n\nutil.inherits(DOMTreeBuilder, TreeBuilder);\n\nDOMTreeBuilder.prototype.start = function() {\n\tthis.document = this.implementation.createDocument(null, null, null);\n};\n\nDOMTreeBuilder.prototype.insertDoctype = function(name, publicId, systemId) {\n\tvar doctype = this.implementation.createDocumentType(name, publicId, systemId);\n\tthis.document.appendChild(doctype);\n};\n\nDOMTreeBuilder.prototype.insertComment = function(data, parent) {\n\tif (!parent)\n\t\tparent = this.currentStackItem().node();\n\tvar comment = this.document.createComment(data);\n\tparent.appendChild(comment);\n};\n\nDOMTreeBuilder.prototype.appendCharacters = function(parent, data) {\n\tvar lastChild = parent.lastChild;\n\tif (lastChild && lastChild.nodeType == lastChild.TEXT_NODE) {\n\t\tlastChild.appendData(data);\n\t\treturn;\n\t}\n\tparent.appendChild(this.document.createTextNode(data));\n};\n\nDOMTreeBuilder.prototype.insertText = function(data) {\n\tif (this.redirectAttachToFosterParent && this.openElements.top.isFosterParenting()) {\n\t\tvar tableIndex = this.openElements.findIndex('table');\n\t\tvar tableItem = this.openElements.item(tableIndex);\n\t\tvar table = tableItem.node;\n\t\tif (tableIndex === 0) {\n\t\t\treturn this.appendCharacters(table, data);\n\t\t}\n\t\tvar parent = table.parentNode;\n\t\tif (parent) {\n\t\t\tvar previousSibling = table.previousSibling;\n\t\t\tif (previousSibling && previousSibling.nodeType === previousSibling.TEXT_NODE) {\n\t\t\t\tpreviousSibling.appendData(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparent.insertBefore(this.document.createTextNode(data), table);\n\t\t\treturn;\n\t\t}\n\t\tvar stackParent = this.openElements.item(tableIndex - 1).node;\n\t\tvar lastChild = stackParent.lastChild;\n\t\tif (listChild && lastChild.nodeType == lastChild.TEXT_NODE) {\n\t\t\tlastChild.appendChild(data);\n\t\t\treturn;\n\t\t}\n\t\tstackParent.appendChild(this.document.createTextNode(data));\n\t\treturn;\n\t}\n\tthis.appendCharacters(this.currentStackItem().node, data);\n};\n\nDOMTreeBuilder.prototype.createElement = function(namespaceURI, localName, attributes) {\n\tvar element = this.document.createElementNS(namespaceURI, localName);\n\tif (attributes) {\n\t\tfor (var i = 0; i < attributes.length; i++) {\n\t\t\telement.setAttributeNS(attributes[i].namespaceURI || null,\n\t\t\t\tattributes[i].nodeName, attributes[i].nodeValue);\n\t\t}\n\t}\n\treturn element;\n};\n\nDOMTreeBuilder.prototype.attachNode = function(child, parent) {\n\tparent.appendChild(child);\n};\n\nDOMTreeBuilder.prototype.attachNodeToFosterParent = function(child, table, stackParent) {\n\tvar parent = table.parentNode;\n\tif (parent)\n\t\tparent.insertBefore(child, table);\n\telse\n\t\tstackParent.appendChild(child);\n};\n\nDOMTreeBuilder.prototype.detachFromParent = function(node) {\n\tvar parent = node.parentNode;\n\tif (parent)\n\t\tparent.removeChild(node);\n};\n\nDOMTreeBuilder.prototype.reparentChildren = function(oldParent, newParent) {\n\twhile (oldParent.hasChildNodes()) {\n\t\tnewParent.appendChild(oldParent.firstChild);\n\t}\n};\n\nTreeBuilder.prototype.getFragment = function() {\n\tvar fragment = this.document.createDocumentFragment();\n\tthis.reparentChildren(this.openElements.rootNode, fragment);\n\treturn fragment;\n};\n\nDOMTreeBuilder.prototype.addAttributesToElement = function(element, attributes) {\n\tfor (var i = 0; i < attributes.length; i++) {\n\t\tif (!element.getAttributeNS(attributes[i].namespaceURI || null, attributes[i].nodeName)) {\n\t\t\telement.setAttributeNS(attributes[i].namespaceURI || null, attributes[i].nodeName, attributes[i].nodeValue);\n\t\t}\n\t}\n};\n\nexports.DOMTreeBuilder = DOMTreeBuilder;","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/TreeBuilder.js":"var assert = require('assert');\r\n\r\nvar messages = require('./messages.json');\r\nvar constants = require('./constants');\r\n\r\nvar EventEmitter = require('events').EventEmitter;\r\n\r\nvar Tokenizer = require('./Tokenizer').Tokenizer;\r\nvar ElementStack = require('./ElementStack').ElementStack;\r\nvar StackItem = require('./StackItem').StackItem;\r\n\r\nvar Marker = {};\r\n\r\nfunction isWhitespace(ch) {\r\n\treturn ch === \" \" || ch === \"\\n\" || ch === \"\\t\" || ch === \"\\r\" || ch === \"\\f\";\r\n}\r\n\r\nfunction isWhitespaceOrReplacementCharacter(ch) {\r\n\treturn isWhitespace(ch) || ch === '\\uFFFD';\r\n}\r\n\r\nfunction isAllWhitespace(characters) {\r\n\tfor (var i = 0; i < characters.length; i++) {\r\n\t\tvar ch = characters[i];\r\n\t\tif (!isWhitespace(ch))\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction isAllWhitespaceOrReplacementCharacters(characters) {\r\n\tfor (var i = 0; i < characters.length; i++) {\r\n\t\tvar ch = characters[i];\r\n\t\tif (!isWhitespaceOrReplacementCharacter(ch))\r\n\t\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction getAttribute(node, name) {\r\n\tfor (var i = 0; i < node.attributes.length; i++) {\r\n\t\tvar attribute = node.attributes[i];\r\n\t\tif (attribute.nodeName === name) {\r\n\t\t\treturn attribute;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction CharacterBuffer(characters) {\r\n\tthis.characters = characters;\r\n\tthis.current = 0;\r\n\tthis.end = this.characters.length;\r\n}\r\n\r\nCharacterBuffer.prototype.skipAtMostOneLeadingNewline = function() {\r\n\tif (this.characters[this.current] === '\\n')\r\n\t\tthis.current++;\r\n};\r\n\r\nCharacterBuffer.prototype.skipLeadingWhitespace = function() {\r\n\twhile (isWhitespace(this.characters[this.current])) {\r\n\t\tif (++this.current == this.end)\r\n\t\t\treturn;\r\n\t}\r\n};\r\n\r\nCharacterBuffer.prototype.skipLeadingNonWhitespace = function() {\r\n\twhile (!isWhitespace(this.characters[this.current])) {\r\n\t\tif (++this.current == this.end)\r\n\t\t\treturn;\r\n\t}\r\n};\r\n\r\nCharacterBuffer.prototype.takeRemaining = function() {\r\n\treturn this.characters.substring(this.current);\r\n};\r\n\r\nCharacterBuffer.prototype.takeLeadingWhitespace = function() {\r\n\tvar start = this.current;\r\n\tthis.skipLeadingWhitespace();\r\n\tif (start === this.current)\r\n\t\treturn \"\";\r\n\treturn this.characters.substring(start, this.current - start);\r\n};\r\n\r\nObject.defineProperty(CharacterBuffer.prototype, 'length', {\r\n\tget: function(){\r\n\t\treturn this.end - this.current;\r\n\t}\r\n});\r\n\r\n/**\r\n *\r\n * @constructor\r\n */\r\nfunction TreeBuilder() {\r\n\tthis.tokenizer = null;\r\n\tthis.errorHandler = null;\r\n\tthis.scriptingEnabled = false;\r\n\tthis.document = null;\r\n\tthis.head = null;\r\n\tthis.form = null;\r\n\tthis.openElements = new ElementStack();\r\n\tthis.activeFormattingElements = [];\r\n\tthis.insertionMode = null;\r\n\tthis.insertionModeName = \"\";\r\n\tthis.originalInsertionMode = \"\";\r\n\tthis.inQuirksMode = false; // TODO quirks mode\r\n\tthis.compatMode = \"no quirks\";\r\n\tthis.framesetOk = true;\r\n\tthis.redirectAttachToFosterParent = false;\r\n\tthis.selfClosingFlagAcknowledged = false;\r\n\tthis.context = \"\";\r\n\tthis.pendingTableCharacters = [];\r\n\tthis.shouldSkipLeadingNewline = false;\r\n\r\n\tvar tree = this;\r\n\tvar modes = this.insertionModes = {};\r\n\tmodes.base = {\r\n\t\tend_tag_handlers: {\"-default\": 'endTagOther'},\r\n\t\tstart_tag_handlers: {\"-default\": 'startTagOther'},\r\n\t\tprocessEOF: function() {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.openElements.length > 2) {\r\n\t\t\t\ttree.parseError('expected-closing-tag-but-got-eof');\r\n\t\t\t} else if (tree.openElements.length == 2 &&\r\n\t\t\t\ttree.openElements.item(1).localName != 'body') {\r\n\t\t\t\t// This happens for framesets or something?\r\n\t\t\t\ttree.parseError('expected-closing-tag-but-got-eof');\r\n\t\t\t} else if (tree.context && tree.openElements.length > 1) {\r\n\t\t\t\t// XXX This is not what the specification says. Not sure what to do here.\r\n\t\t\t\t//tree.parseError('eof-in-innerhtml');\r\n\t\t\t}\r\n\t\t},\r\n\t\tprocessComment: function(data) {\r\n\t\t\t// For most phases the following is forceQuirks. Where it's not it will be\r\n\t\t\t// overridden.\r\n\t\t\ttree.insertComment(data, tree.currentStackItem().node);\r\n\t\t},\r\n\t\tprocessDoctype: function(name, publicId, systemId, forceQuirks) {\r\n\t\t\ttree.parseError('unexpected-doctype');\r\n\t\t},\r\n\t\tprocessStartTag: function(name, attributes, selfClosing) {\r\n\t\t\tif (this[this.start_tag_handlers[name]]) {\r\n\t\t\t\tthis[this.start_tag_handlers[name]](name, attributes, selfClosing);\r\n\t\t\t} else if (this[this.start_tag_handlers[\"-default\"]]) {\r\n\t\t\t\tthis[this.start_tag_handlers[\"-default\"]](name, attributes, selfClosing);\r\n\t\t\t} else {\r\n\t\t\t\tthrow(new Error(\"No handler found for \"+name));\r\n\t\t\t}\r\n\t\t},\r\n\t\tprocessEndTag: function(name) {\r\n\t\t\tif (this[this.end_tag_handlers[name]]) {\r\n\t\t\t\tthis[this.end_tag_handlers[name]](name);\r\n\t\t\t} else if (this[this.end_tag_handlers[\"-default\"]]) {\r\n\t\t\t\tthis[this.end_tag_handlers[\"-default\"]](name);\r\n\t\t\t} else {\r\n\t\t\t\tthrow(new Error(\"No handler found for \"+name));\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartTagHtml: function(name, attributes) {\r\n\t\t\tmodes.inBody.startTagHtml(name, attributes);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.initial = Object.create(modes.base);\r\n\r\n\tmodes.initial.processEOF = function() {\r\n\t\ttree.parseError(\"expected-doctype-but-got-eof\");\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.initial.processComment = function(data) {\r\n\t\ttree.insertComment(data, tree.document);\r\n\t};\r\n\r\n\tmodes.initial.processDoctype = function(name, publicId, systemId, forceQuirks) {\r\n\t\ttree.insertDoctype(name || '', publicId || '', systemId || '');\r\n\r\n\t\tif (forceQuirks || name != 'html' || (publicId != null && ([\r\n\t\t\t\t\t\"+//silmaril//dtd html pro v0r11 19970101//\",\r\n\t\t\t\t\t\"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\",\r\n\t\t\t\t\t\"-//as//dtd html 3.0 aswedit + extensions//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0 level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0 level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0 strict level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0 strict level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0 strict//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 2.1e//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 3.0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 3.0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 3.2 final//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 3.2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html 3//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 3//\",\r\n\t\t\t\t\t\"-//ietf//dtd html level 3//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 0//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 1//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 2//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 3//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict level 3//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict//\",\r\n\t\t\t\t\t\"-//ietf//dtd html strict//\",\r\n\t\t\t\t\t\"-//ietf//dtd html//\",\r\n\t\t\t\t\t\"-//ietf//dtd html//\",\r\n\t\t\t\t\t\"-//ietf//dtd html//\",\r\n\t\t\t\t\t\"-//metrius//dtd metrius presentational//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 2.0 html strict//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 2.0 html//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 2.0 tables//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 3.0 html strict//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 3.0 html//\",\r\n\t\t\t\t\t\"-//microsoft//dtd internet explorer 3.0 tables//\",\r\n\t\t\t\t\t\"-//netscape comm. corp.//dtd html//\",\r\n\t\t\t\t\t\"-//netscape comm. corp.//dtd strict html//\",\r\n\t\t\t\t\t\"-//o'reilly and associates//dtd html 2.0//\",\r\n\t\t\t\t\t\"-//o'reilly and associates//dtd html extended 1.0//\",\r\n\t\t\t\t\t\"-//spyglass//dtd html 2.0 extended//\",\r\n\t\t\t\t\t\"-//sq//dtd html 2.0 hotmetal + extensions//\",\r\n\t\t\t\t\t\"-//sun microsystems corp.//dtd hotjava html//\",\r\n\t\t\t\t\t\"-//sun microsystems corp.//dtd hotjava strict html//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 3 1995-03-24//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 3.2 draft//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 3.2 final//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 3.2//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 3.2s draft//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 4.0 frameset//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 4.0 transitional//\",\r\n\t\t\t\t\t\"-//w3c//dtd html experimental 19960712//\",\r\n\t\t\t\t\t\"-//w3c//dtd html experimental 970421//\",\r\n\t\t\t\t\t\"-//w3c//dtd w3 html//\",\r\n\t\t\t\t\t\"-//w3o//dtd w3 html 3.0//\",\r\n\t\t\t\t\t\"-//webtechs//dtd mozilla html 2.0//\",\r\n\t\t\t\t\t\"-//webtechs//dtd mozilla html//\",\r\n\t\t\t\t\t\"html\"\r\n\t\t\t\t].some(publicIdStartsWith)\r\n\t\t\t\t|| [\r\n\t\t\t\t\t\"-//w3o//dtd w3 html strict 3.0//en//\",\r\n\t\t\t\t\t\"-/w3c/dtd html 4.0 transitional/en\",\r\n\t\t\t\t\t\"html\"\r\n\t\t\t\t].indexOf(publicId.toLowerCase()) > -1\r\n\t\t\t\t|| (systemId == null && [\r\n\t\t\t\t\t\"-//w3c//dtd html 4.01 transitional//\",\r\n\t\t\t\t\t\"-//w3c//dtd html 4.01 frameset//\"\r\n\t\t\t\t].some(publicIdStartsWith)))\r\n\t\t\t)\r\n\t\t\t|| (systemId != null && (systemId.toLowerCase() == \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\"))\r\n\t\t) {\r\n\t\t\ttree.compatMode = \"quirks\";\r\n\t\t\ttree.parseError(\"quirky-doctype\");\r\n\t\t} else if (publicId != null && ([\r\n\t\t\t\t\"-//w3c//dtd xhtml 1.0 transitional//\",\r\n\t\t\t\t\"-//w3c//dtd xhtml 1.0 frameset//\"\r\n\t\t\t].some(publicIdStartsWith)\r\n\t\t\t|| (systemId != null && [\r\n\t\t\t\t\"-//w3c//dtd html 4.01 transitional//\",\r\n\t\t\t\t\"-//w3c//dtd html 4.01 frameset//\"\r\n\t\t\t].indexOf(publicId.toLowerCase()) > -1))\r\n\t\t) {\r\n\t\t\ttree.compatMode = \"limited quirks\";\r\n\t\t\ttree.parseError(\"almost-standards-doctype\");\r\n\t\t} else {\r\n\t\t\tif ((publicId == \"-//W3C//DTD HTML 4.0//EN\" && (systemId == null || systemId == \"http://www.w3.org/TR/REC-html40/strict.dtd\"))\r\n\t\t\t\t|| (publicId == \"-//W3C//DTD HTML 4.01//EN\" && (systemId == null || systemId == \"http://www.w3.org/TR/html4/strict.dtd\"))\r\n\t\t\t\t|| (publicId == \"-//W3C//DTD XHTML 1.0 Strict//EN\" && (systemId == \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"))\r\n\t\t\t\t|| (publicId == \"-//W3C//DTD XHTML 1.1//EN\" && (systemId == \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"))\r\n\t\t\t) {\r\n\t\t\t\t// warning\r\n\t\t\t\t//tree.warn(\"obsolete-doctype\");\r\n\t\t\t} else if (!((systemId == null || systemId == \"about:legacy-compat\") && publicId == null)) {\r\n\t\t\t\ttree.parseError(\"unknown-doctype\");\r\n\t\t\t}\r\n\t\t}\r\n\t\ttree.setInsertionMode('beforeHTML');\r\n\t\tfunction publicIdStartsWith(string) {\r\n\t\t\treturn publicId.toLowerCase().indexOf(string) === 0;\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.initial.processCharacters = function(buffer) {\r\n\t\tbuffer.skipLeadingWhitespace();\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\ttree.parseError('expected-doctype-but-got-chars');\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.initial.processStartTag = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError('expected-doctype-but-got-start-tag', {name: name});\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.initial.processEndTag = function(name) {\r\n\t\ttree.parseError('expected-doctype-but-got-end-tag', {name: name});\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.initial.anythingElse = function() {\r\n\t\ttree.compatMode = 'quirks';\r\n\t\ttree.setInsertionMode('beforeHTML');\r\n\t};\r\n\r\n\tmodes.beforeHTML = Object.create(modes.base);\r\n\r\n\tmodes.beforeHTML.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.beforeHTML.processEOF = function() {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.beforeHTML.processComment = function(data) {\r\n\t\ttree.insertComment(data, tree.document);\r\n\t};\r\n\r\n\tmodes.beforeHTML.processCharacters = function(buffer) {\r\n\t\tbuffer.skipLeadingWhitespace();\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.beforeHTML.startTagHtml = function(name, attributes, selfClosing) {\r\n\t\ttree.insertHtmlElement(attributes);\r\n\t\ttree.setInsertionMode('beforeHead');\r\n\t};\r\n\r\n\tmodes.beforeHTML.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.beforeHTML.processEndTag = function(name) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.beforeHTML.anythingElse = function() {\r\n\t\ttree.insertHtmlElement();\r\n\t\ttree.setInsertionMode('beforeHead');\r\n\t};\r\n\r\n\tmodes.afterAfterBody = Object.create(modes.base);\r\n\r\n\tmodes.afterAfterBody.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.afterAfterBody.processComment = function(data) {\r\n\t\ttree.insertComment(data, tree.document);\r\n\t};\r\n\r\n\tmodes.afterAfterBody.processDoctype = function(data) {\r\n\t\tmodes.inBody.processDoctype(data);\r\n\t};\r\n\r\n\tmodes.afterAfterBody.startTagHtml = function(data, attributes) {\r\n\t\tmodes.inBody.startTagHtml(data, attributes);\r\n\t};\r\n\r\n\tmodes.afterAfterBody.startTagOther = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\ttree.setInsertionMode('inBody');\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.afterAfterBody.endTagOther = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\ttree.setInsertionMode('inBody');\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.afterAfterBody.processCharacters = function(data) {\r\n\t\tif (!isAllWhitespace(data.characters)) {\r\n\t\t\ttree.parseError('unexpected-char-after-body');\r\n\t\t\ttree.setInsertionMode('inBody');\r\n\t\t\treturn tree.insertionMode.processCharacters(data);\r\n\t\t}\r\n\t\tmodes.inBody.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.afterBody = Object.create(modes.base);\r\n\r\n\tmodes.afterBody.end_tag_handlers = {\r\n\t\thtml: 'endTagHtml',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.afterBody.processComment = function(data) {\r\n\t\t// This is needed because data is to be appended to the html element here\r\n\t\t// and not to whatever is currently open.\r\n\t\ttree.insertComment(data, tree.openElements.rootNode);\r\n\t};\r\n\r\n\tmodes.afterBody.processCharacters = function(data) {\r\n\t\tif (!isAllWhitespace(data.characters)) {\r\n\t\t\ttree.parseError('unexpected-char-after-body');\r\n\t\t\ttree.setInsertionMode('inBody');\r\n\t\t\treturn tree.insertionMode.processCharacters(data);\r\n\t\t}\r\n\t\tmodes.inBody.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.afterBody.processStartTag = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError('unexpected-start-tag-after-body', {name: name});\r\n\t\ttree.setInsertionMode('inBody');\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.afterBody.endTagHtml = function(name) {\r\n\t\tif (tree.context) {\r\n\t\t\ttree.parseError('end-html-in-innerhtml');\r\n\t\t} else {\r\n\t\t\t// XXX This may need to be done, not sure\r\n\t\t\t// Don't set last_phase to the current phase but to the inBody phase\r\n\t\t\t// instead. No need for extra parseErrors if there's something after\r\n\t\t\t// </html>.\r\n\t\t\t// Try <!doctype html>X</html>X for instance\r\n\t\t\ttree.setInsertionMode('afterAfterBody');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.afterBody.endTagOther = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag-after-body', {name: name});\r\n\t\ttree.setInsertionMode('inBody');\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.afterFrameset = Object.create(modes.base);\r\n\r\n\tmodes.afterFrameset.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tnoframes: 'startTagNoframes',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.afterFrameset.end_tag_handlers = {\r\n\t\thtml: 'endTagHtml',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.afterFrameset.processCharacters = function(buffer) {\r\n\t\tvar characters = buffer.takeRemaining();\r\n\t\tvar whitespace = \"\";\r\n\t\tfor (var i = 0; i < characters.length; i++) {\r\n\t\t\tvar ch = characters[i];\r\n\t\t\tif (isWhitespace(ch))\r\n\t\t\t\twhitespace += ch;\r\n\t\t}\r\n\t\tif (whitespace) {\r\n\t\t\ttree.insertText(whitespace);\r\n\t\t}\r\n\t\tif (whitespace.length < characters.length)\r\n\t\t\ttree.parseError('expected-eof-but-got-char');\r\n\t};\r\n\r\n\tmodes.afterFrameset.startTagNoframes = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.afterFrameset.startTagOther = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-start-tag-after-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.afterFrameset.endTagHtml = function(name) {\r\n\t\ttree.setInsertionMode('afterAfterFrameset');\r\n\t};\r\n\r\n\tmodes.afterFrameset.endTagOther = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-after-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.beforeHead = Object.create(modes.base);\r\n\r\n\tmodes.beforeHead.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\thead: 'startTagHead',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.beforeHead.end_tag_handlers = {\r\n\t\thtml: 'endTagImplyHead',\r\n\t\thead: 'endTagImplyHead',\r\n\t\tbody: 'endTagImplyHead',\r\n\t\tbr: 'endTagImplyHead',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.beforeHead.processEOF = function() {\r\n\t\tthis.startTagHead('head', []);\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.beforeHead.processCharacters = function(buffer) {\r\n\t\tbuffer.skipLeadingWhitespace();\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\tthis.startTagHead('head', []);\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.beforeHead.startTagHead = function(name, attributes) {\r\n\t\ttree.insertHeadElement(attributes);\r\n\t\ttree.setInsertionMode('inHead');\r\n\t};\r\n\r\n\tmodes.beforeHead.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tthis.startTagHead('head', []);\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.beforeHead.endTagImplyHead = function(name) {\r\n\t\tthis.startTagHead('head', []);\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.beforeHead.endTagOther = function(name) {\r\n\t\ttree.parseError('end-tag-after-implied-root', {name: name});\r\n\t};\r\n\r\n\tmodes.inHead = Object.create(modes.base);\r\n\r\n\tmodes.inHead.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\thead: 'startTagHead',\r\n\t\ttitle: 'startTagTitle',\r\n\t\tscript: 'startTagScript',\r\n\t\tstyle: 'startTagNoFramesStyle',\r\n\t\tnoscript: 'startTagNoScript',\r\n\t\tnoframes: 'startTagNoFramesStyle',\r\n\t\tbase: 'startTagBaseBasefontBgsoundLink',\r\n\t\tbasefont: 'startTagBaseBasefontBgsoundLink',\r\n\t\tbgsound: 'startTagBaseBasefontBgsoundLink',\r\n\t\tlink: 'startTagBaseBasefontBgsoundLink',\r\n\t\tmeta: 'startTagMeta',\r\n\t\t\"-default\": 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inHead.end_tag_handlers = {\r\n\t\thead: 'endTagHead',\r\n\t\thtml: 'endTagHtmlBodyBr',\r\n\t\tbody: 'endTagHtmlBodyBr',\r\n\t\tbr: 'endTagHtmlBodyBr',\r\n\t\t\"-default\": 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inHead.processEOF = function() {\r\n\t\tvar name = tree.currentStackItem().localName;\r\n\t\tif (['title', 'style', 'script'].indexOf(name) != -1) {\r\n\t\t\ttree.parseError(\"expected-named-closing-tag-but-got-eof\", {name: name});\r\n\t\t\ttree.popElement();\r\n\t\t}\r\n\r\n\t\tthis.anythingElse();\r\n\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.inHead.processCharacters = function(buffer) {\r\n\t\tvar leadingWhitespace = buffer.takeLeadingWhitespace();\r\n\t\tif (leadingWhitespace)\r\n\t\t\ttree.insertText(leadingWhitespace);\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.inHead.startTagHtml = function(name, attributes) {\r\n\t\tmodes.inBody.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHead.startTagHead = function(name, attributes) {\r\n\t\ttree.parseError('two-heads-are-not-better-than-one');\r\n\t};\r\n\r\n\tmodes.inHead.startTagTitle = function(name, attributes) {\r\n\t\ttree.processGenericRCDATAStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHead.startTagNoScript = function(name, attributes) {\r\n\t\tif (tree.scriptingEnabled)\r\n\t\t\treturn tree.processGenericRawTextStartTag(name, attributes);\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inHeadNoscript');\r\n\t};\r\n\r\n\tmodes.inHead.startTagNoFramesStyle = function(name, attributes) {\r\n\t\t// XXX Need to decide whether to implement the scripting disabled case\r\n\t\ttree.processGenericRawTextStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHead.startTagScript = function(name, attributes) {\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.tokenizer.setState(Tokenizer.SCRIPT_DATA);\r\n\t\ttree.originalInsertionMode = tree.insertionModeName;\r\n\t\ttree.setInsertionMode('text');\r\n\t};\r\n\r\n\tmodes.inHead.startTagBaseBasefontBgsoundLink = function(name, attributes) {\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHead.startTagMeta = function(name, attributes) {\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t\t// @todo process charset attributes\r\n\t};\r\n\r\n\tmodes.inHead.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inHead.endTagHead = function(name) {\r\n\t\tif (tree.openElements.item(tree.openElements.length - 1).localName == 'head') {\r\n\t\t\ttree.openElements.pop();\r\n\t\t} else {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: 'head'});\r\n\t\t}\r\n\t\ttree.setInsertionMode('afterHead');\r\n\t};\r\n\r\n\tmodes.inHead.endTagHtmlBodyBr = function(name) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inHead.endTagOther = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.inHead.anythingElse = function() {\r\n\t\tthis.endTagHead('head');\r\n\t};\r\n\r\n\tmodes.afterHead = Object.create(modes.base);\r\n\r\n\tmodes.afterHead.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\thead: 'startTagHead',\r\n\t\tbody: 'startTagBody',\r\n\t\tframeset: 'startTagFrameset',\r\n\t\tbase: 'startTagFromHead',\r\n\t\tlink: 'startTagFromHead',\r\n\t\tmeta: 'startTagFromHead',\r\n\t\tscript: 'startTagFromHead',\r\n\t\t// XXX noframes: 'startTagFromHead' ?\r\n\t\tstyle: 'startTagFromHead',\r\n\t\ttitle: 'startTagFromHead',\r\n\t\t\"-default\": 'startTagOther'\r\n\t};\r\n\r\n\tmodes.afterHead.end_tag_handlers = {\r\n\t\tbody: 'endTagBodyHtmlBr',\r\n\t\thtml: 'endTagBodyHtmlBr',\r\n\t\tbr: 'endTagBodyHtmlBr',\r\n\t\t\"-default\": 'endTagOther'\r\n\t};\r\n\r\n\tmodes.afterHead.processEOF = function() {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.afterHead.processCharacters = function(buffer) {\r\n\t\tvar leadingWhitespace = buffer.takeLeadingWhitespace();\r\n\t\tif (leadingWhitespace)\r\n\t\t\ttree.insertText(leadingWhitespace);\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.afterHead.startTagHtml = function(name, attributes) {\r\n\t\tmodes.inBody.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.afterHead.startTagBody = function(name, attributes) {\r\n\t\ttree.framesetOk = false;\r\n\t\ttree.insertBodyElement(attributes);\r\n\t\ttree.setInsertionMode('inBody');\r\n\t};\r\n\r\n\tmodes.afterHead.startTagFrameset = function(name, attributes) {\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inFrameset');\r\n\t};\r\n\r\n\tmodes.afterHead.startTagFromHead = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError(\"unexpected-start-tag-out-of-my-head\", {name: name});\r\n\t\t// FIXME head pointer\r\n\t\ttree.openElements.push(tree.head);\r\n\t\tmodes.inHead.processStartTag(name, attributes, selfClosing);\r\n\t\ttree.openElements.remove(tree.head);\r\n\t};\r\n\r\n\tmodes.afterHead.startTagHead = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.afterHead.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.afterHead.endTagBodyHtmlBr = function(name) {\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.afterHead.endTagOther = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.afterHead.anythingElse = function() {\r\n\t\ttree.insertBodyElement([]);\r\n\t\ttree.setInsertionMode('inBody');\r\n\t\ttree.framesetOk = true;\r\n\t}\r\n\r\n\tmodes.inBody = Object.create(modes.base);\r\n\r\n\tmodes.inBody.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\thead: 'startTagMisplaced',\r\n\t\tbase: 'startTagProcessInHead',\r\n\t\tbasefont: 'startTagProcessInHead',\r\n\t\tbgsound: 'startTagProcessInHead',\r\n\t\tlink: 'startTagProcessInHead',\r\n\t\tmeta: 'startTagProcessInHead',\r\n\t\tnoframes: 'startTagProcessInHead',\r\n\t\tscript: 'startTagProcessInHead',\r\n\t\tstyle: 'startTagProcessInHead',\r\n\t\ttitle: 'startTagProcessInHead',\r\n\t\tbody: 'startTagBody',\r\n\t\tform: 'startTagForm',\r\n\t\tplaintext: 'startTagPlaintext',\r\n\t\ta: 'startTagA',\r\n\t\tbutton: 'startTagButton',\r\n\t\txmp: 'startTagXmp',\r\n\t\ttable: 'startTagTable',\r\n\t\thr: 'startTagHr',\r\n\t\timage: 'startTagImage',\r\n\t\tinput: 'startTagInput',\r\n\t\ttextarea: 'startTagTextarea',\r\n\t\tselect: 'startTagSelect',\r\n\t\tisindex: 'startTagIsindex',\r\n\t\tapplet:\t'startTagAppletMarqueeObject',\r\n\t\tmarquee:\t'startTagAppletMarqueeObject',\r\n\t\tobject:\t'startTagAppletMarqueeObject',\r\n\t\tli: 'startTagListItem',\r\n\t\tdd: 'startTagListItem',\r\n\t\tdt: 'startTagListItem',\r\n\t\taddress: 'startTagCloseP',\r\n\t\tarticle: 'startTagCloseP',\r\n\t\taside: 'startTagCloseP',\r\n\t\tblockquote: 'startTagCloseP',\r\n\t\tcenter: 'startTagCloseP',\r\n\t\tdetails: 'startTagCloseP',\r\n\t\tdir: 'startTagCloseP',\r\n\t\tdiv: 'startTagCloseP',\r\n\t\tdl: 'startTagCloseP',\r\n\t\tfieldset: 'startTagCloseP',\r\n\t\tfigcaption: 'startTagCloseP',\r\n\t\tfigure: 'startTagCloseP',\r\n\t\tfooter: 'startTagCloseP',\r\n\t\theader: 'startTagCloseP',\r\n\t\thgroup: 'startTagCloseP',\r\n\t\tmain: 'startTagCloseP',\r\n\t\tmenu: 'startTagCloseP',\r\n\t\tnav: 'startTagCloseP',\r\n\t\tol: 'startTagCloseP',\r\n\t\tp: 'startTagCloseP',\r\n\t\tsection: 'startTagCloseP',\r\n\t\tsummary: 'startTagCloseP',\r\n\t\tul: 'startTagCloseP',\r\n\t\tlisting: 'startTagPreListing',\r\n\t\tpre: 'startTagPreListing',\r\n\t\tb: 'startTagFormatting',\r\n\t\tbig: 'startTagFormatting',\r\n\t\tcode: 'startTagFormatting',\r\n\t\tem: 'startTagFormatting',\r\n\t\tfont: 'startTagFormatting',\r\n\t\ti: 'startTagFormatting',\r\n\t\ts: 'startTagFormatting',\r\n\t\tsmall: 'startTagFormatting',\r\n\t\tstrike: 'startTagFormatting',\r\n\t\tstrong: 'startTagFormatting',\r\n\t\ttt: 'startTagFormatting',\r\n\t\tu: 'startTagFormatting',\r\n\t\tnobr: 'startTagNobr',\r\n\t\tarea: 'startTagVoidFormatting',\r\n\t\tbr: 'startTagVoidFormatting',\r\n\t\tembed: 'startTagVoidFormatting',\r\n\t\timg: 'startTagVoidFormatting',\r\n\t\tkeygen: 'startTagVoidFormatting',\r\n\t\twbr: 'startTagVoidFormatting',\r\n\t\tparam: 'startTagParamSourceTrack',\r\n\t\tsource: 'startTagParamSourceTrack',\r\n\t\ttrack: 'startTagParamSourceTrack',\r\n\t\tiframe: 'startTagIFrame',\r\n\t\tnoembed: 'startTagRawText',\r\n\t\tnoscript: 'startTagRawText',\r\n\t\th1: 'startTagHeading',\r\n\t\th2: 'startTagHeading',\r\n\t\th3: 'startTagHeading',\r\n\t\th4: 'startTagHeading',\r\n\t\th5: 'startTagHeading',\r\n\t\th6: 'startTagHeading',\r\n\t\tcaption: 'startTagMisplaced',\r\n\t\tcol: 'startTagMisplaced',\r\n\t\tcolgroup: 'startTagMisplaced',\r\n\t\tframe: 'startTagMisplaced',\r\n\t\tframeset: 'startTagFrameset',\r\n\t\ttbody: 'startTagMisplaced',\r\n\t\ttd: 'startTagMisplaced',\r\n\t\ttfoot: 'startTagMisplaced',\r\n\t\tth: 'startTagMisplaced',\r\n\t\tthead: 'startTagMisplaced',\r\n\t\ttr: 'startTagMisplaced',\r\n\t\toption: 'startTagOptionOptgroup',\r\n\t\toptgroup: 'startTagOptionOptgroup',\r\n\t\tmath: 'startTagMath',\r\n\t\tsvg: 'startTagSVG',\r\n\t\trt: 'startTagRpRt',\r\n\t\trp: 'startTagRpRt',\r\n\t\t\"-default\": 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inBody.end_tag_handlers = {\r\n\t\tp: 'endTagP',\r\n\t\tbody: 'endTagBody',\r\n\t\thtml: 'endTagHtml',\r\n\t\taddress: 'endTagBlock',\r\n\t\tarticle: 'endTagBlock',\r\n\t\taside: 'endTagBlock',\r\n\t\tblockquote: 'endTagBlock',\r\n\t\tbutton: 'endTagBlock',\r\n\t\tcenter: 'endTagBlock',\r\n\t\tdetails: 'endTagBlock',\r\n\t\tdir: 'endTagBlock',\r\n\t\tdiv: 'endTagBlock',\r\n\t\tdl: 'endTagBlock',\r\n\t\tfieldset: 'endTagBlock',\r\n\t\tfigcaption: 'endTagBlock',\r\n\t\tfigure: 'endTagBlock',\r\n\t\tfooter: 'endTagBlock',\r\n\t\theader: 'endTagBlock',\r\n\t\thgroup: 'endTagBlock',\r\n\t\tlisting: 'endTagBlock',\r\n\t\tmain: 'endTagBlock',\r\n\t\tmenu: 'endTagBlock',\r\n\t\tnav: 'endTagBlock',\r\n\t\tol: 'endTagBlock',\r\n\t\tpre: 'endTagBlock',\r\n\t\tsection: 'endTagBlock',\r\n\t\tsummary: 'endTagBlock',\r\n\t\tul: 'endTagBlock',\r\n\t\tform: 'endTagForm',\r\n\t\tapplet: 'endTagAppletMarqueeObject',\r\n\t\tmarquee: 'endTagAppletMarqueeObject',\r\n\t\tobject: 'endTagAppletMarqueeObject',\r\n\t\tdd: 'endTagListItem',\r\n\t\tdt: 'endTagListItem',\r\n\t\tli: 'endTagListItem',\r\n\t\th1: 'endTagHeading',\r\n\t\th2: 'endTagHeading',\r\n\t\th3: 'endTagHeading',\r\n\t\th4: 'endTagHeading',\r\n\t\th5: 'endTagHeading',\r\n\t\th6: 'endTagHeading',\r\n\t\ta: 'endTagFormatting',\r\n\t\tb: 'endTagFormatting',\r\n\t\tbig: 'endTagFormatting',\r\n\t\tcode: 'endTagFormatting',\r\n\t\tem: 'endTagFormatting',\r\n\t\tfont: 'endTagFormatting',\r\n\t\ti: 'endTagFormatting',\r\n\t\tnobr: 'endTagFormatting',\r\n\t\ts: 'endTagFormatting',\r\n\t\tsmall: 'endTagFormatting',\r\n\t\tstrike: 'endTagFormatting',\r\n\t\tstrong: 'endTagFormatting',\r\n\t\ttt: 'endTagFormatting',\r\n\t\tu: 'endTagFormatting',\r\n\t\tbr: 'endTagBr',\r\n\t\t\"-default\": 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inBody.processCharacters = function(buffer) {\r\n\t\tif (tree.shouldSkipLeadingNewline) {\r\n\t\t\ttree.shouldSkipLeadingNewline = false;\r\n\t\t\tbuffer.skipAtMostOneLeadingNewline();\r\n\t\t}\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\tvar characters = buffer.takeRemaining();\r\n\t\tcharacters = characters.replace(/\\u0000/g, function(match, index){\r\n\t\t\t// @todo position\r\n\t\t\ttree.parseError(\"invalid-codepoint\");\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\tif (!characters)\r\n\t\t\treturn;\r\n\t\ttree.insertText(characters);\r\n\t\tif (tree.framesetOk && !isAllWhitespaceOrReplacementCharacters(characters))\r\n\t\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagHtml = function(name, attributes) {\r\n\t\ttree.parseError('non-html-root');\r\n\t\ttree.addAttributesToElement(tree.openElements.rootNode, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagProcessInHead = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagBody = function(name, attributes) {\r\n\t\ttree.parseError('unexpected-start-tag', {name: 'body'});\r\n\t\tif (tree.openElements.length == 1 ||\r\n\t\t\ttree.openElements.item(1).localName != 'body') {\r\n\t\t\tassert.ok(tree.context);\r\n\t\t} else {\r\n\t\t\ttree.framesetOk = false;\r\n\t\t\ttree.addAttributesToElement(tree.openElements.bodyElement, attributes);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagFrameset = function(name, attributes) {\r\n\t\ttree.parseError('unexpected-start-tag', {name: 'frameset'});\r\n\t\tif (tree.openElements.length == 1 ||\r\n\t\t\ttree.openElements.item(1).localName != 'body') {\r\n\t\t\tassert.ok(tree.context);\r\n\t\t} else if (tree.framesetOk) {\r\n\t\t\ttree.detachFromParent(tree.openElements.bodyElement);\r\n\t\t\twhile (tree.openElements.length > 1)\r\n\t\t\t\ttree.openElements.pop();\r\n\t\t\ttree.insertElement(name, attributes);\r\n\t\t\ttree.setInsertionMode('inFrameset');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagCloseP = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagPreListing = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t\ttree.shouldSkipLeadingNewline = true;\r\n\t};\r\n\r\n\tmodes.inBody.startTagForm = function(name, attributes) {\r\n\t\tif (tree.form) {\r\n\t\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\t} else {\r\n\t\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\t\tthis.endTagP('p');\r\n\t\t\ttree.insertElement(name, attributes);\r\n\t\t\ttree.form = tree.currentStackItem();\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagRpRt = function(name, attributes) {\r\n\t\tif (tree.openElements.inScope('ruby')) {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem().localName != 'ruby') {\r\n\t\t\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\t\t}\r\n\t\t}\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagListItem = function(name, attributes) {\r\n\t\t/// @todo: Fix according to current spec. http://www.w3.org/TR/html5/tree-construction.html#parsing-main-inbody\r\n\t\tvar stopNames = {li: ['li'], dd: ['dd', 'dt'], dt: ['dd', 'dt']};\r\n\t\tvar stopName = stopNames[name];\r\n\r\n\t\tvar els = tree.openElements;\r\n\t\tfor (var i = els.length - 1; i >= 0; i--) {\r\n\t\t\tvar node = els.item(i);\r\n\t\t\tif (stopName.indexOf(node.localName) != -1) {\r\n\t\t\t\ttree.insertionMode.processEndTag(node.localName);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// todo isScoping()\r\n\t\t\tif (node.isSpecial() && node.localName !== 'p' && node.localName !== 'address' && node.localName !== 'div')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\r\n\t\t// Always insert an <li> element\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagPlaintext = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.tokenizer.setState(Tokenizer.PLAINTEXT);\r\n\t};\r\n\r\n\tmodes.inBody.startTagHeading = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\t\tif (tree.currentStackItem().isNumberedHeader()) {\r\n\t\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\t\ttree.popElement();\r\n\t\t}\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagA = function(name, attributes) {\r\n\t\tvar activeA = tree.elementInActiveFormattingElements('a');\r\n\t\tif (activeA) {\r\n\t\t\ttree.parseError(\"unexpected-start-tag-implies-end-tag\", {startName: \"a\", endName: \"a\"});\r\n\t\t\ttree.adoptionAgencyEndTag('a');\r\n\t\t\tif (tree.openElements.contains(activeA))\r\n\t\t\t\ttree.openElements.remove(activeA);\r\n\t\t\ttree.removeElementFromActiveFormattingElements(activeA);\r\n\t\t}\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertFormattingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagFormatting = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertFormattingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagNobr = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\tif (tree.openElements.inScope('nobr')) {\r\n\t\t\ttree.parseError(\"unexpected-start-tag-implies-end-tag\", {startName: 'nobr', endName: 'nobr'});\r\n\t\t\tthis.processEndTag('nobr');\r\n\t\t\t\t// XXX Need tests that trigger the following\r\n\t\t\t\ttree.reconstructActiveFormattingElements();\r\n\t\t}\r\n\t\ttree.insertFormattingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagButton = function(name, attributes) {\r\n\t\tif (tree.openElements.inScope('button')) {\r\n\t\t\ttree.parseError('unexpected-start-tag-implies-end-tag', {startName: 'button', endName: 'button'});\r\n\t\t\tthis.processEndTag('button');\r\n\t\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t\t} else {\r\n\t\t\ttree.framesetOk = false;\r\n\t\t\ttree.reconstructActiveFormattingElements();\r\n\t\t\ttree.insertElement(name, attributes);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagAppletMarqueeObject = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.activeFormattingElements.push(Marker);\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.endTagAppletMarqueeObject = function(name) {\r\n\t\tif (!tree.openElements.inScope(name)) {\r\n\t\t\ttree.parseError(\"unexpected-end-tag\", {name: name});\r\n\t\t} else {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem().localName != name) {\r\n\t\t\t\ttree.parseError('end-tag-too-early', {name: name});\r\n\t\t\t}\r\n\t\t\ttree.openElements.popUntilPopped(name);\r\n\t\t\ttree.clearActiveFormattingElements();\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagXmp = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.processEndTag('p');\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.processGenericRawTextStartTag(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagTable = function(name, attributes) {\r\n\t\tif (tree.compatMode !== \"quirks\")\r\n\t\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\t\tthis.processEndTag('p');\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inTable');\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagVoidFormatting = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagParamSourceTrack = function(name, attributes) {\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagHr = function(name, attributes) {\r\n\t\tif (tree.openElements.inButtonScope('p'))\r\n\t\t\tthis.endTagP('p');\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t};\r\n\r\n\tmodes.inBody.startTagImage = function(name, attributes) {\r\n\t\t// No, really...\r\n\t\ttree.parseError('unexpected-start-tag-treated-as', {originalName: 'image', newName: 'img'});\r\n\t\tthis.processStartTag('img', attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagInput = function(name, attributes) {\r\n\t\tvar currentFramesetOk = tree.framesetOk;\r\n\t\tthis.startTagVoidFormatting(name, attributes);\r\n\t\tfor (var key in attributes) {\r\n\t\t\t// input type=hidden doesn't change framesetOk\r\n\t\t\tif (attributes[key].nodeName == 'type') {\r\n\t\t\t\tif (attributes[key].nodeValue.toLowerCase() == 'hidden')\r\n\t\t\t\t\ttree.framesetOk = currentFramesetOk;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagIsindex = function(name, attributes) {\r\n\t\ttree.parseError('deprecated-tag', {name: 'isindex'});\r\n\t\ttree.selfClosingFlagAcknowledged = true;\r\n\t\tif (tree.form)\r\n\t\t\treturn;\r\n\t\tvar formAttributes = [];\r\n\t\tvar inputAttributes = [];\r\n\t\tvar prompt = \"This is a searchable index. Enter search keywords: \";\r\n\t\tfor (var key in attributes) {\r\n\t\t\tswitch (attributes[key].nodeName) {\r\n\t\t\t\tcase 'action':\r\n\t\t\t\t\tformAttributes.push({nodeName: 'action',\r\n\t\t\t\t\t\tnodeValue: attributes[key].nodeValue});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'prompt':\r\n\t\t\t\t\tprompt = attributes[key].nodeValue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tinputAttributes.push({nodeName: attributes[key].nodeName,\r\n\t\t\t\t\t\tnodeValue: attributes[key].nodeValue});\r\n\t\t\t}\r\n\t\t}\r\n\t\tinputAttributes.push({nodeName: 'name', nodeValue: 'isindex'});\r\n\t\tthis.processStartTag('form', formAttributes);\r\n\t\tthis.processStartTag('hr');\r\n\t\tthis.processStartTag('label');\r\n\t\tthis.processCharacters(new CharacterBuffer(prompt));\r\n\t\tthis.processStartTag('input', inputAttributes);\r\n\t\tthis.processEndTag('label');\r\n\t\tthis.processStartTag('hr');\r\n\t\tthis.processEndTag('form');\r\n\t};\r\n\r\n\tmodes.inBody.startTagTextarea = function(name, attributes) {\r\n\t\t// XXX Form element pointer checking here as well...\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.tokenizer.setState(Tokenizer.RCDATA);\r\n\t\ttree.originalInsertionMode = tree.insertionModeName;\r\n\t\ttree.shouldSkipLeadingNewline = true;\r\n\t\ttree.framesetOk = false;\r\n\t\ttree.setInsertionMode('text');\r\n\t};\r\n\r\n\tmodes.inBody.startTagIFrame = function(name, attributes) {\r\n\t\ttree.framesetOk = false;\r\n\t\tthis.startTagRawText(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagRawText = function(name, attributes) {\r\n\t\ttree.processGenericRawTextStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagSelect = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.framesetOk = false;\r\n\t\tvar insertionModeName = tree.insertionModeName;\r\n\t\tif (insertionModeName == 'inTable' ||\r\n\t\t\tinsertionModeName == 'inCaption' ||\r\n\t\t\tinsertionModeName == 'inColumnGroup' ||\r\n\t\t\tinsertionModeName == 'inTableBody' ||\r\n\t\t\tinsertionModeName == 'inRow' ||\r\n\t\t\tinsertionModeName == 'inCell') {\r\n\t\t\ttree.setInsertionMode('inSelectInTable');\r\n\t\t} else {\r\n\t\t\ttree.setInsertionMode('inSelect');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagMisplaced = function(name, attributes) {\r\n\t\ttree.parseError('unexpected-start-tag-ignored', {name: name});\r\n\t};\r\n\r\n\tmodes.inBody.endTagMisplaced = function(name) {\r\n\t\t// This handles elements with end tags in other insertion modes.\r\n\t\ttree.parseError(\"unexpected-end-tag\", {name: name});\r\n\t};\r\n\r\n\tmodes.inBody.endTagBr = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-treated-as\", {originalName: \"br\", newName: \"br element\"});\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertElement(name, []);\r\n\t\ttree.popElement();\r\n\t};\r\n\r\n\tmodes.inBody.startTagOptionOptgroup = function(name, attributes) {\r\n\t\tif (tree.currentStackItem().localName == 'option')\r\n\t\t\ttree.popElement();\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.startTagOther = function(name, attributes) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inBody.endTagOther = function(name) {\r\n\t\tvar node;\r\n\t\tfor (var i = tree.openElements.length - 1; i > 0; i--) {\r\n\t\t\tnode = tree.openElements.item(i);\r\n\t\t\tif (node.localName == name) {\r\n\t\t\t\ttree.generateImpliedEndTags(name);\r\n\t\t\t\tif (tree.currentStackItem().localName != name)\r\n\t\t\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t\t\t// todo optimize\r\n\t\t\t\ttree.openElements.remove_openElements_until(function(x) {return x === node;});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (node.isSpecial()) {\r\n\t\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.startTagMath = function(name, attributes, selfClosing) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\tattributes = tree.adjustMathMLAttributes(attributes);\r\n\t\tattributes = tree.adjustForeignAttributes(attributes);\r\n\t\ttree.insertForeignElement(name, attributes, \"http://www.w3.org/1998/Math/MathML\", selfClosing);\r\n\t\t// Need to get the parse error right for the case where the token\r\n\t\t// has a namespace not equal to the xmlns attribute\r\n\t};\r\n\r\n\tmodes.inBody.startTagSVG = function(name, attributes, selfClosing) {\r\n\t\ttree.reconstructActiveFormattingElements();\r\n\t\tattributes = tree.adjustSVGAttributes(attributes);\r\n\t\tattributes = tree.adjustForeignAttributes(attributes);\r\n\t\ttree.insertForeignElement(name, attributes, \"http://www.w3.org/2000/svg\", selfClosing);\r\n\t\t// Need to get the parse error right for the case where the token\r\n\t\t// has a namespace not equal to the xmlns attribute\r\n\t};\r\n\r\n\tmodes.inBody.endTagP = function(name) {\r\n\t\tif (!tree.openElements.inButtonScope('p')) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: 'p'});\r\n\t\t\tthis.startTagCloseP('p', []);\r\n\t\t\tthis.endTagP('p');\r\n\t\t} else {\r\n\t\t\ttree.generateImpliedEndTags('p');\r\n\t\t\tif (tree.currentStackItem().localName != 'p')\r\n\t\t\t\ttree.parseError('unexpected-implied-end-tag', {name: 'p'});\r\n\t\t\ttree.openElements.popUntilPopped(name);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.endTagBody = function(name) {\r\n\t\tif (!tree.openElements.inScope('body')) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/// @todo Emit parse error on end tags other than the ones listed in http://www.w3.org/TR/html5/tree-construction.html#parsing-main-inbody\r\n\t\t// ['dd', 'dt', 'li', 'optgroup', 'option', 'p', 'rp', 'rt', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'body', 'html']\r\n\t\tif (tree.currentStackItem().localName != 'body') {\r\n\t\t\ttree.parseError('expected-one-end-tag-but-got-another', {\r\n\t\t\t\texpectedName: tree.currentStackItem().localName,\r\n\t\t\t\tgotName: name\r\n\t\t\t});\r\n\t\t}\r\n\t\ttree.setInsertionMode('afterBody');\r\n\t};\r\n\r\n\tmodes.inBody.endTagHtml = function(name) {\r\n\t\tif (!tree.openElements.inScope('body')) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/// @todo Emit parse error on end tags other than the ones listed in http://www.w3.org/TR/html5/tree-construction.html#parsing-main-inbody\r\n\t\t// ['dd', 'dt', 'li', 'optgroup', 'option', 'p', 'rp', 'rt', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'body', 'html']\r\n\t\tif (tree.currentStackItem().localName != 'body') {\r\n\t\t\ttree.parseError('expected-one-end-tag-but-got-another', {\r\n\t\t\t\texpectedName: tree.currentStackItem().localName,\r\n\t\t\t\tgotName: name\r\n\t\t\t});\r\n\t\t}\r\n\t\ttree.setInsertionMode('afterBody');\r\n\t\ttree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inBody.endTagBlock = function(name) {\r\n\t\tif (!tree.openElements.inScope(name)) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem().localName != name) {\r\n\t\t\t\ttree.parseError('end-tag-too-early', {name: name});\r\n\t\t\t}\r\n\t\t\ttree.openElements.popUntilPopped(name);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.endTagForm = function(name)  {\r\n\t\tvar node = tree.form;\r\n\t\ttree.form = null;\r\n\t\tif (!node || !tree.openElements.inScope(name)) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem() != node) {\r\n\t\t\t\ttree.parseError('end-tag-too-early-ignored', {name: 'form'});\r\n\t\t\t}\r\n\t\t\ttree.openElements.remove(node);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.endTagListItem = function(name) {\r\n\t\tif (!tree.openElements.inListItemScope(name)) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\ttree.generateImpliedEndTags(name);\r\n\t\t\tif (tree.currentStackItem().localName != name)\r\n\t\t\t\ttree.parseError('end-tag-too-early', {name: name});\r\n\t\t\ttree.openElements.popUntilPopped(name);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inBody.endTagHeading = function(name) {\r\n\t\tif (!tree.openElements.hasNumberedHeaderElementInScope()) {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttree.generateImpliedEndTags();\r\n\t\tif (tree.currentStackItem().localName != name)\r\n\t\t\ttree.parseError('end-tag-too-early', {name: name});\r\n\r\n\t\ttree.openElements.remove_openElements_until(function(e) {\r\n\t\t\treturn e.isNumberedHeader();\r\n\t\t});\r\n\t};\r\n\r\n\tmodes.inBody.endTagFormatting = function(name, attributes) {\r\n\t\tif (!tree.adoptionAgencyEndTag(name))\r\n\t\t\tthis.endTagOther(name, attributes);\r\n\t};\r\n\r\n\tmodes.inCaption = Object.create(modes.base);\r\n\r\n\tmodes.inCaption.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tcaption: 'startTagTableElement',\r\n\t\tcol: 'startTagTableElement',\r\n\t\tcolgroup: 'startTagTableElement',\r\n\t\ttbody: 'startTagTableElement',\r\n\t\ttd: 'startTagTableElement',\r\n\t\ttfoot: 'startTagTableElement',\r\n\t\tthead: 'startTagTableElement',\r\n\t\ttr: 'startTagTableElement',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inCaption.end_tag_handlers = {\r\n\t\tcaption: 'endTagCaption',\r\n\t\ttable: 'endTagTable',\r\n\t\tbody: 'endTagIgnore',\r\n\t\tcol: 'endTagIgnore',\r\n\t\tcolgroup: 'endTagIgnore',\r\n\t\thtml: 'endTagIgnore',\r\n\t\ttbody: 'endTagIgnore',\r\n\t\ttd: 'endTagIgnore',\r\n\t\ttfood: 'endTagIgnore',\r\n\t\tthead: 'endTagIgnore',\r\n\t\ttr: 'endTagIgnore',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inCaption.processCharacters = function(data) {\r\n\t\tmodes.inBody.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.inCaption.startTagTableElement = function(name, attributes) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\tvar ignoreEndTag = !tree.openElements.inTableScope('caption');\r\n\t\ttree.insertionMode.processEndTag('caption');\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inCaption.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tmodes.inBody.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inCaption.endTagCaption = function(name) {\r\n\t\tif (!tree.openElements.inTableScope('caption')) {\r\n\t\t\t// context case\r\n\t\t\tassert.ok(tree.context);\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\t// AT this code is quite similar to endTagTable in inTable\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem().localName != 'caption') {\r\n\t\t\t\t// @todo this is confusing for implied end tag\r\n\t\t\t\ttree.parseError('expected-one-end-tag-but-got-another', {\r\n\t\t\t\t\tgotName: \"caption\",\r\n\t\t\t\t\texpectedName: tree.currentStackItem().localName\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttree.openElements.popUntilPopped('caption');\r\n\t\t\ttree.clearActiveFormattingElements();\r\n\t\t\ttree.setInsertionMode('inTable');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inCaption.endTagTable = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-table-in-caption\");\r\n\t\tvar ignoreEndTag = !tree.openElements.inTableScope('caption');\r\n\t\ttree.insertionMode.processEndTag('caption');\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inCaption.endTagIgnore = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.inCaption.endTagOther = function(name) {\r\n\t\tmodes.inBody.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inCell = Object.create(modes.base);\r\n\r\n\tmodes.inCell.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tcaption: 'startTagTableOther',\r\n\t\tcol: 'startTagTableOther',\r\n\t\tcolgroup: 'startTagTableOther',\r\n\t\ttbody: 'startTagTableOther',\r\n\t\ttd: 'startTagTableOther',\r\n\t\ttfoot: 'startTagTableOther',\r\n\t\tth: 'startTagTableOther',\r\n\t\tthead: 'startTagTableOther',\r\n\t\ttr: 'startTagTableOther',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inCell.end_tag_handlers = {\r\n\t\ttd: 'endTagTableCell',\r\n\t\tth: 'endTagTableCell',\r\n\t\tbody: 'endTagIgnore',\r\n\t\tcaption: 'endTagIgnore',\r\n\t\tcol: 'endTagIgnore',\r\n\t\tcolgroup: 'endTagIgnore',\r\n\t\thtml: 'endTagIgnore',\r\n\t\ttable: 'endTagImply',\r\n\t\ttbody: 'endTagImply',\r\n\t\ttfoot: 'endTagImply',\r\n\t\tthead: 'endTagImply',\r\n\t\ttr: 'endTagImply',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inCell.processCharacters = function(data) {\r\n\t\tmodes.inBody.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.inCell.startTagTableOther = function(name, attributes, selfClosing) {\r\n\t\tif (tree.openElements.inTableScope('td') || tree.openElements.inTableScope('th')) {\r\n\t\t\tthis.closeCell();\r\n\t\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t\t} else {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inCell.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tmodes.inBody.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inCell.endTagTableCell = function(name) {\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\ttree.generateImpliedEndTags(name);\r\n\t\t\tif (tree.currentStackItem().localName != name.toLowerCase()) {\r\n\t\t\t\ttree.parseError('unexpected-cell-end-tag', {name: name});\r\n\t\t\t\ttree.openElements.popUntilPopped(name);\r\n\t\t\t} else {\r\n\t\t\t\ttree.popElement();\r\n\t\t\t}\r\n\t\t\ttree.clearActiveFormattingElements();\r\n\t\t\ttree.setInsertionMode('inRow');\r\n\t\t} else {\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inCell.endTagIgnore = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.inCell.endTagImply = function(name) {\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\tthis.closeCell();\r\n\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t} else {\r\n\t\t\t// sometimes context case\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inCell.endTagOther = function(name) {\r\n\t\tmodes.inBody.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inCell.closeCell = function() {\r\n\t\tif (tree.openElements.inTableScope('td')) {\r\n\t\t\tthis.endTagTableCell('td');\r\n\t\t} else if (tree.openElements.inTableScope('th')) {\r\n\t\t\tthis.endTagTableCell('th');\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tmodes.inColumnGroup = Object.create(modes.base);\r\n\r\n\tmodes.inColumnGroup.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tcol: 'startTagCol',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inColumnGroup.end_tag_handlers = {\r\n\t\tcolgroup: 'endTagColgroup',\r\n\t\tcol: 'endTagCol',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inColumnGroup.ignoreEndTagColgroup = function() {\r\n\t\treturn tree.currentStackItem().localName == 'html';\r\n\t};\r\n\r\n\tmodes.inColumnGroup.processCharacters = function(buffer) {\r\n\t\tvar leadingWhitespace = buffer.takeLeadingWhitespace();\r\n\t\tif (leadingWhitespace)\r\n\t\t\ttree.insertText(leadingWhitespace);\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\tvar ignoreEndTag = this.ignoreEndTagColgroup();\r\n\t\tthis.endTagColgroup('colgroup');\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.inColumnGroup.startTagCol = function(name, attributes) {\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inColumnGroup.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tvar ignoreEndTag = this.ignoreEndTagColgroup();\r\n\t\tthis.endTagColgroup('colgroup');\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inColumnGroup.endTagColgroup = function(name) {\r\n\t\tif (this.ignoreEndTagColgroup()) {\r\n\t\t\t// context case\r\n\t\t\tassert.ok(tree.context);\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\ttree.popElement();\r\n\t\t\ttree.setInsertionMode('inTable');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inColumnGroup.endTagCol = function(name) {\r\n\t\ttree.parseError(\"no-end-tag\", {name: 'col'});\r\n\t};\r\n\r\n\tmodes.inColumnGroup.endTagOther = function(name) {\r\n\t\tvar ignoreEndTag = this.ignoreEndTagColgroup();\r\n\t\tthis.endTagColgroup('colgroup');\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processEndTag(name) ;\r\n\t};\r\n\r\n\tmodes.inForeignContent = Object.create(modes.base);\r\n\r\n\tmodes.inForeignContent.processStartTag = function(name, attributes, selfClosing) {\r\n\t\tif (['b', 'big', 'blockquote', 'body', 'br', 'center', 'code', 'dd', 'div', 'dl', 'dt', 'em', 'embed', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'hr', 'i', 'img', 'li', 'listing', 'menu', 'meta', 'nobr', 'ol', 'p', 'pre', 'ruby', 's', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'table', 'tt', 'u', 'ul', 'var'].indexOf(name) != -1\r\n\t\t\t\t|| (name == 'font' && attributes.some(function(attr){ return ['color', 'face', 'size'].indexOf(attr.nodeName) >= 0 }))) {\r\n\t\t\ttree.parseError('unexpected-html-element-in-foreign-content', {name: name});\r\n\t\t\twhile (tree.currentStackItem().isForeign()\r\n\t\t\t\t&& !tree.currentStackItem().isHtmlIntegrationPoint()\r\n\t\t\t\t&& !tree.currentStackItem().isMathMLTextIntegrationPoint()) {\r\n\t\t\t\ttree.openElements.pop();\r\n\t\t\t}\r\n\t\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (tree.currentStackItem().namespaceURI == \"http://www.w3.org/1998/Math/MathML\") {\r\n\t\t\tattributes = tree.adjustMathMLAttributes(attributes);\r\n\t\t}\r\n\t\tif (tree.currentStackItem().namespaceURI == \"http://www.w3.org/2000/svg\") {\r\n\t\t\tname = tree.adjustSVGTagNameCase(name);\r\n\t\t\tattributes = tree.adjustSVGAttributes(attributes);\r\n\t\t}\r\n\t\tattributes = tree.adjustForeignAttributes(attributes);\r\n\t\ttree.insertForeignElement(name, attributes, tree.currentStackItem().namespaceURI, selfClosing);\r\n\t};\r\n\r\n\tmodes.inForeignContent.processEndTag = function(name) {\r\n\t\tvar node = tree.currentStackItem();\r\n\t\tvar index = tree.openElements.length - 1;\r\n\t\tif (node.localName.toLowerCase() != name)\r\n\t\t\ttree.parseError(\"unexpected-end-tag\", {name: name});\r\n\r\n\t\twhile (true) {\r\n\t\t\tif (index === 0)\r\n\t\t\t\tbreak;\r\n\t\t\tif (node.localName.toLowerCase() == name) {\r\n\t\t\t\twhile (tree.openElements.pop() != node);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tindex -= 1;\r\n\t\t\tnode = tree.openElements.item(index);\r\n\t\t\tif (node.isForeign()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inForeignContent.processCharacters = function(buffer) {\r\n\t\tvar characters = buffer.takeRemaining();\r\n\t\tcharacters = characters.replace(/\\u0000/g, function(match, index){\r\n\t\t\t// @todo position\r\n\t\t\ttree.parseError('invalid-codepoint');\r\n\t\t\treturn '\\uFFFD';\r\n\t\t});\r\n\t\tif (tree.framesetOk && !isAllWhitespaceOrReplacementCharacters(characters))\r\n\t\t\ttree.framesetOk = false;\r\n\t\ttree.insertText(characters);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript = Object.create(modes.base);\r\n\r\n\tmodes.inHeadNoscript.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tbasefont: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\tbgsound: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\tlink: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\tmeta: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\tnoframes: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\tstyle: 'startTagBasefontBgsoundLinkMetaNoframesStyle',\r\n\t\thead: 'startTagHeadNoscript',\r\n\t\tnoscript: 'startTagHeadNoscript',\r\n\t\t\"-default\": 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.end_tag_handlers = {\r\n\t\tnoscript: 'endTagNoscript',\r\n\t\tbr: 'endTagBr',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.processCharacters = function(buffer) {\r\n\t\tvar leadingWhitespace = buffer.takeLeadingWhitespace();\r\n\t\tif (leadingWhitespace)\r\n\t\t\ttree.insertText(leadingWhitespace);\r\n\t\tif (!buffer.length)\r\n\t\t\treturn;\r\n\t\t// FIXME error message\r\n\t\ttree.parseError(\"unexpected-char-in-frameset\");\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processCharacters(buffer);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.processComment = function(data) {\r\n\t\tmodes.inHead.processComment(data);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.startTagBasefontBgsoundLinkMetaNoframesStyle = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.startTagHeadNoscript = function(name, attributes) {\r\n\t\t// FIXME error message\r\n\t\ttree.parseError(\"unexpected-start-tag-in-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.startTagOther = function(name, attributes) {\r\n\t\t// FIXME error message\r\n\t\ttree.parseError(\"unexpected-start-tag-in-frameset\", {name: name});\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.endTagBr = function(name, attributes) {\r\n\t\t// FIXME error message\r\n\t\ttree.parseError(\"unexpected-end-tag-in-frameset\", {name: name});\r\n\t\tthis.anythingElse();\r\n\t\ttree.insertionMode.processEndTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.endTagNoscript = function(name, attributes) {\r\n\t\ttree.popElement();\r\n\t\ttree.setInsertionMode('inHead');\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.endTagOther = function(name, attributes) {\r\n\t\t// FIXME error message\r\n\t\ttree.parseError(\"unexpected-end-tag-in-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.inHeadNoscript.anythingElse = function() {\r\n\t\ttree.popElement();\r\n\t\ttree.setInsertionMode('inHead');\r\n\t};\r\n\r\n\r\n\tmodes.inFrameset = Object.create(modes.base);\r\n\r\n\tmodes.inFrameset.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tframeset: 'startTagFrameset',\r\n\t\tframe: 'startTagFrame',\r\n\t\tnoframes: 'startTagNoframes',\r\n\t\t\"-default\": 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inFrameset.end_tag_handlers = {\r\n\t\tframeset: 'endTagFrameset',\r\n\t\tnoframes: 'endTagNoframes',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inFrameset.processCharacters = function(data) {\r\n\t\ttree.parseError(\"unexpected-char-in-frameset\");\r\n\t};\r\n\r\n\tmodes.inFrameset.startTagFrameset = function(name, attributes) {\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inFrameset.startTagFrame = function(name, attributes) {\r\n\t\ttree.insertSelfClosingElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inFrameset.startTagNoframes = function(name, attributes) {\r\n\t\tmodes.inBody.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inFrameset.startTagOther = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-start-tag-in-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.inFrameset.endTagFrameset = function(name, attributes) {\r\n\t\tif (tree.currentStackItem().localName == 'html') {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError(\"unexpected-frameset-in-frameset-innerhtml\");\r\n\t\t} else {\r\n\t\t\ttree.popElement();\r\n\t\t}\r\n\r\n\t\tif (!tree.context && tree.currentStackItem().localName != 'frameset') {\r\n\t\t\t// If we're not in context mode an the current node is not a \"frameset\" element (anymore) then switch\r\n\t\t\ttree.setInsertionMode('afterFrameset');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inFrameset.endTagNoframes = function(name) {\r\n\t\tmodes.inBody.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inFrameset.endTagOther = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-in-frameset\", {name: name});\r\n\t};\r\n\r\n\tmodes.inTable = Object.create(modes.base);\r\n\r\n\tmodes.inTable.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tcaption: 'startTagCaption',\r\n\t\tcolgroup: 'startTagColgroup',\r\n\t\tcol: 'startTagCol',\r\n\t\ttable: 'startTagTable',\r\n\t\ttbody: 'startTagRowGroup',\r\n\t\ttfoot: 'startTagRowGroup',\r\n\t\tthead: 'startTagRowGroup',\r\n\t\ttd: 'startTagImplyTbody',\r\n\t\tth: 'startTagImplyTbody',\r\n\t\ttr: 'startTagImplyTbody',\r\n\t\tstyle: 'startTagStyleScript',\r\n\t\tscript: 'startTagStyleScript',\r\n\t\tinput: 'startTagInput',\r\n\t\tform: 'startTagForm',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inTable.end_tag_handlers = {\r\n\t\ttable: 'endTagTable',\r\n\t\tbody: 'endTagIgnore',\r\n\t\tcaption: 'endTagIgnore',\r\n\t\tcol: 'endTagIgnore',\r\n\t\tcolgroup: 'endTagIgnore',\r\n\t\thtml: 'endTagIgnore',\r\n\t\ttbody: 'endTagIgnore',\r\n\t\ttd: 'endTagIgnore',\r\n\t\ttfoot: 'endTagIgnore',\r\n\t\tth: 'endTagIgnore',\r\n\t\tthead: 'endTagIgnore',\r\n\t\ttr: 'endTagIgnore',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inTable.processCharacters =  function(data) {\r\n\t\tif (tree.currentStackItem().isFosterParenting()) {\r\n\t\t\tvar originalInsertionMode = tree.insertionModeName;\r\n\t\t\ttree.setInsertionMode('inTableText');\r\n\t\t\ttree.originalInsertionMode = originalInsertionMode;\r\n\t\t\ttree.insertionMode.processCharacters(data);\r\n\t\t} else {\r\n\t\t\ttree.redirectAttachToFosterParent = true;\r\n\t\t\tmodes.inBody.processCharacters(data);\r\n\t\t\ttree.redirectAttachToFosterParent = false;\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTable.startTagCaption = function(name, attributes) {\r\n\t\ttree.openElements.popUntilTableScopeMarker();\r\n\t\ttree.activeFormattingElements.push(Marker);\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inCaption');\r\n\t};\r\n\r\n\tmodes.inTable.startTagColgroup = function(name, attributes) {\r\n\t\ttree.openElements.popUntilTableScopeMarker();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inColumnGroup');\r\n\t};\r\n\r\n\tmodes.inTable.startTagCol = function(name, attributes) {\r\n\t\tthis.startTagColgroup('colgroup', []);\r\n\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTable.startTagRowGroup = function(name, attributes) {\r\n\t\ttree.openElements.popUntilTableScopeMarker();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inTableBody');\r\n\t};\r\n\r\n\tmodes.inTable.startTagImplyTbody = function(name, attributes) {\r\n\t\tthis.startTagRowGroup('tbody', []);\r\n\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTable.startTagTable = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-start-tag-implies-end-tag\",\r\n\t\t\t\t{startName: \"table\", endName: \"table\"});\r\n\t\ttree.insertionMode.processEndTag('table');\r\n\t\tif (!tree.context) tree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTable.startTagStyleScript = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTable.startTagInput = function(name, attributes) {\r\n\t\tfor (var key in attributes) {\r\n\t\t\tif (attributes[key].nodeName.toLowerCase() == 'type') {\r\n\t\t\t\tif (attributes[key].nodeValue.toLowerCase() == 'hidden') {\r\n\t\t\t\t\ttree.parseError(\"unexpected-hidden-input-in-table\");\r\n\t\t\t\t\ttree.insertElement(name, attributes);\r\n\t\t\t\t\t// XXX associate with form\r\n\t\t\t\t\ttree.openElements.pop();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.startTagOther(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTable.startTagForm = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-form-in-table\");\r\n\t\tif (!tree.form) {\r\n\t\t\ttree.insertElement(name, attributes);\r\n\t\t\ttree.form = tree.currentStackItem();\r\n\t\t\ttree.openElements.pop();\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTable.startTagOther = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError(\"unexpected-start-tag-implies-table-voodoo\", {name: name});\r\n\t\ttree.redirectAttachToFosterParent = true;\r\n\t\tmodes.inBody.processStartTag(name, attributes, selfClosing);\r\n\t\ttree.redirectAttachToFosterParent = false;\r\n\t};\r\n\r\n\tmodes.inTable.endTagTable = function(name) {\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\ttree.generateImpliedEndTags();\r\n\t\t\tif (tree.currentStackItem().localName != name) {\r\n\t\t\t\ttree.parseError(\"end-tag-too-early-named\", {gotName: 'table', expectedName: tree.currentStackItem().localName});\r\n\t\t\t}\r\n\r\n\t\t\ttree.openElements.popUntilPopped('table');\r\n\t\t\ttree.resetInsertionMode();\r\n\t\t} else {\r\n\t\t\tassert.ok(tree.context);\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTable.endTagIgnore = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag\", {name: name});\r\n\t};\r\n\r\n\tmodes.inTable.endTagOther = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-implies-table-voodoo\", {name: name});\r\n\t\t// Make all the special element rearranging voodoo kick in\r\n\t\ttree.redirectAttachToFosterParent = true;\r\n\t\t// Process the end tag in the \"in body\" mode\r\n\t\tmodes.inBody.processEndTag(name);\r\n\t\ttree.redirectAttachToFosterParent = false;\r\n\t};\r\n\r\n\tmodes.inTableText = Object.create(modes.base);\r\n\r\n\tmodes.inTableText.flushCharacters = function() {\r\n\t\tvar characters = tree.pendingTableCharacters.join('');\r\n\t\tif (!isAllWhitespace(characters)) {\r\n\t\t\ttree.redirectAttachToFosterParent = true;\r\n\t\t\ttree.reconstructActiveFormattingElements();\r\n\t\t\ttree.insertText(characters);\r\n\t\t\ttree.framesetOk = false;\r\n\t\t\ttree.redirectAttachToFosterParent = false;\r\n\t\t} else {\r\n\t\t\ttree.insertText(characters);\r\n\t\t}\r\n\t\ttree.pendingTableCharacters = [];\r\n\t};\r\n\r\n\tmodes.inTableText.processComment = function(data) {\r\n\t\tthis.flushCharacters();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t\ttree.insertionMode.processComment(data);\r\n\t};\r\n\r\n\tmodes.inTableText.processEOF = function(data) {\r\n\t\tthis.flushCharacters();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.inTableText.processCharacters = function(buffer) {\r\n\t\tvar characters = buffer.takeRemaining();\r\n\t\tcharacters = characters.replace(/\\u0000/g, function(match, index){\r\n\t\t\t// @todo position\r\n\t\t\ttree.parseError(\"invalid-codepoint\");\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\tif (!characters)\r\n\t\t\treturn;\r\n\t\ttree.pendingTableCharacters.push(characters);\r\n\t};\r\n\r\n\tmodes.inTableText.processStartTag = function(name, attributes, selfClosing) {\r\n\t\tthis.flushCharacters();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t\ttree.insertionMode.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inTableText.processEndTag = function(name, attributes) {\r\n\t\tthis.flushCharacters();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t\ttree.insertionMode.processEndTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTableBody = Object.create(modes.base);\r\n\r\n\tmodes.inTableBody.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\ttr: 'startTagTr',\r\n\t\ttd: 'startTagTableCell',\r\n\t\tth: 'startTagTableCell',\r\n\t\tcaption: 'startTagTableOther',\r\n\t\tcol: 'startTagTableOther',\r\n\t\tcolgroup: 'startTagTableOther',\r\n\t\ttbody: 'startTagTableOther',\r\n\t\ttfoot: 'startTagTableOther',\r\n\t\tthead: 'startTagTableOther',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inTableBody.end_tag_handlers = {\r\n\t\ttable: 'endTagTable',\r\n\t\ttbody: 'endTagTableRowGroup',\r\n\t\ttfoot: 'endTagTableRowGroup',\r\n\t\tthead: 'endTagTableRowGroup',\r\n\t\tbody: 'endTagIgnore',\r\n\t\tcaption: 'endTagIgnore',\r\n\t\tcol: 'endTagIgnore',\r\n\t\tcolgroup: 'endTagIgnore',\r\n\t\thtml: 'endTagIgnore',\r\n\t\ttd: 'endTagIgnore',\r\n\t\tth: 'endTagIgnore',\r\n\t\ttr: 'endTagIgnore',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inTableBody.processCharacters = function(data) {\r\n\t\tmodes.inTable.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.inTableBody.startTagTr = function(name, attributes) {\r\n\t\ttree.openElements.popUntilTableBodyScopeMarker();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inRow');\r\n\t};\r\n\r\n\tmodes.inTableBody.startTagTableCell = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-cell-in-table-body\", {name: name});\r\n\t\tthis.startTagTr('tr', []);\r\n\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTableBody.startTagTableOther = function(name, attributes) {\r\n\t\t// XXX any ideas on how to share this with endTagTable\r\n\t\tif (tree.openElements.inTableScope('tbody') ||  tree.openElements.inTableScope('thead') || tree.openElements.inTableScope('tfoot')) {\r\n\t\t\ttree.openElements.popUntilTableBodyScopeMarker();\r\n\t\t\tthis.endTagTableRowGroup(tree.currentStackItem().localName);\r\n\t\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t\t} else {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError('unexpected-start-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTableBody.startTagOther = function(name, attributes) {\r\n\t\tmodes.inTable.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inTableBody.endTagTableRowGroup = function(name) {\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\ttree.openElements.popUntilTableBodyScopeMarker();\r\n\t\t\ttree.popElement();\r\n\t\t\ttree.setInsertionMode('inTable');\r\n\t\t} else {\r\n\t\t\ttree.parseError('unexpected-end-tag-in-table-body', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTableBody.endTagTable = function(name) {\r\n\t\tif (tree.openElements.inTableScope('tbody') ||  tree.openElements.inTableScope('thead') || tree.openElements.inTableScope('tfoot')) {\r\n\t\t\ttree.openElements.popUntilTableBodyScopeMarker();\r\n\t\t\tthis.endTagTableRowGroup(tree.currentStackItem().localName);\r\n\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t} else {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inTableBody.endTagIgnore = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-in-table-body\", {name: name});\r\n\t};\r\n\r\n\tmodes.inTableBody.endTagOther = function(name) {\r\n\t\tmodes.inTable.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inSelect = Object.create(modes.base);\r\n\r\n\tmodes.inSelect.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\toption: 'startTagOption',\r\n\t\toptgroup: 'startTagOptgroup',\r\n\t\tselect: 'startTagSelect',\r\n\t\tinput: 'startTagInput',\r\n\t\tkeygen: 'startTagInput',\r\n\t\ttextarea: 'startTagInput',\r\n\t\tscript: 'startTagScript',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inSelect.end_tag_handlers = {\r\n\t\toption: 'endTagOption',\r\n\t\toptgroup: 'endTagOptgroup',\r\n\t\tselect: 'endTagSelect',\r\n\t\tcaption: 'endTagTableElements',\r\n\t\ttable: 'endTagTableElements',\r\n\t\ttbody: 'endTagTableElements',\r\n\t\ttfoot: 'endTagTableElements',\r\n\t\tthead: 'endTagTableElements',\r\n\t\ttr: 'endTagTableElements',\r\n\t\ttd: 'endTagTableElements',\r\n\t\tth: 'endTagTableElements',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inSelect.processCharacters = function(buffer) {\r\n\t\tvar data = buffer.takeRemaining();\r\n\t\tdata = data.replace(/\\u0000/g, function(match, index){\r\n\t\t\t// @todo position\r\n\t\t\ttree.parseError(\"invalid-codepoint\");\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\tif (!data)\r\n\t\t\treturn;\r\n\t\ttree.insertText(data);\r\n\t};\r\n\r\n\tmodes.inSelect.startTagOption = function(name, attributes) {\r\n\t\t// we need to imply </option> if <option> is the current node\r\n\t\tif (tree.currentStackItem().localName == 'option')\r\n\t\t\ttree.popElement();\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inSelect.startTagOptgroup = function(name, attributes) {\r\n\t\tif (tree.currentStackItem().localName == 'option')\r\n\t\t\ttree.popElement();\r\n\t\tif (tree.currentStackItem().localName == 'optgroup')\r\n\t\t\ttree.popElement();\r\n\t\ttree.insertElement(name, attributes);\r\n\t};\r\n\r\n\tmodes.inSelect.endTagOption = function(name) {\r\n\t\tif (tree.currentStackItem().localName !== 'option') {\r\n\t\t\ttree.parseError('unexpected-end-tag-in-select', {name: name});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttree.popElement();\r\n\t};\r\n\r\n\tmodes.inSelect.endTagOptgroup = function(name) {\r\n\t\t// </optgroup> implicitly closes <option>\r\n\t\tif (tree.currentStackItem().localName == 'option' && tree.openElements.item(tree.openElements.length - 2).localName == 'optgroup') {\r\n\t\t\ttree.popElement();\r\n\t\t}\r\n\r\n\t\t// it also closes </optgroup>\r\n\t\tif (tree.currentStackItem().localName == 'optgroup') {\r\n\t\t\ttree.popElement();\r\n\t\t} else {\r\n\t\t\t// But nothing else\r\n\t\t\ttree.parseError('unexpected-end-tag-in-select', {name: 'optgroup'});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inSelect.startTagSelect = function(name) {\r\n\t\ttree.parseError(\"unexpected-select-in-select\");\r\n\t\tthis.endTagSelect('select');\r\n\t};\r\n\r\n\tmodes.inSelect.endTagSelect = function(name) {\r\n\t\tif (tree.openElements.inTableScope('select')) {\r\n\t\t\ttree.openElements.popUntilPopped('select');\r\n\t\t\ttree.resetInsertionMode();\r\n\t\t} else {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inSelect.startTagInput = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-input-in-select\");\r\n\t\tif (tree.openElements.inSelectScope('select')) {\r\n\t\t\tthis.endTagSelect('select');\r\n\t\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inSelect.startTagScript = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inSelect.endTagTableElements = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag-in-select', {name: name});\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\tthis.endTagSelect('select');\r\n\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inSelect.startTagOther = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-start-tag-in-select\", {name: name});\r\n\t};\r\n\r\n\tmodes.inSelect.endTagOther = function(name) {\r\n\t\ttree.parseError('unexpected-end-tag-in-select', {name: name});\r\n\t};\r\n\r\n\tmodes.inSelectInTable = Object.create(modes.base);\r\n\r\n\tmodes.inSelectInTable.start_tag_handlers = {\r\n\t\tcaption: 'startTagTable',\r\n\t\ttable: 'startTagTable',\r\n\t\ttbody: 'startTagTable',\r\n\t\ttfoot: 'startTagTable',\r\n\t\tthead: 'startTagTable',\r\n\t\ttr: 'startTagTable',\r\n\t\ttd: 'startTagTable',\r\n\t\tth: 'startTagTable',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inSelectInTable.end_tag_handlers = {\r\n\t\tcaption: 'endTagTable',\r\n\t\ttable: 'endTagTable',\r\n\t\ttbody: 'endTagTable',\r\n\t\ttfoot: 'endTagTable',\r\n\t\tthead: 'endTagTable',\r\n\t\ttr: 'endTagTable',\r\n\t\ttd: 'endTagTable',\r\n\t\tth: 'endTagTable',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inSelectInTable.processCharacters = function(data) {\r\n\t\tmodes.inSelect.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.inSelectInTable.startTagTable = function(name, attributes) {\r\n\t\ttree.parseError(\"unexpected-table-element-start-tag-in-select-in-table\", {name: name});\r\n\t\tthis.endTagOther(\"select\");\r\n\t\ttree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inSelectInTable.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tmodes.inSelect.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inSelectInTable.endTagTable = function(name) {\r\n\t\ttree.parseError(\"unexpected-table-element-end-tag-in-select-in-table\", {name: name});\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\tthis.endTagOther(\"select\");\r\n\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inSelectInTable.endTagOther = function(name) {\r\n\t\tmodes.inSelect.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inRow = Object.create(modes.base);\r\n\r\n\tmodes.inRow.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\ttd: 'startTagTableCell',\r\n\t\tth: 'startTagTableCell',\r\n\t\tcaption: 'startTagTableOther',\r\n\t\tcol: 'startTagTableOther',\r\n\t\tcolgroup: 'startTagTableOther',\r\n\t\ttbody: 'startTagTableOther',\r\n\t\ttfoot: 'startTagTableOther',\r\n\t\tthead: 'startTagTableOther',\r\n\t\ttr: 'startTagTableOther',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.inRow.end_tag_handlers = {\r\n\t\ttr: 'endTagTr',\r\n\t\ttable: 'endTagTable',\r\n\t\ttbody: 'endTagTableRowGroup',\r\n\t\ttfoot: 'endTagTableRowGroup',\r\n\t\tthead: 'endTagTableRowGroup',\r\n\t\tbody: 'endTagIgnore',\r\n\t\tcaption: 'endTagIgnore',\r\n\t\tcol: 'endTagIgnore',\r\n\t\tcolgroup: 'endTagIgnore',\r\n\t\thtml: 'endTagIgnore',\r\n\t\ttd: 'endTagIgnore',\r\n\t\tth: 'endTagIgnore',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.inRow.processCharacters = function(data) {\r\n\t\tmodes.inTable.processCharacters(data);\r\n\t};\r\n\r\n\tmodes.inRow.startTagTableCell = function(name, attributes) {\r\n\t\ttree.openElements.popUntilTableRowScopeMarker();\r\n\t\ttree.insertElement(name, attributes);\r\n\t\ttree.setInsertionMode('inCell');\r\n\t\ttree.activeFormattingElements.push(Marker);\r\n\t};\r\n\r\n\tmodes.inRow.startTagTableOther = function(name, attributes) {\r\n\t\tvar ignoreEndTag = this.ignoreEndTagTr();\r\n\t\tthis.endTagTr('tr');\r\n\t\t// XXX how are we sure it's always ignored in the context case?\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.inRow.startTagOther = function(name, attributes, selfClosing) {\r\n\t\tmodes.inTable.processStartTag(name, attributes, selfClosing);\r\n\t};\r\n\r\n\tmodes.inRow.endTagTr = function(name) {\r\n\t\tif (this.ignoreEndTagTr()) {\r\n\t\t\tassert.ok(tree.context);\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t} else {\r\n\t\t\ttree.openElements.popUntilTableRowScopeMarker();\r\n\t\t\ttree.popElement();\r\n\t\t\ttree.setInsertionMode('inTableBody');\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inRow.endTagTable = function(name) {\r\n\t\tvar ignoreEndTag = this.ignoreEndTagTr();\r\n\t\tthis.endTagTr('tr');\r\n\t\t// Reprocess the current tag if the tr end tag was not ignored\r\n\t\t// XXX how are we sure it's always ignored in the context case?\r\n\t\tif (!ignoreEndTag) tree.insertionMode.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inRow.endTagTableRowGroup = function(name) {\r\n\t\tif (tree.openElements.inTableScope(name)) {\r\n\t\t\tthis.endTagTr('tr');\r\n\t\t\ttree.insertionMode.processEndTag(name);\r\n\t\t} else {\r\n\t\t\t// context case\r\n\t\t\ttree.parseError('unexpected-end-tag', {name: name});\r\n\t\t}\r\n\t};\r\n\r\n\tmodes.inRow.endTagIgnore = function(name) {\r\n\t\ttree.parseError(\"unexpected-end-tag-in-table-row\", {name: name});\r\n\t};\r\n\r\n\tmodes.inRow.endTagOther = function(name) {\r\n\t\tmodes.inTable.processEndTag(name);\r\n\t};\r\n\r\n\tmodes.inRow.ignoreEndTagTr = function() {\r\n\t\treturn !tree.openElements.inTableScope('tr');\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset = Object.create(modes.base);\r\n\r\n\tmodes.afterAfterFrameset.start_tag_handlers = {\r\n\t\thtml: 'startTagHtml',\r\n\t\tnoframes: 'startTagNoFrames',\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset.processEOF = function() {};\r\n\r\n\tmodes.afterAfterFrameset.processComment = function(data) {\r\n\t\ttree.insertComment(data, tree.document);\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset.processCharacters = function(buffer) {\r\n\t\tvar characters = buffer.takeRemaining();\r\n\t\tvar whitespace = \"\";\r\n\t\tfor (var i = 0; i < characters.length; i++) {\r\n\t\t\tvar ch = characters[i];\r\n\t\t\tif (isWhitespace(ch))\r\n\t\t\t\twhitespace += ch;\r\n\t\t}\r\n\t\tif (whitespace) {\r\n\t\t\ttree.reconstructActiveFormattingElements();\r\n\t\t\ttree.insertText(whitespace);\r\n\t\t}\r\n\t\tif (whitespace.length < characters.length)\r\n\t\t\ttree.parseError('expected-eof-but-got-char');\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset.startTagNoFrames = function(name, attributes) {\r\n\t\tmodes.inHead.processStartTag(name, attributes);\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset.startTagOther = function(name, attributes, selfClosing) {\r\n\t\ttree.parseError('expected-eof-but-got-start-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.afterAfterFrameset.processEndTag = function(name, attributes) {\r\n\t\ttree.parseError('expected-eof-but-got-end-tag', {name: name});\r\n\t};\r\n\r\n\tmodes.text = Object.create(modes.base);\r\n\r\n\tmodes.text.start_tag_handlers = {\r\n\t\t'-default': 'startTagOther'\r\n\t};\r\n\r\n\tmodes.text.end_tag_handlers = {\r\n\t\tscript: 'endTagScript',\r\n\t\t'-default': 'endTagOther'\r\n\t};\r\n\r\n\tmodes.text.processCharacters = function(buffer) {\r\n\t\tif (tree.shouldSkipLeadingNewline) {\r\n\t\t\ttree.shouldSkipLeadingNewline = false;\r\n\t\t\tbuffer.skipAtMostOneLeadingNewline();\r\n\t\t}\r\n\t\tvar data = buffer.takeRemaining();\r\n\t\tif (!data)\r\n\t\t\treturn;\r\n\t\ttree.insertText(data);\r\n\t};\r\n\r\n\tmodes.text.processEOF = function() {\r\n\t\ttree.parseError(\"expected-named-closing-tag-but-got-eof\",\r\n\t\t\t{name: tree.currentStackItem().localName});\r\n\t\ttree.openElements.pop();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t\ttree.insertionMode.processEOF();\r\n\t};\r\n\r\n\tmodes.text.startTagOther = function(name) {\r\n\t\tthrow \"Tried to process start tag \" + name + \" in RCDATA/RAWTEXT mode\";\r\n\t};\r\n\r\n\tmodes.text.endTagScript = function(name) {\r\n\t\tvar node = tree.openElements.pop();\r\n\t\tassert.ok(node.localName == 'script');\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t};\r\n\r\n\tmodes.text.endTagOther = function(name) {\r\n\t\ttree.openElements.pop();\r\n\t\ttree.setInsertionMode(tree.originalInsertionMode);\r\n\t};\r\n}\r\n\r\nTreeBuilder.prototype.setInsertionMode = function(name) {\r\n\tthis.insertionMode = this.insertionModes[name];\r\n\tthis.insertionModeName = name;\r\n};\r\n\r\n/**\r\n * Adoption agency algorithm (http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoption-agency-algorithm)\r\n * @param {String} name A tag name subject for which the algorithm is being run\r\n * @return {Boolean} Returns false if the algorithm was aborted\r\n */\r\nTreeBuilder.prototype.adoptionAgencyEndTag = function(name) {\r\n\tvar outerIterationLimit = 8;\r\n\tvar innerIterationLimit = 3;\r\n\tvar formattingElement;\r\n\r\n\tfunction isActiveFormattingElement(el) {\r\n\t\treturn el === formattingElement;\r\n\t}\r\n\r\n\tvar outerLoopCounter = 0;\r\n\r\n\twhile (outerLoopCounter++ < outerIterationLimit) {\r\n\t\t// 4.\r\n\t\tformattingElement = this.elementInActiveFormattingElements(name);\r\n\r\n\t\tif (!formattingElement || (this.openElements.contains(formattingElement) && !this.openElements.inScope(formattingElement.localName))) {\r\n\t\t\tthis.parseError('adoption-agency-1.1', {name: name});\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!this.openElements.contains(formattingElement)) {\r\n\t\t\tthis.parseError('adoption-agency-1.2', {name: name});\r\n\t\t\tthis.removeElementFromActiveFormattingElements(formattingElement);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!this.openElements.inScope(formattingElement.localName)) {\r\n\t\t\tthis.parseError('adoption-agency-4.4', {name: name});\r\n\t\t}\r\n\r\n\t\tif (formattingElement != this.currentStackItem()) {\r\n\t\t\tthis.parseError('adoption-agency-1.3', {name: name});\r\n\t\t}\r\n\r\n\t\t// Start of the adoption agency algorithm proper\r\n\t\t// todo ElementStack\r\n\t\tvar furthestBlock = this.openElements.furthestBlockForFormattingElement(formattingElement.node);\r\n\r\n\t\tif (!furthestBlock) {\r\n\t\t\tthis.openElements.remove_openElements_until(isActiveFormattingElement);\r\n\t\t\tthis.removeElementFromActiveFormattingElements(formattingElement);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar afeIndex = this.openElements.elements.indexOf(formattingElement);\r\n\t\tvar commonAncestor = this.openElements.item(afeIndex - 1);\r\n\r\n\t\tvar bookmark = this.activeFormattingElements.indexOf(formattingElement);\r\n\r\n\t\tvar node = furthestBlock;\r\n\t\tvar lastNode = furthestBlock;\r\n\t\tvar index = this.openElements.elements.indexOf(node);\r\n\r\n\t\tvar innerLoopCounter = 0;\r\n\t\twhile (innerLoopCounter++ < innerIterationLimit) {\r\n\t\t\tindex -= 1;\r\n\t\t\tnode = this.openElements.item(index);\r\n\t\t\tif (this.activeFormattingElements.indexOf(node) < 0) {\r\n\t\t\t\tthis.openElements.elements.splice(index, 1);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (node == formattingElement)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (lastNode == furthestBlock)\r\n\t\t\t\tbookmark = this.activeFormattingElements.indexOf(node) + 1;\r\n\r\n\t\t\tvar clone = this.createElement(node.namespaceURI, node.localName, node.attributes);\r\n\t\t\tvar newNode = new StackItem(node.namespaceURI, node.localName, node.attributes, clone);\r\n\r\n\t\t\tthis.activeFormattingElements[this.activeFormattingElements.indexOf(node)] = newNode;\r\n\t\t\tthis.openElements.elements[this.openElements.elements.indexOf(node)] = newNode;\r\n\r\n\t\t\tnode = newNode;\r\n\t\t\tthis.detachFromParent(lastNode.node);\r\n\t\t\tthis.attachNode(lastNode.node, node.node);\r\n\t\t\tlastNode = node;\r\n\t\t}\r\n\r\n\t\tthis.detachFromParent(lastNode.node);\r\n\t\tif (commonAncestor.isFosterParenting()) {\r\n\t\t\tthis.insertIntoFosterParent(lastNode.node);\r\n\t\t} else {\r\n\t\t\tthis.attachNode(lastNode.node, commonAncestor.node);\r\n\t\t}\r\n\r\n\t\tvar clone = this.createElement(\"http://www.w3.org/1999/xhtml\", formattingElement.localName, formattingElement.attributes);\r\n\t\tvar formattingClone = new StackItem(formattingElement.namespaceURI, formattingElement.localName, formattingElement.attributes, clone);\r\n\r\n\t\tthis.reparentChildren(furthestBlock.node, clone);\r\n\t\tthis.attachNode(clone, furthestBlock.node);\r\n\r\n\t\tthis.removeElementFromActiveFormattingElements(formattingElement);\r\n\t\tthis.activeFormattingElements.splice(Math.min(bookmark, this.activeFormattingElements.length), 0, formattingClone);\r\n\r\n\t\tthis.openElements.remove(formattingElement);\r\n\t\tthis.openElements.elements.splice(this.openElements.elements.indexOf(furthestBlock) + 1, 0, formattingClone);\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nTreeBuilder.prototype.start = function() {\r\n\tthrow \"Not mplemented\";\r\n};\r\n\r\nTreeBuilder.prototype.startTokenization = function(tokenizer) {\r\n\tthis.tokenizer = tokenizer;\r\n\tthis.compatMode = \"no quirks\";\r\n\tthis.originalInsertionMode = \"initial\";\r\n\tthis.framesetOk = true;\r\n\tthis.openElements = new ElementStack();\r\n\tthis.activeFormattingElements = [];\r\n\tthis.start();\r\n\tif (this.context) {\r\n\t\tswitch(this.context) {\r\n\t\tcase 'title':\r\n\t\tcase 'textarea':\r\n\t\t\tthis.tokenizer.setState(Tokenizer.RCDATA);\r\n\t\t\tbreak;\r\n\t\tcase 'style':\r\n\t\tcase 'xmp':\r\n\t\tcase 'iframe':\r\n\t\tcase 'noembed':\r\n\t\tcase 'noframes':\r\n\t\t\tthis.tokenizer.setState(Tokenizer.RAWTEXT);\r\n\t\t\tbreak;\r\n\t\tcase 'script':\r\n\t\t\tthis.tokenizer.setState(Tokenizer.SCRIPT_DATA);\r\n\t\t\tbreak;\r\n\t\tcase 'noscript':\r\n\t\t\tif (this.scriptingEnabled)\r\n\t\t\t\tthis.tokenizer.setState(Tokenizer.RAWTEXT);\r\n\t\t\tbreak;\r\n\t\tcase 'plaintext':\r\n\t\t\tthis.tokenizer.setState(Tokenizer.PLAINTEXT);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.insertHtmlElement();\r\n\t\tthis.resetInsertionMode();\r\n\t\t// todo form pointer\r\n\t} else {\r\n\t\tthis.setInsertionMode('initial');\r\n\t}\r\n};\r\n\r\nTreeBuilder.prototype.processToken = function(token) {\r\n\tthis.selfClosingFlagAcknowledged = false;\r\n\r\n\tvar currentNode = this.openElements.top || null;\r\n\tvar insertionMode;\r\n\tif (!currentNode || !currentNode.isForeign() ||\r\n\t\t(currentNode.isMathMLTextIntegrationPoint() &&\r\n\t\t\t((token.type == 'StartTag' &&\r\n\t\t\t\t\t!(token.name in {mglyph:0, malignmark:0})) ||\r\n\t\t\t\t(token.type === 'Characters'))\r\n\t\t) ||\r\n\t\t(currentNode.namespaceURI == \"http://www.w3.org/1998/Math/MathML\" &&\r\n\t\t\tcurrentNode.localName == 'annotation-xml' &&\r\n\t\t\ttoken.type == 'StartTag' && token.name == 'svg'\r\n\t\t) ||\r\n\t\t(currentNode.isHtmlIntegrationPoint() &&\r\n\t\t\ttoken.type in {StartTag:0, Characters:0}\r\n\t\t) ||\r\n\t\ttoken.type == 'EOF'\r\n\t) {\r\n\t\tinsertionMode = this.insertionMode;\r\n\t} else {\r\n\t\tinsertionMode = this.insertionModes.inForeignContent;\r\n\t}\r\n\tswitch(token.type) {\r\n\tcase 'Characters':\r\n\t\tvar buffer = new CharacterBuffer(token.data);\r\n\t\tinsertionMode.processCharacters(buffer);\r\n\t\tbreak;\r\n\tcase 'Comment':\r\n\t\tinsertionMode.processComment(token.data);\r\n\t\tbreak;\r\n\tcase 'StartTag':\r\n\t\tinsertionMode.processStartTag(token.name, token.data, token.selfClosing);\r\n\t\tbreak;\r\n\tcase 'EndTag':\r\n\t\tinsertionMode.processEndTag(token.name);\r\n\t\tbreak;\r\n\tcase 'Doctype':\r\n\t\tinsertionMode.processDoctype(token.name, token.publicId, token.systemId, token.forceQuirks);\r\n\t\tbreak;\r\n\tcase 'EOF':\r\n\t\tinsertionMode.processEOF();\r\n\t\tbreak;\r\n\t}\r\n};\r\n\r\n/**\r\n *\r\n * @return {Boolean}\r\n */\r\nTreeBuilder.prototype.isCdataSectionAllowed = function() {\r\n\treturn this.openElements.length > 0 && this.currentStackItem().isForeign();\r\n};\r\n\r\n/**\r\n *\r\n * @return {Boolean}\r\n */\r\nTreeBuilder.prototype.isSelfClosingFlagAcknowledged = function() {\r\n\treturn this.selfClosingFlagAcknowledged;\r\n};\r\n\r\nTreeBuilder.prototype.createElement = function(namespaceURI, localName, attributes) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.attachNode = function(child, parent) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.attachNodeToFosterParent = function(child, table, stackParent) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.detachFromParent = function(node) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.addAttributesToElement = function(element, attributes) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.insertHtmlElement = function(attributes) {\r\n\tvar root = this.createElement(\"http://www.w3.org/1999/xhtml\", 'html', attributes);\r\n\tthis.attachNode(root, this.document);\r\n\tthis.openElements.pushHtmlElement(new StackItem(\"http://www.w3.org/1999/xhtml\", 'html', attributes, root));\r\n\treturn root;\r\n};\r\n\r\nTreeBuilder.prototype.insertHeadElement = function(attributes) {\r\n\tvar element = this.createElement(\"http://www.w3.org/1999/xhtml\", \"head\", attributes);\r\n\tthis.head = new StackItem(\"http://www.w3.org/1999/xhtml\", \"head\", attributes, element);\r\n\tthis.attachNode(element, this.openElements.top.node);\r\n\tthis.openElements.pushHeadElement(this.head);\r\n\treturn element;\r\n};\r\n\r\nTreeBuilder.prototype.insertBodyElement = function(attributes) {\r\n\tvar element = this.createElement(\"http://www.w3.org/1999/xhtml\", \"body\", attributes);\r\n\tthis.attachNode(element, this.openElements.top.node);\r\n\tthis.openElements.pushBodyElement(new StackItem(\"http://www.w3.org/1999/xhtml\", \"body\", attributes, element));\r\n\treturn element;\r\n};\r\n\r\nTreeBuilder.prototype.insertIntoFosterParent = function(node) {\r\n\tvar tableIndex = this.openElements.findIndex('table');\r\n\tvar tableElement = this.openElements.item(tableIndex).node;\r\n\tif (tableIndex === 0)\r\n\t\treturn this.attachNode(node, tableElement);\r\n\tthis.attachNodeToFosterParent(node, tableElement, this.openElements.item(tableIndex - 1).node);\r\n};\r\n\r\nTreeBuilder.prototype.insertElement = function(name, attributes, namespaceURI, selfClosing) {\r\n\tif (!namespaceURI)\r\n\t\tnamespaceURI = \"http://www.w3.org/1999/xhtml\";\r\n\tvar element = this.createElement(namespaceURI, name, attributes);\r\n\tif (this.shouldFosterParent())\r\n\t\tthis.insertIntoFosterParent(element);\r\n\telse\r\n\t\tthis.attachNode(element, this.openElements.top.node);\r\n\tif (!selfClosing)\r\n\t\tthis.openElements.push(new StackItem(namespaceURI, name, attributes, element));\r\n};\r\n\r\nTreeBuilder.prototype.insertFormattingElement = function(name, attributes) {\r\n\tthis.insertElement(name, attributes, \"http://www.w3.org/1999/xhtml\");\r\n\tthis.appendElementToActiveFormattingElements(this.currentStackItem());\r\n};\r\n\r\nTreeBuilder.prototype.insertSelfClosingElement = function(name, attributes) {\r\n\tthis.selfClosingFlagAcknowledged = true;\r\n\tthis.insertElement(name, attributes, \"http://www.w3.org/1999/xhtml\", true);\r\n};\r\n\r\nTreeBuilder.prototype.insertForeignElement = function(name, attributes, namespaceURI, selfClosing) {\r\n\tif (selfClosing)\r\n\t\tthis.selfClosingFlagAcknowledged = true;\r\n\tthis.insertElement(name, attributes, namespaceURI, selfClosing);\r\n};\r\n\r\nTreeBuilder.prototype.insertComment = function(data, parent) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.insertDoctype = function(name, publicId, systemId) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\nTreeBuilder.prototype.insertText = function(data) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\n/**\r\n * Returns topmost open element\r\n * @return {StackItem}\r\n */\r\nTreeBuilder.prototype.currentStackItem = function() {\r\n\treturn this.openElements.top;\r\n};\r\n\r\n/**\r\n * Populates current open element\r\n * @return {StackItem}\r\n */\r\nTreeBuilder.prototype.popElement = function() {\r\n\treturn this.openElements.pop();\r\n};\r\n\r\n/**\r\n * Returns true if redirect is required and current open element causes foster parenting\r\n * @return {Boolean}\r\n */\r\nTreeBuilder.prototype.shouldFosterParent = function() {\r\n\treturn this.redirectAttachToFosterParent && this.currentStackItem().isFosterParenting();\r\n};\r\n\r\n/**\r\n * Implements http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#closing-elements-that-have-implied-end-tags\r\n * @param {String} [exclude] Ignore specific tag name\r\n */\r\nTreeBuilder.prototype.generateImpliedEndTags = function(exclude) {\r\n\t// FIXME get rid of the recursion\r\n\tvar name = this.openElements.top.localName;\r\n\tif (['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'].indexOf(name) != -1 && name != exclude) {\r\n\t\tthis.popElement();\r\n\t\tthis.generateImpliedEndTags(exclude);\r\n\t}\r\n};\r\n\r\n/**\r\n * Performs http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#reconstruct-the-active-formatting-elements\r\n */\r\nTreeBuilder.prototype.reconstructActiveFormattingElements = function() {\r\n\t// Within this algorithm the order of steps decribed in the specification\r\n\t// is not quite the same as the order of steps in the code. It should still\r\n\t// do the same though.\r\n\r\n\t// Step 1: stop if there's nothing to do\r\n\tif (this.activeFormattingElements.length === 0)\r\n\t\treturn;\r\n\r\n\t// Step 2 and 3: start with the last element\r\n\tvar i = this.activeFormattingElements.length - 1;\r\n\tvar entry = this.activeFormattingElements[i];\r\n\tif (entry == Marker || this.openElements.contains(entry))\r\n\t\treturn;\r\n\r\n\twhile (entry != Marker && !this.openElements.contains(entry)) {\r\n\t\ti -= 1;\r\n\t\tentry = this.activeFormattingElements[i];\r\n\t\tif (!entry)\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\twhile (true) {\r\n\t\ti += 1;\r\n\t\tentry = this.activeFormattingElements[i];\r\n\t\tthis.insertElement(entry.localName, entry.attributes);\r\n\t\tvar element = this.currentStackItem();\r\n\t\tthis.activeFormattingElements[i] = element;\r\n\t\tif (element == this.activeFormattingElements[this.activeFormattingElements.length -1])\r\n\t\t\tbreak;\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n *\r\n * @param {StackItem} item\r\n */\r\nTreeBuilder.prototype.ensureNoahsArkCondition = function(item) {\r\n\tvar kNoahsArkCapacity = 3;\r\n\tif (this.activeFormattingElements.length < kNoahsArkCapacity)\r\n\t\treturn;\r\n\tvar candidates = [];\r\n\tvar newItemAttributeCount = item.attributes.length;\r\n\tfor (var i = this.activeFormattingElements.length - 1; i >= 0; i--) {\r\n\t\tvar candidate = this.activeFormattingElements[i];\r\n\t\tif (candidate === Marker)\r\n\t\t\tbreak;\r\n\t\tif (item.localName !== candidate.localName || item.namespaceURI !== candidate.namespaceURI)\r\n\t\t\tcontinue;\r\n\t\tif (candidate.attributes.length != newItemAttributeCount)\r\n\t\t\tcontinue;\r\n\t\tcandidates.push(candidate);\r\n\t}\r\n\tif (candidates.length < kNoahsArkCapacity)\r\n\t\treturn;\r\n\r\n\tvar remainingCandidates = [];\r\n\tvar attributes = item.attributes;\r\n\tfor (var i = 0; i < attributes.length; i++) {\r\n\t\tvar attribute = attributes[i];\r\n\r\n\t\tfor (var j = 0; j < candidates.length; j++) {\r\n\t\t\tvar candidate = candidates[j];\r\n\t\t\tvar candidateAttribute = getAttribute(candidate, attribute.nodeName);\r\n\t\t\tif (candidateAttribute && candidateAttribute.nodeValue === attribute.nodeValue)\r\n\t\t\t\tremainingCandidates.push(candidate);\r\n\t\t}\r\n\t\tif (remainingCandidates.length < kNoahsArkCapacity)\r\n\t\t\treturn;\r\n\t\tcandidates = remainingCandidates;\r\n\t\tremainingCandidates = [];\r\n\t}\r\n\t// Inductively, we shouldn't spin this loop very many times. It's possible,\r\n\t// however, that we wil spin the loop more than once because of how the\r\n\t// formatting element list gets permuted.\r\n\tfor (var i = kNoahsArkCapacity - 1; i < candidates.length; i++)\r\n\t\tthis.removeElementFromActiveFormattingElements(candidates[i]);\r\n};\r\n\r\n/**\r\n *\r\n * @param {StackItem} item\r\n */\r\nTreeBuilder.prototype.appendElementToActiveFormattingElements = function(item) {\r\n\tthis.ensureNoahsArkCondition(item);\r\n\tthis.activeFormattingElements.push(item);\r\n};\r\n\r\n/**\r\n *\r\n * @param {StackItem} item\r\n */\r\nTreeBuilder.prototype.removeElementFromActiveFormattingElements = function(item) {\r\n\tvar index = this.activeFormattingElements.indexOf(item);\r\n\tif (index >= 0)\r\n\t\tthis.activeFormattingElements.splice(index, 1);\r\n};\r\n\r\nTreeBuilder.prototype.elementInActiveFormattingElements = function(name) {\r\n\tvar els = this.activeFormattingElements;\r\n\tfor (var i = els.length - 1; i >= 0; i--) {\r\n\t\tif (els[i] == Marker) break;\r\n\t\tif (els[i].localName == name) return els[i];\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nTreeBuilder.prototype.clearActiveFormattingElements = function() {\r\n    while (!(this.activeFormattingElements.length === 0 || this.activeFormattingElements.pop() == Marker));\r\n};\r\n\r\nTreeBuilder.prototype.reparentChildren = function(oldParent, newParent) {\r\n\tthrow new Error(\"Not implemented\");\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} context A context element name for fragment parsing\r\n */\r\nTreeBuilder.prototype.setFragmentContext = function(context) {\r\n\t// Steps 4.2-4.6 of the HTML5 Fragment Case parsing algorithm:\r\n\t// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#fragment-case\r\n\t// For efficiency, we skip step 4.2 (\"Let root be a new html element with no attributes\")\r\n\t// and instead use the DocumentFragment as a root node.\r\n\t//m_tree.openElements()->pushRootNode(HTMLStackItem::create(fragment, HTMLStackItem::ItemForDocumentFragmentNode));\r\n\tthis.context = context;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} code\r\n * @param {Object} [args]\r\n */\r\nTreeBuilder.prototype.parseError = function(code, args) {\r\n\t// FIXME: this.errors.push([this.tokenizer.position, code, data]);\r\n\tif (!this.errorHandler)\r\n\t\treturn;\r\n\tvar message = formatMessage(messages[code], args);\r\n\tthis.errorHandler.error(message, this.tokenizer._inputStream.location(), code);\r\n};\r\n\r\n/**\r\n * Resets the insertion mode (http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#reset-the-insertion-mode-appropriately)\r\n */\r\nTreeBuilder.prototype.resetInsertionMode = function() {\r\n\tvar last = false;\r\n\tvar node = null;\r\n\tfor (var i = this.openElements.length - 1; i >= 0; i--) {\r\n\t\tnode = this.openElements.item(i);\r\n\t\tif (i === 0) {\r\n\t\t\tassert.ok(this.context);\r\n\t\t\tlast = true;\r\n\t\t\tnode = new StackItem(\"http://www.w3.org/1999/xhtml\", this.context, [], null);\r\n\t\t}\r\n\r\n\t\tif (node.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\r\n\t\t\t// TODO template tag\r\n\t\t\tif (node.localName === 'select')\r\n\t\t\t\t// FIXME handle inSelectInTable\r\n\t\t\t\treturn this.setInsertionMode('inSelect');\r\n\t\t\tif (node.localName === 'td' || node.localName === 'th')\r\n\t\t\t\treturn this.setInsertionMode('inCell');\r\n\t\t\tif (node.localName === 'tr')\r\n\t\t\t\treturn this.setInsertionMode('inRow');\r\n\t\t\tif (node.localName === 'tbody' || node.localName === 'thead' || node.localName === 'tfoot')\r\n\t\t\t\treturn this.setInsertionMode('inTableBody');\r\n\t\t\tif (node.localName === 'caption')\r\n\t\t\t\treturn this.setInsertionMode('inCaption');\r\n\t\t\tif (node.localName === 'colgroup')\r\n\t\t\t\treturn this.setInsertionMode('inColumnGroup');\r\n\t\t\tif (node.localName === 'table')\r\n\t\t\t\treturn this.setInsertionMode('inTable');\r\n\t\t\tif (node.localName === 'head' && !last)\r\n\t\t\t\treturn this.setInsertionMode('inHead');\r\n\t\t\tif (node.localName === 'body')\r\n\t\t\t\treturn this.setInsertionMode('inBody');\r\n\t\t\tif (node.localName === 'frameset')\r\n\t\t\t\treturn this.setInsertionMode('inFrameset');\r\n\t\t\tif (node.localName === 'html')\r\n\t\t\t\tif (!this.openElements.headElement)\r\n\t\t\t\t\treturn this.setInsertionMode('beforeHead');\r\n\t\t\t\telse\r\n\t\t\t\t\treturn this.setInsertionMode('afterHead');\r\n\t\t}\r\n\r\n\t\tif (last)\r\n\t\t\treturn this.setInsertionMode('inBody');\r\n\t}\r\n};\r\n\r\nTreeBuilder.prototype.processGenericRCDATAStartTag = function(name, attributes) {\r\n\tthis.insertElement(name, attributes);\r\n\tthis.tokenizer.setState(Tokenizer.RCDATA);\r\n\tthis.originalInsertionMode = this.insertionModeName;\r\n\tthis.setInsertionMode('text');\r\n};\r\n\r\nTreeBuilder.prototype.processGenericRawTextStartTag = function(name, attributes) {\r\n\tthis.insertElement(name, attributes);\r\n\tthis.tokenizer.setState(Tokenizer.RAWTEXT);\r\n\tthis.originalInsertionMode = this.insertionModeName;\r\n\tthis.setInsertionMode('text');\r\n};\r\n\r\nTreeBuilder.prototype.adjustMathMLAttributes = function(attributes) {\r\n\tattributes.forEach(function(a) {\r\n\t\ta.namespaceURI = \"http://www.w3.org/1998/Math/MathML\";\r\n\t\tif (constants.MATHMLAttributeMap[a.nodeName])\r\n\t\t\ta.nodeName = constants.MATHMLAttributeMap[a.nodeName];\r\n\t});\r\n\treturn attributes;\r\n};\r\n\r\nTreeBuilder.prototype.adjustSVGTagNameCase = function(name) {\r\n\treturn constants.SVGTagMap[name] || name;\r\n};\r\n\r\nTreeBuilder.prototype.adjustSVGAttributes = function(attributes) {\r\n\tattributes.forEach(function(a) {\r\n\t\ta.namespaceURI = \"http://www.w3.org/2000/svg\";\r\n\t\tif (constants.SVGAttributeMap[a.nodeName])\r\n\t\t\ta.nodeName = constants.SVGAttributeMap[a.nodeName];\r\n\t});\r\n\treturn attributes;\r\n};\r\n\r\nTreeBuilder.prototype.adjustForeignAttributes = function(attributes) {\r\n\tfor (var i = 0; i < attributes.length; i++) {\r\n\t\tvar attribute = attributes[i];\r\n\t\tvar adjusted = constants.ForeignAttributeMap[attribute.nodeName];\r\n\t\tif (adjusted) {\r\n\t\t\tattribute.nodeName = adjusted.localName;\r\n\t\t\tattribute.prefix = adjusted.prefix;\r\n\t\t\tattribute.namespaceURI = adjusted.namespaceURI;\r\n\t\t}\r\n\t}\r\n\treturn attributes;\r\n};\r\n\r\nfunction formatMessage(format, args) {\r\n\treturn format.replace(new RegExp('{[0-9a-z-]+}', 'gi'), function(match) {\r\n\t\treturn args[match.slice(1, -1)] || match;\r\n\t});\r\n}\r\n\r\nexports.TreeBuilder = TreeBuilder;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/constants.js":"exports.SVGTagMap = {\n\t\"altglyph\": \"altGlyph\",\n\t\"altglyphdef\": \"altGlyphDef\",\n\t\"altglyphitem\": \"altGlyphItem\",\n\t\"animatecolor\": \"animateColor\",\n\t\"animatemotion\": \"animateMotion\",\n\t\"animatetransform\": \"animateTransform\",\n\t\"clippath\": \"clipPath\",\n\t\"feblend\": \"feBlend\",\n\t\"fecolormatrix\": \"feColorMatrix\",\n\t\"fecomponenttransfer\": \"feComponentTransfer\",\n\t\"fecomposite\": \"feComposite\",\n\t\"feconvolvematrix\": \"feConvolveMatrix\",\n\t\"fediffuselighting\": \"feDiffuseLighting\",\n\t\"fedisplacementmap\": \"feDisplacementMap\",\n\t\"fedistantlight\": \"feDistantLight\",\n\t\"feflood\": \"feFlood\",\n\t\"fefunca\": \"feFuncA\",\n\t\"fefuncb\": \"feFuncB\",\n\t\"fefuncg\": \"feFuncG\",\n\t\"fefuncr\": \"feFuncR\",\n\t\"fegaussianblur\": \"feGaussianBlur\",\n\t\"feimage\": \"feImage\",\n\t\"femerge\": \"feMerge\",\n\t\"femergenode\": \"feMergeNode\",\n\t\"femorphology\": \"feMorphology\",\n\t\"feoffset\": \"feOffset\",\n\t\"fepointlight\": \"fePointLight\",\n\t\"fespecularlighting\": \"feSpecularLighting\",\n\t\"fespotlight\": \"feSpotLight\",\n\t\"fetile\": \"feTile\",\n\t\"feturbulence\": \"feTurbulence\",\n\t\"foreignobject\": \"foreignObject\",\n\t\"glyphref\": \"glyphRef\",\n\t\"lineargradient\": \"linearGradient\",\n\t\"radialgradient\": \"radialGradient\",\n\t\"textpath\": \"textPath\"\n};\n\nexports.MATHMLAttributeMap = {\n\tdefinitionurl: 'definitionURL'\n};\n\nexports.SVGAttributeMap = {\n\tattributename:\t'attributeName',\n\tattributetype:\t'attributeType',\n\tbasefrequency:\t'baseFrequency',\n\tbaseprofile:\t'baseProfile',\n\tcalcmode:\t'calcMode',\n\tclippathunits:\t'clipPathUnits',\n\tcontentscripttype:\t'contentScriptType',\n\tcontentstyletype:\t'contentStyleType',\n\tdiffuseconstant:\t'diffuseConstant',\n\tedgemode:\t'edgeMode',\n\texternalresourcesrequired:\t'externalResourcesRequired',\n\tfilterres:\t'filterRes',\n\tfilterunits:\t'filterUnits',\n\tglyphref:\t'glyphRef',\n\tgradienttransform:\t'gradientTransform',\n\tgradientunits:\t'gradientUnits',\n\tkernelmatrix:\t'kernelMatrix',\n\tkernelunitlength:\t'kernelUnitLength',\n\tkeypoints:\t'keyPoints',\n\tkeysplines:\t'keySplines',\n\tkeytimes:\t'keyTimes',\n\tlengthadjust:\t'lengthAdjust',\n\tlimitingconeangle:\t'limitingConeAngle',\n\tmarkerheight:\t'markerHeight',\n\tmarkerunits:\t'markerUnits',\n\tmarkerwidth:\t'markerWidth',\n\tmaskcontentunits:\t'maskContentUnits',\n\tmaskunits:\t'maskUnits',\n\tnumoctaves:\t'numOctaves',\n\tpathlength:\t'pathLength',\n\tpatterncontentunits:\t'patternContentUnits',\n\tpatterntransform:\t'patternTransform',\n\tpatternunits:\t'patternUnits',\n\tpointsatx:\t'pointsAtX',\n\tpointsaty:\t'pointsAtY',\n\tpointsatz:\t'pointsAtZ',\n\tpreservealpha:\t'preserveAlpha',\n\tpreserveaspectratio:\t'preserveAspectRatio',\n\tprimitiveunits:\t'primitiveUnits',\n\trefx:\t'refX',\n\trefy:\t'refY',\n\trepeatcount:\t'repeatCount',\n\trepeatdur:\t'repeatDur',\n\trequiredextensions:\t'requiredExtensions',\n\trequiredfeatures:\t'requiredFeatures',\n\tspecularconstant:\t'specularConstant',\n\tspecularexponent:\t'specularExponent',\n\tspreadmethod:\t'spreadMethod',\n\tstartoffset:\t'startOffset',\n\tstddeviation:\t'stdDeviation',\n\tstitchtiles:\t'stitchTiles',\n\tsurfacescale:\t'surfaceScale',\n\tsystemlanguage:\t'systemLanguage',\n\ttablevalues:\t'tableValues',\n\ttargetx:\t'targetX',\n\ttargety:\t'targetY',\n\ttextlength:\t'textLength',\n\tviewbox:\t'viewBox',\n\tviewtarget:\t'viewTarget',\n\txchannelselector:\t'xChannelSelector',\n\tychannelselector:\t'yChannelSelector',\n\tzoomandpan:\t'zoomAndPan'\n};\n\nexports.ForeignAttributeMap = {\n\t\"xlink:actuate\": {prefix: \"xlink\", localName: \"actuate\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:arcrole\": {prefix: \"xlink\", localName: \"arcrole\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:href\": {prefix: \"xlink\", localName: \"href\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:role\": {prefix: \"xlink\", localName: \"role\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:show\": {prefix: \"xlink\", localName: \"show\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:title\": {prefix: \"xlink\", localName: \"title\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xlink:type\": {prefix: \"xlink\", localName: \"title\", namespaceURI: \"http://www.w3.org/1999/xlink\"},\n\t\"xml:base\": {prefix: \"xml\", localName: \"base\", namespaceURI: \"http://www.w3.org/XML/1998/namespace\"},\n\t\"xml:lang\": {prefix: \"xml\", localName: \"lang\", namespaceURI: \"http://www.w3.org/XML/1998/namespace\"},\n\t\"xml:space\": {prefix: \"xml\", localName: \"space\", namespaceURI: \"http://www.w3.org/XML/1998/namespace\"},\n\t\"xmlns\": {prefix: null, localName: \"xmlns\", namespaceURI: \"http://www.w3.org/2000/xmlns/\"},\n\t\"xmlns:xlink\": {prefix: \"xmlns\", localName: \"xlink\", namespaceURI: \"http://www.w3.org/2000/xmlns/\"},\n};","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/Tokenizer.js":"var InputStream = require('./InputStream').InputStream;\nvar EntityParser = require('./EntityParser').EntityParser;\n\nfunction isWhitespace(c){\n\treturn c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\r\" || c === \"\\f\";\n}\n\nfunction isAlpha(c) {\n\treturn (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');\n}\n\n/**\n *\n * @param {Object} tokenHandler\n * @constructor\n */\nfunction Tokenizer(tokenHandler) {\n\tthis._tokenHandler = tokenHandler;\n\tthis._state = Tokenizer.DATA;\n\tthis._inputStream = new InputStream();\n\tthis._currentToken = null;\n\tthis._temporaryBuffer = '';\n\tthis._additionalAllowedCharacter = '';\n}\n\nTokenizer.prototype._parseError = function(code, args) {\n\tthis._tokenHandler.parseError(code, args);\n};\n\nTokenizer.prototype._emitToken = function(token) {\n\tif (token.type === 'StartTag') {\n\t\tfor (var i = 1; i < token.data.length; i++) {\n\t\t\tif (!token.data[i].nodeName)\n\t\t\t\ttoken.data.splice(i--, 1);\n\t\t}\n\t} else if (token.type === 'EndTag') {\n\t\tif (token.selfClosing) {\n\t\t\tthis._parseError('self-closing-flag-on-end-tag');\n\t\t}\n\t\tif (token.data.length !== 0) {\n\t\t\tthis._parseError('attributes-in-end-tag');\n\t\t}\n\t}\n\tthis._tokenHandler.processToken(token);\n\tif (token.type === 'StartTag' && token.selfClosing && !this._tokenHandler.isSelfClosingFlagAcknowledged()) {\n\t\tthis._parseError('non-void-element-with-trailing-solidus', {name: token.name});\n\t}\n};\n\nTokenizer.prototype._emitCurrentToken = function() {\n\tthis._state = Tokenizer.DATA;\n\tthis._emitToken(this._currentToken);\n};\n\nTokenizer.prototype._currentAttribute = function() {\n\treturn this._currentToken.data[this._currentToken.data.length - 1];\n};\n\nTokenizer.prototype.setState = function(state) {\n\tthis._state = state;\n};\n\nTokenizer.prototype.tokenize = function(source) {\n\t// FIXME proper tokenizer states\n\tTokenizer.DATA = data_state;\n\tTokenizer.RCDATA = rcdata_state;\n\tTokenizer.RAWTEXT = rawtext_state;\n\tTokenizer.SCRIPT_DATA = script_data_state;\n\tTokenizer.PLAINTEXT = plaintext_state;\n\n\n\tthis._state = Tokenizer.DATA;\n\n\tthis._inputStream.append(source);\n\n\tthis._tokenHandler.startTokenization(this);\n\n\tthis._inputStream.eof = true;\n\n\tvar tokenizer = this;\n\n\twhile (this._state.call(this, this._inputStream));\n\n\n\tfunction data_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._emitToken({type: 'EOF', data: null});\n\t\t\treturn false;\n\t\t} else if (data === '&') {\n\t\t\ttokenizer.setState(character_reference_in_data_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(tag_open_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil(\"&|<|\\u0000\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction character_reference_in_data_state(buffer) {\n\t\tvar character = EntityParser.consumeEntity(buffer, tokenizer);\n\t\ttokenizer.setState(data_state);\n\t\ttokenizer._emitToken({type: 'Characters', data: character || '&'});\n\t\treturn true;\n\t}\n\n\tfunction rcdata_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._emitToken({type: 'EOF', data: null});\n\t\t\treturn false;\n\t\t} else if (data === '&') {\n\t\t\ttokenizer.setState(character_reference_in_rcdata_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(rcdata_less_than_sign_state);\n\t\t} else if (data === \"\\u0000\") {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil(\"&|<|\\u0000\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction character_reference_in_rcdata_state(buffer) {\n\t\tvar character = EntityParser.consumeEntity(buffer, tokenizer);\n\t\ttokenizer.setState(rcdata_state);\n\t\ttokenizer._emitToken({type: 'Characters', data: character || '&'});\n\t\treturn true;\n\t}\n\n\tfunction rawtext_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._emitToken({type: 'EOF', data: null});\n\t\t\treturn false;\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(rawtext_less_than_sign_state);\n\t\t} else if (data === \"\\u0000\") {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil(\"<|\\u0000\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction plaintext_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._emitToken({type: 'EOF', data: null});\n\t\t\treturn false;\n\t\t} else if (data === \"\\u0000\") {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil(\"\\u0000\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction script_data_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._emitToken({type: 'EOF', data: null});\n\t\t\treturn false;\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(script_data_less_than_sign_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil(\"<|\\u0000\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rcdata_less_than_sign_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === \"/\") {\n\t\t\tthis._temporaryBuffer = '';\n\t\t\ttokenizer.setState(rcdata_end_tag_open_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rcdata_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rcdata_end_tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\ttokenizer.setState(rcdata_end_tag_name_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rcdata_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rcdata_end_tag_name_state(buffer) {\n\t\tvar appropriate = tokenizer._currentToken && (tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase());\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '/' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === '>' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</' + this._temporaryBuffer});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rcdata_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rawtext_less_than_sign_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === \"/\") {\n\t\t\tthis._temporaryBuffer = '';\n\t\t\ttokenizer.setState(rawtext_end_tag_open_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rawtext_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rawtext_end_tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\ttokenizer.setState(rawtext_end_tag_name_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rawtext_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction rawtext_end_tag_name_state(buffer) {\n\t\tvar appropriate = tokenizer._currentToken && (tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase());\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '/' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === '>' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: this._temporaryBuffer, data: [], selfClosing: false};\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</' + this._temporaryBuffer});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(rawtext_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_less_than_sign_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === \"/\") {\n\t\t\tthis._temporaryBuffer = '';\n\t\t\ttokenizer.setState(script_data_end_tag_open_state);\n\t\t} else if (data === '!') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<!'});\n\t\t\ttokenizer.setState(script_data_escape_start_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_end_tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\ttokenizer.setState(script_data_end_tag_name_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_end_tag_name_state(buffer) {\n\t\tvar appropriate = tokenizer._currentToken && (tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase());\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '/' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === '>' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</' + this._temporaryBuffer});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escape_start_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_escape_start_dash_state);\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escape_start_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_escaped_dash_dash_state);\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_escaped_dash_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(script_data_escaped_less_then_sign_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tvar chars = buffer.matchUntil('<|-|\\u0000');\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data + chars});\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_escaped_dash_dash_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(script_data_escaped_less_then_sign_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_dash_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError('eof-in-script');\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer.setState(script_data_escaped_less_then_sign_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '>'});\n\t\t\ttokenizer.setState(script_data_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_less_then_sign_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === '/') {\n\t\t\tthis._temporaryBuffer = '';\n\t\t\ttokenizer.setState(script_data_escaped_end_tag_open_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<' + data});\n\t\t\tthis._temporaryBuffer = data;\n\t\t\ttokenizer.setState(script_data_double_escape_start_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_end_tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer = data;\n\t\t\ttokenizer.setState(script_data_escaped_end_tag_name_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_escaped_end_tag_name_state(buffer) {\n\t\tvar appropriate = tokenizer._currentToken && (tokenizer._currentToken.name === this._temporaryBuffer.toLowerCase());\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '/' && appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === '>' &&  appropriate) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: 'script', data: [], selfClosing: false};\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isAlpha(data)) {\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</' + this._temporaryBuffer});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escape_start_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) || data === '/' || data === '>') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tif (this._temporaryBuffer.toLowerCase() === 'script')\n\t\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t\telse\n\t\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escaped_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError('eof-in-script');\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_double_escaped_dash_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\ttokenizer.setState(script_data_double_escaped_less_than_sign_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError('invalid-codepoint');\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escaped_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError('eof-in-script');\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\ttokenizer.setState(script_data_double_escaped_dash_dash_state);\n\t\t} else if (data === '<') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\ttokenizer.setState(script_data_double_escaped_less_than_sign_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError('invalid-codepoint');\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escaped_dash_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError('eof-in-script');\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '-'});\n\t\t\tbuffer.commit();\n\t\t} else if (data === '<') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\ttokenizer.setState(script_data_double_escaped_less_than_sign_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '>'});\n\t\t\ttokenizer.setState(script_data_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError('invalid-codepoint');\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '\\uFFFD'});\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t} else {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escaped_less_than_sign_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === '/') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '/'});\n\t\t\tthis._temporaryBuffer = '';\n\t\t\ttokenizer.setState(script_data_double_escape_end_state);\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction script_data_double_escape_end_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (isWhitespace(data) || data === '/' || data === '>') {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tif (this._temporaryBuffer.toLowerCase() === 'script')\n\t\t\t\ttokenizer.setState(script_data_escaped_state);\n\t\t\telse\n\t\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t\tthis._temporaryBuffer += data;\n\t\t\tbuffer.commit();\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(script_data_double_escaped_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"bare-less-than-sign-at-eof\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '<'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentToken = {type: 'StartTag', name: data.toLowerCase(), data: []};\n\t\t\ttokenizer.setState(tag_name_state);\n\t\t} else if (data === '!') {\n\t\t\ttokenizer.setState(markup_declaration_open_state);\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(close_tag_open_state);\n\t\t} else if (data === '>') {\n\t\t\t// XXX In theory it could be something besides a tag name. But\n\t\t\t// do we really care?\n\t\t\ttokenizer._parseError(\"expected-tag-name-but-got-right-bracket\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: \"<>\"});\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '?') {\n\t\t\t// XXX In theory it could be something besides a tag name. But\n\t\t\t// do we really care?\n\t\t\ttokenizer._parseError(\"expected-tag-name-but-got-question-mark\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(bogus_comment_state);\n\t\t} else {\n\t\t\t// XXX\n\t\t\ttokenizer._parseError(\"expected-tag-name\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: \"<\"});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction close_tag_open_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-closing-tag-but-got-eof\");\n\t\t\ttokenizer._emitToken({type: 'Characters', data: '</'});\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentToken = {type: 'EndTag', name: data.toLowerCase(), data: []};\n\t\t\ttokenizer.setState(tag_name_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"expected-closing-tag-but-got-right-bracket\");\n\t\t\ttokenizer.setState(data_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"expected-closing-tag-but-got-char\", {data: data}); // param 1 is datavars:\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(bogus_comment_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction tag_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError('eof-in-tag-name');\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentToken.name += data.toLowerCase();\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.name += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentToken.name += data;\n\t\t}\n\t\tbuffer.commit();\n\n\t\treturn true;\n\t}\n\n\tfunction before_attribute_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-attribute-name-but-got-eof\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\treturn true;\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentToken.data.push({nodeName: data.toLowerCase(), nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === \"'\" || data === '\"' || data === '=' || data === '<') {\n\t\t\ttokenizer._parseError(\"invalid-character-in-attribute-name\");\n\t\t\ttokenizer._currentToken.data.push({nodeName: data, nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data.push({nodeName: \"\\uFFFD\", nodeValue: \"\"});\n\t\t} else {\n\t\t\ttokenizer._currentToken.data.push({nodeName: data, nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction attribute_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tvar leavingThisState = true;\n\t\tvar shouldEmit = false;\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-attribute-name\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\tshouldEmit = true;\n\t\t} else if (data === '=') {\n\t\t\ttokenizer.setState(before_attribute_value_state);\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentAttribute().nodeName += data.toLowerCase();\n\t\t\tleavingThisState = false;\n\t\t} else if (data === '>') {\n\t\t\t// XXX If we emit here the attributes are converted to a dict\n\t\t\t// without being checked and when the code below runs we error\n\t\t\t// because data is a dict not a list\n\t\t\tshouldEmit = true;\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(after_attribute_name_state);\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === \"'\" || data === '\"') {\n\t\t\ttokenizer._parseError(\"invalid-character-in-attribute-name\");\n\t\t\ttokenizer._currentAttribute().nodeName += data;\n\t\t\tleavingThisState = false;\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentAttribute().nodeName += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentAttribute().nodeName += data;\n\t\t\tleavingThisState = false;\n\t\t}\n\n\t\tif (leavingThisState) {\n\t\t\t// Attributes are not dropped at this stage. That happens when the\n\t\t\t// start tag token is emitted so values can still be safely appended\n\t\t\t// to attributes, but we do want to report the parse error in time.\n\t\t\tvar attributes = tokenizer._currentToken.data;\n\t\t\tvar currentAttribute = attributes[attributes.length - 1];\n\t\t\tfor (var i = attributes.length - 2; i >= 0; i--) {\n\t\t\t\tif (currentAttribute.nodeName === attributes[i].nodeName) {\n\t\t\t\t\ttokenizer._parseError(\"duplicate-attribute\", {name: currentAttribute.nodeName});\n\t\t\t\t\tcurrentAttribute.nodeName = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (shouldEmit)\n\t\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_attribute_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-end-of-tag-but-got-eof\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\treturn true;\n\t\t} else if (data === '=') {\n\t\t\ttokenizer.setState(before_attribute_value_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isAlpha(data)) {\n\t\t\ttokenizer._currentToken.data.push({nodeName: data, nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else if (data === \"'\" || data === '\"' || data === '<') {\n\t\t\ttokenizer._parseError(\"invalid-character-after-attribute-name\");\n\t\t\ttokenizer._currentToken.data.push({nodeName: data, nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data.push({nodeName: \"\\uFFFD\", nodeValue: \"\"});\n\t\t} else {\n\t\t\ttokenizer._currentToken.data.push({nodeName: data, nodeValue: \"\"});\n\t\t\ttokenizer.setState(attribute_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction before_attribute_value_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-attribute-value-but-got-eof\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\treturn true;\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer.setState(attribute_value_double_quoted_state);\n\t\t} else if (data === '&') {\n\t\t\ttokenizer.setState(attribute_value_unquoted_state);\n\t\t\tbuffer.unget(data);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer.setState(attribute_value_single_quoted_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"expected-attribute-value-but-got-right-bracket\");\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '=' || data === '<' || data === '`') {\n\t\t\ttokenizer._parseError(\"unexpected-character-in-unquoted-attribute-value\");\n\t\t\ttokenizer._currentAttribute().nodeValue += data;\n\t\t\ttokenizer.setState(attribute_value_unquoted_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentAttribute().nodeValue += data;\n\t\t\ttokenizer.setState(attribute_value_unquoted_state);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction attribute_value_double_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-attribute-value-double-quote\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer.setState(after_attribute_value_state);\n\t\t} else if (data === '&') {\n\t\t\tthis._additionalAllowedCharacter = '\"';\n\t\t\ttokenizer.setState(character_reference_in_attribute_value_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n\t\t} else {\n\t\t\tvar s = buffer.matchUntil('[\\0\"&]');\n\t\t\tdata = data + s;\n\t\t\ttokenizer._currentAttribute().nodeValue += data;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction attribute_value_single_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-attribute-value-single-quote\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer.setState(after_attribute_value_state);\n\t\t} else if (data === '&') {\n\t\t\tthis._additionalAllowedCharacter = \"'\";\n\t\t\ttokenizer.setState(character_reference_in_attribute_value_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentAttribute().nodeValue += data + buffer.matchUntil(\"\\u0000|['&]\");\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction attribute_value_unquoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-after-attribute-value\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '&') {\n\t\t\tthis._additionalAllowedCharacter = \">\";\n\t\t\ttokenizer.setState(character_reference_in_attribute_value_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '\"' || data === \"'\" || data === '=' || data === '`' || data === '<') {\n\t\t\ttokenizer._parseError(\"unexpected-character-in-unquoted-attribute-value\");\n\t\t\ttokenizer._currentAttribute().nodeValue += data;\n\t\t\tbuffer.commit();\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentAttribute().nodeValue += \"\\uFFFD\";\n\t\t} else {\n\t\t\tvar o = buffer.matchUntil(\"\\u0000|[\"+ \"\\t\\n\\v\\f\\x20\\r\" + \"&<>\\\"'=`\" +\"]\");\n\t\t\tif (o === InputStream.EOF) {\n\t\t\t\ttokenizer._parseError(\"eof-in-attribute-value-no-quotes\");\n\t\t\t\ttokenizer._emitCurrentToken();\n\t\t\t}\n\t\t\t// Commit here since this state is re-enterable and its outcome won't change with more data.\n\t\t\tbuffer.commit();\n\t\t\ttokenizer._currentAttribute().nodeValue += data + o;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction character_reference_in_attribute_value_state(buffer) {\n\t\tvar character = EntityParser.consumeEntity(buffer, tokenizer, this._additionalAllowedCharacter);\n\t\tthis._currentAttribute().nodeValue += character || '&';\n\t\t// We're supposed to switch back to the attribute value state that\n\t\t// we were in when we were switched into this state. Rather than\n\t\t// keeping track of this explictly, we observe that the previous\n\t\t// state can be determined by additionalAllowedCharacter.\n\t\tif (this._additionalAllowedCharacter === '\"')\n\t\t\ttokenizer.setState(attribute_value_double_quoted_state);\n\t\telse if (this._additionalAllowedCharacter === '\\'')\n\t\t\ttokenizer.setState(attribute_value_single_quoted_state);\n\t\telse if (this._additionalAllowedCharacter === '>')\n\t\t\ttokenizer.setState(attribute_value_unquoted_state);\n\t\treturn true;\n\t}\n\n\tfunction after_attribute_value_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-after-attribute-value\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '/') {\n\t\t\ttokenizer.setState(self_closing_tag_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-character-after-attribute-value\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction self_closing_tag_state(buffer) {\n\t\tvar c = buffer.char();\n\t\tif (c === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"unexpected-eof-after-solidus-in-tag\");\n\t\t\tbuffer.unget(c);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (c === '>') {\n\t\t\ttokenizer._currentToken.selfClosing = true;\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-character-after-solidus-in-tag\");\n\t\t\tbuffer.unget(c);\n\t\t\ttokenizer.setState(before_attribute_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction bogus_comment_state(buffer) {\n\t\tvar data = buffer.matchUntil('>');\n\t\tdata = data.replace(/\\u0000/g, \"\\uFFFD\");\n\t\tbuffer.char();\n\t\ttokenizer._emitToken({type: 'Comment', data: data});\n\t\ttokenizer.setState(data_state);\n\t\treturn true;\n\t}\n\n\tfunction markup_declaration_open_state(buffer) {\n\t\tvar chars = buffer.shift(2);\n\t\tif (chars === '--') {\n\t\t\ttokenizer._currentToken = {type: 'Comment', data: ''};\n\t\t\ttokenizer.setState(comment_start_state);\n\t\t} else {\n\t\t\tvar newchars = buffer.shift(5);\n\t\t\tif (newchars === InputStream.EOF || chars === InputStream.EOF) {\n\t\t\t\ttokenizer._parseError(\"expected-dashes-or-doctype\");\n\t\t\t\ttokenizer.setState(bogus_comment_state);\n\t\t\t\tbuffer.unget(chars);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tchars += newchars;\n\t\t\tif (chars.toUpperCase() === 'DOCTYPE') {\n\t\t\t\ttokenizer._currentToken = {type: 'Doctype', name: '', publicId: null, systemId: null, forceQuirks: false};\n\t\t\t\ttokenizer.setState(doctype_state);\n\t\t\t} else if (tokenizer._tokenHandler.isCdataSectionAllowed() && chars === '[CDATA[') {\n\t\t\t\ttokenizer.setState(cdata_section_state);\n\t\t\t} else {\n\t\t\t\ttokenizer._parseError(\"expected-dashes-or-doctype\");\n\t\t\t\tbuffer.unget(chars);\n\t\t\t\ttokenizer.setState(bogus_comment_state);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction cdata_section_state(buffer) {\n\t\tvar data = buffer.matchUntil(']]>');\n\t\t// skip ]]>\n\t\tbuffer.shift(3);\n\t\tif (data) {\n\t\t\ttokenizer._emitToken({type: 'Characters', data: data});\n\t\t}\n\t\ttokenizer.setState(data_state);\n\t\treturn true;\n\t}\n\n\tfunction comment_start_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer.setState(comment_start_dash_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"incorrect-comment\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentToken.data += data;\n\t\t\ttokenizer.setState(comment_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction comment_start_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer.setState(comment_end_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"incorrect-comment\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentToken.data += '-' + data;\n\t\t\ttokenizer.setState(comment_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction comment_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer.setState(comment_end_dash_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data += \"\\uFFFD\";\n\t\t} else {\n\t\t\ttokenizer._currentToken.data += data;\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction comment_end_dash_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment-end-dash\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer.setState(comment_end_state);\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data += \"-\\uFFFD\";\n\t\t\ttokenizer.setState(comment_state);\n\t\t} else {\n\t\t\ttokenizer._currentToken.data += '-' + data + buffer.matchUntil('\\u0000|-');\n\t\t\t// Consume the next character which is either a \"-\" or an :EOF as\n\t\t\t// well so if there's a \"-\" directly after the \"-\" we go nicely to\n\t\t\t// the \"comment end state\" without emitting a tokenizer._parseError there.\n\t\t\tbuffer.char();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction comment_end_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment-double-dash\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '!') {\n\t\t\ttokenizer._parseError(\"unexpected-bang-after-double-dash-in-comment\");\n\t\t\ttokenizer.setState(comment_end_bang_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._parseError(\"unexpected-dash-after-double-dash-in-comment\");\n\t\t\ttokenizer._currentToken.data += data;\n\t\t} else if (data === '\\u0000') {\n\t\t\ttokenizer._parseError(\"invalid-codepoint\");\n\t\t\ttokenizer._currentToken.data += \"--\\uFFFD\";\n\t\t\ttokenizer.setState(comment_state);\n\t\t} else {\n\t\t\t// XXX\n\t\t\ttokenizer._parseError(\"unexpected-char-in-comment\");\n\t\t\ttokenizer._currentToken.data += '--' + data;\n\t\t\ttokenizer.setState(comment_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction comment_end_bang_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-comment-end-bang-state\");\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitToken(tokenizer._currentToken);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '-') {\n\t\t\ttokenizer._currentToken.data += '--!';\n\t\t\ttokenizer.setState(comment_end_dash_state);\n\t\t} else {\n\t\t\ttokenizer._currentToken.data += '--!' + data;\n\t\t\ttokenizer.setState(comment_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-doctype-name-but-got-eof\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_doctype_name_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"need-space-after-doctype\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_doctype_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction before_doctype_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"expected-doctype-name-but-got-eof\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"expected-doctype-name-but-got-right-bracket\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\tif (isAlpha(data))\n\t\t\t\tdata = data.toLowerCase();\n\t\t\ttokenizer._currentToken.name = data;\n\t\t\ttokenizer.setState(doctype_name_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer._parseError(\"eof-in-doctype-name\");\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(after_doctype_name_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\tif (isAlpha(data))\n\t\t\t\tdata = data.toLowerCase();\n\t\t\ttokenizer._currentToken.name += data;\n\t\t\tbuffer.commit();\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_doctype_name_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '>') {\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\tif (['p', 'P'].indexOf(data) > -1) {\n\t\t\t\tvar expected = [['u', 'U'], ['b', 'B'], ['l', 'L'], ['i', 'I'], ['c', 'C']];\n\t\t\t\tvar matched = expected.every(function(expected){\n\t\t\t\t\tdata = buffer.char();\n\t\t\t\t\treturn expected.indexOf(data) > -1;\n\t\t\t\t});\n\t\t\t\tif (matched) {\n\t\t\t\t\ttokenizer.setState(after_doctype_public_keyword_state);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (['s', 'S'].indexOf(data) > -1) {\n\t\t\t\tvar expected = [['y', 'Y'], ['s', 'S'], ['t', 'T'], ['e', 'E'], ['m', 'M']];\n\t\t\t\tvar matched = expected.every(function(expected){\n\t\t\t\t\tdata = buffer.char();\n\t\t\t\t\treturn expected.indexOf(data) > -1;\n\t\t\t\t});\n\t\t\t\tif (matched) {\n\t\t\t\t\ttokenizer.setState(after_doctype_system_keyword_state);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// All the characters read before the current 'data' will be\n\t\t\t// [a-zA-Z], so they're garbage in the bogus doctype and can be\n\t\t\t// discarded; only the latest character might be '>' or EOF\n\t\t\t// and needs to be ungetted\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\n\t\t\tif (data === InputStream.EOF) {\n\t\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\t\tbuffer.unget(data);\n\t\t\t\ttokenizer.setState(data_state);\n\t\t\t\ttokenizer._emitCurrentToken();\n\t\t\t} else {\n\t\t\t\ttokenizer._parseError(\"expected-space-or-right-bracket-in-doctype\", {data: data});\n\t\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_doctype_public_keyword_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_doctype_public_identifier_state);\n\t\t} else if (data === \"'\" || data === '\"') {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_doctype_public_identifier_state);\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_doctype_public_identifier_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction before_doctype_public_identifier_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer._currentToken.publicId = '';\n\t\t\ttokenizer.setState(doctype_public_identifier_double_quoted_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer._currentToken.publicId = '';\n\t\t\ttokenizer.setState(doctype_public_identifier_single_quoted_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_public_identifier_double_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer.setState(after_doctype_public_identifier_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\ttokenizer._currentToken.publicId += data;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_public_identifier_single_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer.setState(after_doctype_public_identifier_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else {\n\t\t\ttokenizer._currentToken.publicId += data;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_doctype_public_identifier_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(between_doctype_public_and_system_identifiers_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer.setState(data_state);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_double_quoted_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_single_quoted_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction between_doctype_public_and_system_identifiers_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_double_quoted_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_single_quoted_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_doctype_system_keyword_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\ttokenizer.setState(before_doctype_system_identifier_state);\n\t\t} else if (data === \"'\" || data === '\"') {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_doctype_system_identifier_state);\n\t\t} else {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(before_doctype_system_identifier_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction before_doctype_system_identifier_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_double_quoted_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer._currentToken.systemId = '';\n\t\t\ttokenizer.setState(doctype_system_identifier_single_quoted_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_system_identifier_double_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '\"') {\n\t\t\ttokenizer.setState(after_doctype_system_identifier_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else {\n\t\t\ttokenizer._currentToken.systemId += data;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction doctype_system_identifier_single_quoted_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === \"'\") {\n\t\t\ttokenizer.setState(after_doctype_system_identifier_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._parseError(\"unexpected-end-of-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else {\n\t\t\ttokenizer._currentToken.systemId += data;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction after_doctype_system_identifier_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\ttokenizer._parseError(\"eof-in-doctype\");\n\t\t\ttokenizer._currentToken.forceQuirks = true;\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (isWhitespace(data)) {\n\t\t\t// pass\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else {\n\t\t\ttokenizer._parseError(\"unexpected-char-in-doctype\");\n\t\t\ttokenizer.setState(bogus_doctype_state);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction bogus_doctype_state(buffer) {\n\t\tvar data = buffer.char();\n\t\tif (data === InputStream.EOF) {\n\t\t\tbuffer.unget(data);\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t} else if (data === '>') {\n\t\t\ttokenizer._emitCurrentToken();\n\t\t\ttokenizer.setState(data_state);\n\t\t}\n\t\treturn true;\n\t}\n};\n\nObject.defineProperty(Tokenizer.prototype, 'lineNumber', {\n\tget: function() {\n\t\treturn this._inputStream.location().line;\n\t}\n});\n\nObject.defineProperty(Tokenizer.prototype, 'columnNumber', {\n\tget: function() {\n\t\treturn this._inputStream.location().column;\n\t}\n});\n\nexports.Tokenizer = Tokenizer;\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/InputStream.js":"// FIXME convert CR to LF http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#input-stream\nfunction InputStream() {\n\tthis.data = '';\n\tthis.start = 0;\n\tthis.committed = 0;\n\tthis.eof = false;\n\tthis.lastLocation = {line: 0, column: 0};\n}\n\nInputStream.EOF = -1;\n\nInputStream.DRAIN = -2;\n\nInputStream.prototype = {\n\tslice: function() {\n\t\tif(this.start >= this.data.length) {\n\t\t\tif(!this.eof) throw InputStream.DRAIN;\n\t\t\treturn InputStream.EOF;\n\t\t}\n\t\treturn this.data.slice(this.start, this.data.length);\n\t},\n\tchar: function() {\n\t\tif(!this.eof && this.start >= this.data.length - 1) throw InputStream.DRAIN;\n\t\tif(this.start >= this.data.length) {\n\t\t\treturn InputStream.EOF;\n\t\t}\n\t\tvar ch = this.data[this.start++];\n\t\tif (ch === '\\r')\n\t\t\tch = '\\n';\n\t\treturn ch;\n\t},\n\tadvance: function(amount) {\n\t\tthis.start += amount;\n\t\tif(this.start >= this.data.length) {\n\t\t\tif(!this.eof) throw InputStream.DRAIN;\n\t\t\treturn InputStream.EOF;\n\t\t} else {\n\t\t\tif(this.committed > this.data.length / 2) {\n\t\t\t\t// Sliiiide\n\t\t\t\tthis.lastLocation = this.location();\n\t\t\t\tthis.data = this.data.slice(this.committed);\n\t\t\t\tthis.start = this.start - this.committed;\n\t\t\t\tthis.committed = 0;\n\t\t\t}\n\t\t}\n\t},\n\tmatchWhile: function(re) {\n\t\tif(this.eof && this.start >= this.data.length ) return '';\n\t\tvar r = new RegExp(\"^\"+re+\"+\");\n\t\tvar m = r.exec(this.slice());\n\t\tif(m) {\n\t\t\tif(!this.eof && m[0].length == this.data.length - this.start) throw InputStream.DRAIN;\n\t\t\tthis.advance(m[0].length);\n\t\t\treturn m[0];\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t},\n\tmatchUntil: function(re) {\n\t\tvar m, s;\n\t\ts = this.slice();\n\t\tif(s === InputStream.EOF) {\n\t\t\treturn '';\n\t\t} else if(m = new RegExp(re + (this.eof ? \"|$\" : \"\")).exec(s)) {\n\t\t\tvar t = this.data.slice(this.start, this.start + m.index);\n\t\t\tthis.advance(m.index);\n\t\t\treturn t.replace(/\\r/g, '\\n').replace(/\\n{2,}/g, '\\n');\n\t\t} else {\n\t\t\tthrow InputStream.DRAIN;\n\t\t}\n\t},\n\tappend: function(data) {\n\t\tthis.data += data;\n\t},\n\tshift: function(n) {\n\t\tif(!this.eof && this.start + n >= this.data.length) throw InputStream.DRAIN;\n\t\tif(this.eof && this.start >= this.data.length) return InputStream.EOF;\n\t\tvar d = this.data.slice(this.start, this.start + n).toString();\n\t\tthis.advance(Math.min(n, this.data.length - this.start));\n\t\treturn d;\n\t},\n\tpeek: function(n) {\n\t\tif(!this.eof && this.start + n >= this.data.length) throw InputStream.DRAIN;\n\t\tif(this.eof && this.start >= this.data.length) return InputStream.EOF;\n\t\treturn this.data.slice(this.start, Math.min(this.start + n, this.data.length)).toString();\n\t},\n\tlength: function() {\n\t\treturn this.data.length - this.start - 1;\n\t},\n\tunget: function(d) {\n\t\tif(d === InputStream.EOF) return;\n\t\tthis.start -= (d.length);\n\t},\n\tundo: function() {\n\t\tthis.start = this.committed;\n\t},\n\tcommit: function() {\n\t\tthis.committed = this.start;\n\t},\n\tlocation: function() {\n\t\tvar lastLine = this.lastLocation.line;\n\t\tvar lastColumn = this.lastLocation.column;\n\t\tvar read = this.data.slice(0, this.committed);\n\t\tvar newlines = read.match(/\\n/g);\n\t\tvar line = newlines ? lastLine + newlines.length : lastLine;\n\t\tvar column = newlines ? read.length - read.lastIndexOf('\\n') - 1 : lastColumn + read.length;\n\t\treturn {line: line, column: column};\n\t}\n};\n\nexports.InputStream = InputStream;\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/EntityParser.js":"var entities  = require('html5-entities');\r\nvar InputStream = require('./InputStream').InputStream;\r\n\r\nvar namedEntityPrefixes = {};\r\nObject.keys(entities).forEach(function (entityKey) {\r\n\tfor (var i = 0; i < entityKey.length; i++) {\r\n\t\tnamedEntityPrefixes[entityKey.substring(0, i + 1)] = true;\r\n\t}\r\n});\r\n\r\nfunction isAlphaNumeric(c) {\r\n\treturn (c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\r\n}\r\n\r\nfunction isHexDigit(c) {\r\n\treturn (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\r\n}\r\n\r\nfunction isDecimalDigit(c) {\r\n\treturn (c >= '0' && c <= '9');\r\n}\r\n\r\nvar EntityParser = {};\r\n\r\nEntityParser.consumeEntity = function(buffer, tokenizer, additionalAllowedCharacter) {\r\n\tvar decodedCharacter = '';\r\n\tvar consumedCharacters = '';\r\n\tvar ch = buffer.char();\r\n\tif (ch === InputStream.EOF)\r\n\t\treturn false;\r\n\tconsumedCharacters += ch;\r\n\tif (ch == '\\t' || ch == '\\n' || ch == '\\v' || ch == ' ' || ch == '<' || ch == '&') {\r\n\t\tbuffer.unget(consumedCharacters);\r\n\t\treturn false;\r\n\t}\r\n\tif (additionalAllowedCharacter === ch) {\r\n\t\tbuffer.unget(consumedCharacters);\r\n\t\treturn false;\r\n\t}\r\n\tif (ch == '#') {\r\n\t\tch = buffer.shift(1);\r\n\t\tif (ch === InputStream.EOF) {\r\n\t\t\ttokenizer._parseError(\"expected-numeric-entity-but-got-eof\");\r\n\t\t\tbuffer.unget(consumedCharacters);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconsumedCharacters += ch;\r\n\t\tvar radix = 10;\r\n\t\tvar isDigit = isDecimalDigit;\r\n\t\tif (ch == 'x' || ch == 'X') {\r\n\t\t\tradix = 16;\r\n\t\t\tisDigit = isHexDigit;\r\n\t\t\tch = buffer.shift(1);\r\n\t\t\tif (ch === InputStream.EOF) {\r\n\t\t\t\ttokenizer._parseError(\"expected-numeric-entity-but-got-eof\");\r\n\t\t\t\tbuffer.unget(consumedCharacters);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconsumedCharacters += ch;\r\n\t\t}\r\n\t\tif (isDigit(ch)) {\r\n\t\t\tvar code = '';\r\n\t\t\twhile (ch !== InputStream.EOF && isDigit(ch)) {\r\n\t\t\t\tcode += ch;\r\n\t\t\t\tch = buffer.char();\r\n\t\t\t}\r\n\t\t\tcode = parseInt(code, radix);\r\n\t\t\tvar replacement = this.replaceEntityNumbers(code);\r\n\t\t\tif (replacement) {\r\n\t\t\t\ttokenizer._parseError(\"invalid-numeric-entity-replaced\");\r\n\t\t\t\tcode = replacement;\r\n\t\t\t}\r\n\t\t\tif (code > 0xFFFF && code <= 0x10FFFF) {\r\n\t\t        // we substract 0x10000 from cp to get a 20-bits number\r\n\t\t        // in the range 0..0xFFFF\r\n\t\t        code -= 0x10000;\r\n\t\t        // we add 0xD800 to the number formed by the first 10 bits\r\n\t\t        // to give the first byte\r\n\t\t        var first = ((0xffc00 & code) >> 10) + 0xD800;\r\n\t\t        // we add 0xDC00 to the number formed by the low 10 bits\r\n\t\t        // to give the second byte\r\n\t\t        var second = (0x3ff & code) + 0xDC00;\r\n\t\t\t\tdecodedCharacter = String.fromCharCode(first, second);\r\n\t\t\t} else\r\n\t\t\t\tdecodedCharacter = String.fromCharCode(code);\r\n\t\t\tif (ch !== ';') {\r\n\t\t\t\ttokenizer._parseError(\"numeric-entity-without-semicolon\");\r\n\t\t\t\tbuffer.unget(ch);\r\n\t\t\t}\r\n\t\t\treturn decodedCharacter;\r\n\t\t}\r\n\t\tbuffer.unget(consumedCharacters);\r\n\t\ttokenizer._parseError(\"expected-numeric-entity\");\r\n\t\treturn false;\r\n\t}\r\n\tif ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {\r\n\t\tvar mostRecentMatch = '';\r\n\t\twhile (namedEntityPrefixes[consumedCharacters]) {\r\n\t\t\tif (entities[consumedCharacters]) {\r\n\t\t\t\tmostRecentMatch = consumedCharacters;\r\n\t\t\t}\r\n\t\t\tif (ch == ';')\r\n\t\t\t\tbreak;\r\n\t\t\tch = buffer.char();\r\n\t\t\tif (ch === InputStream.EOF)\r\n\t\t\t\tbreak;\r\n\t\t\tconsumedCharacters += ch;\r\n\t\t}\r\n\t\tif (!mostRecentMatch) {\r\n\t\t\ttokenizer._parseError(\"expected-named-entity\");\r\n\t\t\tbuffer.unget(consumedCharacters);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tdecodedCharacter = entities[mostRecentMatch];\r\n\t\tif (ch === ';' || !additionalAllowedCharacter || !(isAlphaNumeric(ch) || ch === '=')) {\r\n\t\t\tif (consumedCharacters.length > mostRecentMatch.length) {\r\n\t\t\t\tbuffer.unget(consumedCharacters.substring(mostRecentMatch.length));\r\n\t\t\t}\r\n\t\t\tif (ch !== ';') {\r\n\t\t\t\ttokenizer._parseError(\"named-entity-without-semicolon\");\r\n\t\t\t}\r\n\t\t\treturn decodedCharacter;\r\n\t\t}\r\n\t\tbuffer.unget(consumedCharacters);\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nEntityParser.replaceEntityNumbers = function(c) {\r\n\tswitch(c) {\r\n\t\tcase 0x00: return 0xFFFD; // REPLACEMENT CHARACTER\r\n\t\tcase 0x13: return 0x0010; // Carriage return\r\n\t\tcase 0x80: return 0x20AC; // EURO SIGN\r\n\t\tcase 0x81: return 0x0081; // <control>\r\n\t\tcase 0x82: return 0x201A; // SINGLE LOW-9 QUOTATION MARK\r\n\t\tcase 0x83: return 0x0192; // LATIN SMALL LETTER F WITH HOOK\r\n\t\tcase 0x84: return 0x201E; // DOUBLE LOW-9 QUOTATION MARK\r\n\t\tcase 0x85: return 0x2026; // HORIZONTAL ELLIPSIS\r\n\t\tcase 0x86: return 0x2020; // DAGGER\r\n\t\tcase 0x87: return 0x2021; // DOUBLE DAGGER\r\n\t\tcase 0x88: return 0x02C6; // MODIFIER LETTER CIRCUMFLEX ACCENT\r\n\t\tcase 0x89: return 0x2030; // PER MILLE SIGN\r\n\t\tcase 0x8A: return 0x0160; // LATIN CAPITAL LETTER S WITH CARON\r\n\t\tcase 0x8B: return 0x2039; // SINGLE LEFT-POINTING ANGLE QUOTATION MARK\r\n\t\tcase 0x8C: return 0x0152; // LATIN CAPITAL LIGATURE OE\r\n\t\tcase 0x8D: return 0x008D; // <control>\r\n\t\tcase 0x8E: return 0x017D; // LATIN CAPITAL LETTER Z WITH CARON\r\n\t\tcase 0x8F: return 0x008F; // <control>\r\n\t\tcase 0x90: return 0x0090; // <control>\r\n\t\tcase 0x91: return 0x2018; // LEFT SINGLE QUOTATION MARK\r\n\t\tcase 0x92: return 0x2019; // RIGHT SINGLE QUOTATION MARK\r\n\t\tcase 0x93: return 0x201C; // LEFT DOUBLE QUOTATION MARK\r\n\t\tcase 0x94: return 0x201D; // RIGHT DOUBLE QUOTATION MARK\r\n\t\tcase 0x95: return 0x2022; // BULLET\r\n\t\tcase 0x96: return 0x2013; // EN DASH\r\n\t\tcase 0x97: return 0x2014; // EM DASH\r\n\t\tcase 0x98: return 0x02DC; // SMALL TILDE\r\n\t\tcase 0x99: return 0x2122; // TRADE MARK SIGN\r\n\t\tcase 0x9A: return 0x0161; // LATIN SMALL LETTER S WITH CARON\r\n\t\tcase 0x9B: return 0x203A; // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK\r\n\t\tcase 0x9C: return 0x0153; // LATIN SMALL LIGATURE OE\r\n\t\tcase 0x9D: return 0x009D; // <control>\r\n\t\tcase 0x9E: return 0x017E; // LATIN SMALL LETTER Z WITH CARON\r\n\t\tcase 0x9F: return 0x0178; // LATIN CAPITAL LETTER Y WITH DIAERESIS\r\n\t\tdefault:\r\n\t\t\tif ((c >= 0xD800 && c <= 0xDFFF) || c > 0x10FFFF) {\r\n\t\t\t\treturn 0xFFFD;\r\n\t\t\t} else if ((c >= 0x0001 && c <= 0x0008) || (c >= 0x000E && c <= 0x001F) ||\r\n\t\t\t\t(c >= 0x007F && c <= 0x009F) || (c >= 0xFDD0 && c <= 0xFDEF) ||\r\n\t\t\t\tc == 0x000B || c == 0xFFFE || c == 0x1FFFE || c == 0x2FFFFE ||\r\n\t\t\t\tc == 0x2FFFF || c == 0x3FFFE || c == 0x3FFFF || c == 0x4FFFE ||\r\n\t\t\t\tc == 0x4FFFF || c == 0x5FFFE || c == 0x5FFFF || c == 0x6FFFE ||\r\n\t\t\t\tc == 0x6FFFF || c == 0x7FFFE || c == 0x7FFFF || c == 0x8FFFE ||\r\n\t\t\t\tc == 0x8FFFF || c == 0x9FFFE || c == 0x9FFFF || c == 0xAFFFE ||\r\n\t\t\t\tc == 0xAFFFF || c == 0xBFFFE || c == 0xBFFFF || c == 0xCFFFE ||\r\n\t\t\t\tc == 0xCFFFF || c == 0xDFFFE || c == 0xDFFFF || c == 0xEFFFE ||\r\n\t\t\t\tc == 0xEFFFF || c == 0xFFFFE || c == 0xFFFFF || c == 0x10FFFE ||\r\n\t\t\t\tc == 0x10FFFF) {\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t}\r\n};\r\n\r\nexports.EntityParser = EntityParser;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5-entities/index.js":"module.exports = {\n\t\"Aacute;\": \"\\u00C1\",\n\t\"Aacute\": \"\\u00C1\",\n\t\"aacute;\": \"\\u00E1\",\n\t\"aacute\": \"\\u00E1\",\n\t\"Abreve;\": \"\\u0102\",\n\t\"abreve;\": \"\\u0103\",\n\t\"ac;\": \"\\u223E\",\n\t\"acd;\": \"\\u223F\",\n\t\"acE;\": \"\\u223E\\u0333\",\n\t\"Acirc;\": \"\\u00C2\",\n\t\"Acirc\": \"\\u00C2\",\n\t\"acirc;\": \"\\u00E2\",\n\t\"acirc\": \"\\u00E2\",\n\t\"acute;\": \"\\u00B4\",\n\t\"acute\": \"\\u00B4\",\n\t\"Acy;\": \"\\u0410\",\n\t\"acy;\": \"\\u0430\",\n\t\"AElig;\": \"\\u00C6\",\n\t\"AElig\": \"\\u00C6\",\n\t\"aelig;\": \"\\u00E6\",\n\t\"aelig\": \"\\u00E6\",\n\t\"af;\": \"\\u2061\",\n\t\"Afr;\": \"\\uD835\\uDD04\",\n\t\"afr;\": \"\\uD835\\uDD1E\",\n\t\"Agrave;\": \"\\u00C0\",\n\t\"Agrave\": \"\\u00C0\",\n\t\"agrave;\": \"\\u00E0\",\n\t\"agrave\": \"\\u00E0\",\n\t\"alefsym;\": \"\\u2135\",\n\t\"aleph;\": \"\\u2135\",\n\t\"Alpha;\": \"\\u0391\",\n\t\"alpha;\": \"\\u03B1\",\n\t\"Amacr;\": \"\\u0100\",\n\t\"amacr;\": \"\\u0101\",\n\t\"amalg;\": \"\\u2A3F\",\n\t\"amp;\": \"\\u0026\",\n\t\"amp\": \"\\u0026\",\n\t\"AMP;\": \"\\u0026\",\n\t\"AMP\": \"\\u0026\",\n\t\"andand;\": \"\\u2A55\",\n\t\"And;\": \"\\u2A53\",\n\t\"and;\": \"\\u2227\",\n\t\"andd;\": \"\\u2A5C\",\n\t\"andslope;\": \"\\u2A58\",\n\t\"andv;\": \"\\u2A5A\",\n\t\"ang;\": \"\\u2220\",\n\t\"ange;\": \"\\u29A4\",\n\t\"angle;\": \"\\u2220\",\n\t\"angmsdaa;\": \"\\u29A8\",\n\t\"angmsdab;\": \"\\u29A9\",\n\t\"angmsdac;\": \"\\u29AA\",\n\t\"angmsdad;\": \"\\u29AB\",\n\t\"angmsdae;\": \"\\u29AC\",\n\t\"angmsdaf;\": \"\\u29AD\",\n\t\"angmsdag;\": \"\\u29AE\",\n\t\"angmsdah;\": \"\\u29AF\",\n\t\"angmsd;\": \"\\u2221\",\n\t\"angrt;\": \"\\u221F\",\n\t\"angrtvb;\": \"\\u22BE\",\n\t\"angrtvbd;\": \"\\u299D\",\n\t\"angsph;\": \"\\u2222\",\n\t\"angst;\": \"\\u00C5\",\n\t\"angzarr;\": \"\\u237C\",\n\t\"Aogon;\": \"\\u0104\",\n\t\"aogon;\": \"\\u0105\",\n\t\"Aopf;\": \"\\uD835\\uDD38\",\n\t\"aopf;\": \"\\uD835\\uDD52\",\n\t\"apacir;\": \"\\u2A6F\",\n\t\"ap;\": \"\\u2248\",\n\t\"apE;\": \"\\u2A70\",\n\t\"ape;\": \"\\u224A\",\n\t\"apid;\": \"\\u224B\",\n\t\"apos;\": \"\\u0027\",\n\t\"ApplyFunction;\": \"\\u2061\",\n\t\"approx;\": \"\\u2248\",\n\t\"approxeq;\": \"\\u224A\",\n\t\"Aring;\": \"\\u00C5\",\n\t\"Aring\": \"\\u00C5\",\n\t\"aring;\": \"\\u00E5\",\n\t\"aring\": \"\\u00E5\",\n\t\"Ascr;\": \"\\uD835\\uDC9C\",\n\t\"ascr;\": \"\\uD835\\uDCB6\",\n\t\"Assign;\": \"\\u2254\",\n\t\"ast;\": \"\\u002A\",\n\t\"asymp;\": \"\\u2248\",\n\t\"asympeq;\": \"\\u224D\",\n\t\"Atilde;\": \"\\u00C3\",\n\t\"Atilde\": \"\\u00C3\",\n\t\"atilde;\": \"\\u00E3\",\n\t\"atilde\": \"\\u00E3\",\n\t\"Auml;\": \"\\u00C4\",\n\t\"Auml\": \"\\u00C4\",\n\t\"auml;\": \"\\u00E4\",\n\t\"auml\": \"\\u00E4\",\n\t\"awconint;\": \"\\u2233\",\n\t\"awint;\": \"\\u2A11\",\n\t\"backcong;\": \"\\u224C\",\n\t\"backepsilon;\": \"\\u03F6\",\n\t\"backprime;\": \"\\u2035\",\n\t\"backsim;\": \"\\u223D\",\n\t\"backsimeq;\": \"\\u22CD\",\n\t\"Backslash;\": \"\\u2216\",\n\t\"Barv;\": \"\\u2AE7\",\n\t\"barvee;\": \"\\u22BD\",\n\t\"barwed;\": \"\\u2305\",\n\t\"Barwed;\": \"\\u2306\",\n\t\"barwedge;\": \"\\u2305\",\n\t\"bbrk;\": \"\\u23B5\",\n\t\"bbrktbrk;\": \"\\u23B6\",\n\t\"bcong;\": \"\\u224C\",\n\t\"Bcy;\": \"\\u0411\",\n\t\"bcy;\": \"\\u0431\",\n\t\"bdquo;\": \"\\u201E\",\n\t\"becaus;\": \"\\u2235\",\n\t\"because;\": \"\\u2235\",\n\t\"Because;\": \"\\u2235\",\n\t\"bemptyv;\": \"\\u29B0\",\n\t\"bepsi;\": \"\\u03F6\",\n\t\"bernou;\": \"\\u212C\",\n\t\"Bernoullis;\": \"\\u212C\",\n\t\"Beta;\": \"\\u0392\",\n\t\"beta;\": \"\\u03B2\",\n\t\"beth;\": \"\\u2136\",\n\t\"between;\": \"\\u226C\",\n\t\"Bfr;\": \"\\uD835\\uDD05\",\n\t\"bfr;\": \"\\uD835\\uDD1F\",\n\t\"bigcap;\": \"\\u22C2\",\n\t\"bigcirc;\": \"\\u25EF\",\n\t\"bigcup;\": \"\\u22C3\",\n\t\"bigodot;\": \"\\u2A00\",\n\t\"bigoplus;\": \"\\u2A01\",\n\t\"bigotimes;\": \"\\u2A02\",\n\t\"bigsqcup;\": \"\\u2A06\",\n\t\"bigstar;\": \"\\u2605\",\n\t\"bigtriangledown;\": \"\\u25BD\",\n\t\"bigtriangleup;\": \"\\u25B3\",\n\t\"biguplus;\": \"\\u2A04\",\n\t\"bigvee;\": \"\\u22C1\",\n\t\"bigwedge;\": \"\\u22C0\",\n\t\"bkarow;\": \"\\u290D\",\n\t\"blacklozenge;\": \"\\u29EB\",\n\t\"blacksquare;\": \"\\u25AA\",\n\t\"blacktriangle;\": \"\\u25B4\",\n\t\"blacktriangledown;\": \"\\u25BE\",\n\t\"blacktriangleleft;\": \"\\u25C2\",\n\t\"blacktriangleright;\": \"\\u25B8\",\n\t\"blank;\": \"\\u2423\",\n\t\"blk12;\": \"\\u2592\",\n\t\"blk14;\": \"\\u2591\",\n\t\"blk34;\": \"\\u2593\",\n\t\"block;\": \"\\u2588\",\n\t\"bne;\": \"\\u003D\\u20E5\",\n\t\"bnequiv;\": \"\\u2261\\u20E5\",\n\t\"bNot;\": \"\\u2AED\",\n\t\"bnot;\": \"\\u2310\",\n\t\"Bopf;\": \"\\uD835\\uDD39\",\n\t\"bopf;\": \"\\uD835\\uDD53\",\n\t\"bot;\": \"\\u22A5\",\n\t\"bottom;\": \"\\u22A5\",\n\t\"bowtie;\": \"\\u22C8\",\n\t\"boxbox;\": \"\\u29C9\",\n\t\"boxdl;\": \"\\u2510\",\n\t\"boxdL;\": \"\\u2555\",\n\t\"boxDl;\": \"\\u2556\",\n\t\"boxDL;\": \"\\u2557\",\n\t\"boxdr;\": \"\\u250C\",\n\t\"boxdR;\": \"\\u2552\",\n\t\"boxDr;\": \"\\u2553\",\n\t\"boxDR;\": \"\\u2554\",\n\t\"boxh;\": \"\\u2500\",\n\t\"boxH;\": \"\\u2550\",\n\t\"boxhd;\": \"\\u252C\",\n\t\"boxHd;\": \"\\u2564\",\n\t\"boxhD;\": \"\\u2565\",\n\t\"boxHD;\": \"\\u2566\",\n\t\"boxhu;\": \"\\u2534\",\n\t\"boxHu;\": \"\\u2567\",\n\t\"boxhU;\": \"\\u2568\",\n\t\"boxHU;\": \"\\u2569\",\n\t\"boxminus;\": \"\\u229F\",\n\t\"boxplus;\": \"\\u229E\",\n\t\"boxtimes;\": \"\\u22A0\",\n\t\"boxul;\": \"\\u2518\",\n\t\"boxuL;\": \"\\u255B\",\n\t\"boxUl;\": \"\\u255C\",\n\t\"boxUL;\": \"\\u255D\",\n\t\"boxur;\": \"\\u2514\",\n\t\"boxuR;\": \"\\u2558\",\n\t\"boxUr;\": \"\\u2559\",\n\t\"boxUR;\": \"\\u255A\",\n\t\"boxv;\": \"\\u2502\",\n\t\"boxV;\": \"\\u2551\",\n\t\"boxvh;\": \"\\u253C\",\n\t\"boxvH;\": \"\\u256A\",\n\t\"boxVh;\": \"\\u256B\",\n\t\"boxVH;\": \"\\u256C\",\n\t\"boxvl;\": \"\\u2524\",\n\t\"boxvL;\": \"\\u2561\",\n\t\"boxVl;\": \"\\u2562\",\n\t\"boxVL;\": \"\\u2563\",\n\t\"boxvr;\": \"\\u251C\",\n\t\"boxvR;\": \"\\u255E\",\n\t\"boxVr;\": \"\\u255F\",\n\t\"boxVR;\": \"\\u2560\",\n\t\"bprime;\": \"\\u2035\",\n\t\"breve;\": \"\\u02D8\",\n\t\"Breve;\": \"\\u02D8\",\n\t\"brvbar;\": \"\\u00A6\",\n\t\"brvbar\": \"\\u00A6\",\n\t\"bscr;\": \"\\uD835\\uDCB7\",\n\t\"Bscr;\": \"\\u212C\",\n\t\"bsemi;\": \"\\u204F\",\n\t\"bsim;\": \"\\u223D\",\n\t\"bsime;\": \"\\u22CD\",\n\t\"bsolb;\": \"\\u29C5\",\n\t\"bsol;\": \"\\u005C\",\n\t\"bsolhsub;\": \"\\u27C8\",\n\t\"bull;\": \"\\u2022\",\n\t\"bullet;\": \"\\u2022\",\n\t\"bump;\": \"\\u224E\",\n\t\"bumpE;\": \"\\u2AAE\",\n\t\"bumpe;\": \"\\u224F\",\n\t\"Bumpeq;\": \"\\u224E\",\n\t\"bumpeq;\": \"\\u224F\",\n\t\"Cacute;\": \"\\u0106\",\n\t\"cacute;\": \"\\u0107\",\n\t\"capand;\": \"\\u2A44\",\n\t\"capbrcup;\": \"\\u2A49\",\n\t\"capcap;\": \"\\u2A4B\",\n\t\"cap;\": \"\\u2229\",\n\t\"Cap;\": \"\\u22D2\",\n\t\"capcup;\": \"\\u2A47\",\n\t\"capdot;\": \"\\u2A40\",\n\t\"CapitalDifferentialD;\": \"\\u2145\",\n\t\"caps;\": \"\\u2229\\uFE00\",\n\t\"caret;\": \"\\u2041\",\n\t\"caron;\": \"\\u02C7\",\n\t\"Cayleys;\": \"\\u212D\",\n\t\"ccaps;\": \"\\u2A4D\",\n\t\"Ccaron;\": \"\\u010C\",\n\t\"ccaron;\": \"\\u010D\",\n\t\"Ccedil;\": \"\\u00C7\",\n\t\"Ccedil\": \"\\u00C7\",\n\t\"ccedil;\": \"\\u00E7\",\n\t\"ccedil\": \"\\u00E7\",\n\t\"Ccirc;\": \"\\u0108\",\n\t\"ccirc;\": \"\\u0109\",\n\t\"Cconint;\": \"\\u2230\",\n\t\"ccups;\": \"\\u2A4C\",\n\t\"ccupssm;\": \"\\u2A50\",\n\t\"Cdot;\": \"\\u010A\",\n\t\"cdot;\": \"\\u010B\",\n\t\"cedil;\": \"\\u00B8\",\n\t\"cedil\": \"\\u00B8\",\n\t\"Cedilla;\": \"\\u00B8\",\n\t\"cemptyv;\": \"\\u29B2\",\n\t\"cent;\": \"\\u00A2\",\n\t\"cent\": \"\\u00A2\",\n\t\"centerdot;\": \"\\u00B7\",\n\t\"CenterDot;\": \"\\u00B7\",\n\t\"cfr;\": \"\\uD835\\uDD20\",\n\t\"Cfr;\": \"\\u212D\",\n\t\"CHcy;\": \"\\u0427\",\n\t\"chcy;\": \"\\u0447\",\n\t\"check;\": \"\\u2713\",\n\t\"checkmark;\": \"\\u2713\",\n\t\"Chi;\": \"\\u03A7\",\n\t\"chi;\": \"\\u03C7\",\n\t\"circ;\": \"\\u02C6\",\n\t\"circeq;\": \"\\u2257\",\n\t\"circlearrowleft;\": \"\\u21BA\",\n\t\"circlearrowright;\": \"\\u21BB\",\n\t\"circledast;\": \"\\u229B\",\n\t\"circledcirc;\": \"\\u229A\",\n\t\"circleddash;\": \"\\u229D\",\n\t\"CircleDot;\": \"\\u2299\",\n\t\"circledR;\": \"\\u00AE\",\n\t\"circledS;\": \"\\u24C8\",\n\t\"CircleMinus;\": \"\\u2296\",\n\t\"CirclePlus;\": \"\\u2295\",\n\t\"CircleTimes;\": \"\\u2297\",\n\t\"cir;\": \"\\u25CB\",\n\t\"cirE;\": \"\\u29C3\",\n\t\"cire;\": \"\\u2257\",\n\t\"cirfnint;\": \"\\u2A10\",\n\t\"cirmid;\": \"\\u2AEF\",\n\t\"cirscir;\": \"\\u29C2\",\n\t\"ClockwiseContourIntegral;\": \"\\u2232\",\n\t\"CloseCurlyDoubleQuote;\": \"\\u201D\",\n\t\"CloseCurlyQuote;\": \"\\u2019\",\n\t\"clubs;\": \"\\u2663\",\n\t\"clubsuit;\": \"\\u2663\",\n\t\"colon;\": \"\\u003A\",\n\t\"Colon;\": \"\\u2237\",\n\t\"Colone;\": \"\\u2A74\",\n\t\"colone;\": \"\\u2254\",\n\t\"coloneq;\": \"\\u2254\",\n\t\"comma;\": \"\\u002C\",\n\t\"commat;\": \"\\u0040\",\n\t\"comp;\": \"\\u2201\",\n\t\"compfn;\": \"\\u2218\",\n\t\"complement;\": \"\\u2201\",\n\t\"complexes;\": \"\\u2102\",\n\t\"cong;\": \"\\u2245\",\n\t\"congdot;\": \"\\u2A6D\",\n\t\"Congruent;\": \"\\u2261\",\n\t\"conint;\": \"\\u222E\",\n\t\"Conint;\": \"\\u222F\",\n\t\"ContourIntegral;\": \"\\u222E\",\n\t\"copf;\": \"\\uD835\\uDD54\",\n\t\"Copf;\": \"\\u2102\",\n\t\"coprod;\": \"\\u2210\",\n\t\"Coproduct;\": \"\\u2210\",\n\t\"copy;\": \"\\u00A9\",\n\t\"copy\": \"\\u00A9\",\n\t\"COPY;\": \"\\u00A9\",\n\t\"COPY\": \"\\u00A9\",\n\t\"copysr;\": \"\\u2117\",\n\t\"CounterClockwiseContourIntegral;\": \"\\u2233\",\n\t\"crarr;\": \"\\u21B5\",\n\t\"cross;\": \"\\u2717\",\n\t\"Cross;\": \"\\u2A2F\",\n\t\"Cscr;\": \"\\uD835\\uDC9E\",\n\t\"cscr;\": \"\\uD835\\uDCB8\",\n\t\"csub;\": \"\\u2ACF\",\n\t\"csube;\": \"\\u2AD1\",\n\t\"csup;\": \"\\u2AD0\",\n\t\"csupe;\": \"\\u2AD2\",\n\t\"ctdot;\": \"\\u22EF\",\n\t\"cudarrl;\": \"\\u2938\",\n\t\"cudarrr;\": \"\\u2935\",\n\t\"cuepr;\": \"\\u22DE\",\n\t\"cuesc;\": \"\\u22DF\",\n\t\"cularr;\": \"\\u21B6\",\n\t\"cularrp;\": \"\\u293D\",\n\t\"cupbrcap;\": \"\\u2A48\",\n\t\"cupcap;\": \"\\u2A46\",\n\t\"CupCap;\": \"\\u224D\",\n\t\"cup;\": \"\\u222A\",\n\t\"Cup;\": \"\\u22D3\",\n\t\"cupcup;\": \"\\u2A4A\",\n\t\"cupdot;\": \"\\u228D\",\n\t\"cupor;\": \"\\u2A45\",\n\t\"cups;\": \"\\u222A\\uFE00\",\n\t\"curarr;\": \"\\u21B7\",\n\t\"curarrm;\": \"\\u293C\",\n\t\"curlyeqprec;\": \"\\u22DE\",\n\t\"curlyeqsucc;\": \"\\u22DF\",\n\t\"curlyvee;\": \"\\u22CE\",\n\t\"curlywedge;\": \"\\u22CF\",\n\t\"curren;\": \"\\u00A4\",\n\t\"curren\": \"\\u00A4\",\n\t\"curvearrowleft;\": \"\\u21B6\",\n\t\"curvearrowright;\": \"\\u21B7\",\n\t\"cuvee;\": \"\\u22CE\",\n\t\"cuwed;\": \"\\u22CF\",\n\t\"cwconint;\": \"\\u2232\",\n\t\"cwint;\": \"\\u2231\",\n\t\"cylcty;\": \"\\u232D\",\n\t\"dagger;\": \"\\u2020\",\n\t\"Dagger;\": \"\\u2021\",\n\t\"daleth;\": \"\\u2138\",\n\t\"darr;\": \"\\u2193\",\n\t\"Darr;\": \"\\u21A1\",\n\t\"dArr;\": \"\\u21D3\",\n\t\"dash;\": \"\\u2010\",\n\t\"Dashv;\": \"\\u2AE4\",\n\t\"dashv;\": \"\\u22A3\",\n\t\"dbkarow;\": \"\\u290F\",\n\t\"dblac;\": \"\\u02DD\",\n\t\"Dcaron;\": \"\\u010E\",\n\t\"dcaron;\": \"\\u010F\",\n\t\"Dcy;\": \"\\u0414\",\n\t\"dcy;\": \"\\u0434\",\n\t\"ddagger;\": \"\\u2021\",\n\t\"ddarr;\": \"\\u21CA\",\n\t\"DD;\": \"\\u2145\",\n\t\"dd;\": \"\\u2146\",\n\t\"DDotrahd;\": \"\\u2911\",\n\t\"ddotseq;\": \"\\u2A77\",\n\t\"deg;\": \"\\u00B0\",\n\t\"deg\": \"\\u00B0\",\n\t\"Del;\": \"\\u2207\",\n\t\"Delta;\": \"\\u0394\",\n\t\"delta;\": \"\\u03B4\",\n\t\"demptyv;\": \"\\u29B1\",\n\t\"dfisht;\": \"\\u297F\",\n\t\"Dfr;\": \"\\uD835\\uDD07\",\n\t\"dfr;\": \"\\uD835\\uDD21\",\n\t\"dHar;\": \"\\u2965\",\n\t\"dharl;\": \"\\u21C3\",\n\t\"dharr;\": \"\\u21C2\",\n\t\"DiacriticalAcute;\": \"\\u00B4\",\n\t\"DiacriticalDot;\": \"\\u02D9\",\n\t\"DiacriticalDoubleAcute;\": \"\\u02DD\",\n\t\"DiacriticalGrave;\": \"\\u0060\",\n\t\"DiacriticalTilde;\": \"\\u02DC\",\n\t\"diam;\": \"\\u22C4\",\n\t\"diamond;\": \"\\u22C4\",\n\t\"Diamond;\": \"\\u22C4\",\n\t\"diamondsuit;\": \"\\u2666\",\n\t\"diams;\": \"\\u2666\",\n\t\"die;\": \"\\u00A8\",\n\t\"DifferentialD;\": \"\\u2146\",\n\t\"digamma;\": \"\\u03DD\",\n\t\"disin;\": \"\\u22F2\",\n\t\"div;\": \"\\u00F7\",\n\t\"divide;\": \"\\u00F7\",\n\t\"divide\": \"\\u00F7\",\n\t\"divideontimes;\": \"\\u22C7\",\n\t\"divonx;\": \"\\u22C7\",\n\t\"DJcy;\": \"\\u0402\",\n\t\"djcy;\": \"\\u0452\",\n\t\"dlcorn;\": \"\\u231E\",\n\t\"dlcrop;\": \"\\u230D\",\n\t\"dollar;\": \"\\u0024\",\n\t\"Dopf;\": \"\\uD835\\uDD3B\",\n\t\"dopf;\": \"\\uD835\\uDD55\",\n\t\"Dot;\": \"\\u00A8\",\n\t\"dot;\": \"\\u02D9\",\n\t\"DotDot;\": \"\\u20DC\",\n\t\"doteq;\": \"\\u2250\",\n\t\"doteqdot;\": \"\\u2251\",\n\t\"DotEqual;\": \"\\u2250\",\n\t\"dotminus;\": \"\\u2238\",\n\t\"dotplus;\": \"\\u2214\",\n\t\"dotsquare;\": \"\\u22A1\",\n\t\"doublebarwedge;\": \"\\u2306\",\n\t\"DoubleContourIntegral;\": \"\\u222F\",\n\t\"DoubleDot;\": \"\\u00A8\",\n\t\"DoubleDownArrow;\": \"\\u21D3\",\n\t\"DoubleLeftArrow;\": \"\\u21D0\",\n\t\"DoubleLeftRightArrow;\": \"\\u21D4\",\n\t\"DoubleLeftTee;\": \"\\u2AE4\",\n\t\"DoubleLongLeftArrow;\": \"\\u27F8\",\n\t\"DoubleLongLeftRightArrow;\": \"\\u27FA\",\n\t\"DoubleLongRightArrow;\": \"\\u27F9\",\n\t\"DoubleRightArrow;\": \"\\u21D2\",\n\t\"DoubleRightTee;\": \"\\u22A8\",\n\t\"DoubleUpArrow;\": \"\\u21D1\",\n\t\"DoubleUpDownArrow;\": \"\\u21D5\",\n\t\"DoubleVerticalBar;\": \"\\u2225\",\n\t\"DownArrowBar;\": \"\\u2913\",\n\t\"downarrow;\": \"\\u2193\",\n\t\"DownArrow;\": \"\\u2193\",\n\t\"Downarrow;\": \"\\u21D3\",\n\t\"DownArrowUpArrow;\": \"\\u21F5\",\n\t\"DownBreve;\": \"\\u0311\",\n\t\"downdownarrows;\": \"\\u21CA\",\n\t\"downharpoonleft;\": \"\\u21C3\",\n\t\"downharpoonright;\": \"\\u21C2\",\n\t\"DownLeftRightVector;\": \"\\u2950\",\n\t\"DownLeftTeeVector;\": \"\\u295E\",\n\t\"DownLeftVectorBar;\": \"\\u2956\",\n\t\"DownLeftVector;\": \"\\u21BD\",\n\t\"DownRightTeeVector;\": \"\\u295F\",\n\t\"DownRightVectorBar;\": \"\\u2957\",\n\t\"DownRightVector;\": \"\\u21C1\",\n\t\"DownTeeArrow;\": \"\\u21A7\",\n\t\"DownTee;\": \"\\u22A4\",\n\t\"drbkarow;\": \"\\u2910\",\n\t\"drcorn;\": \"\\u231F\",\n\t\"drcrop;\": \"\\u230C\",\n\t\"Dscr;\": \"\\uD835\\uDC9F\",\n\t\"dscr;\": \"\\uD835\\uDCB9\",\n\t\"DScy;\": \"\\u0405\",\n\t\"dscy;\": \"\\u0455\",\n\t\"dsol;\": \"\\u29F6\",\n\t\"Dstrok;\": \"\\u0110\",\n\t\"dstrok;\": \"\\u0111\",\n\t\"dtdot;\": \"\\u22F1\",\n\t\"dtri;\": \"\\u25BF\",\n\t\"dtrif;\": \"\\u25BE\",\n\t\"duarr;\": \"\\u21F5\",\n\t\"duhar;\": \"\\u296F\",\n\t\"dwangle;\": \"\\u29A6\",\n\t\"DZcy;\": \"\\u040F\",\n\t\"dzcy;\": \"\\u045F\",\n\t\"dzigrarr;\": \"\\u27FF\",\n\t\"Eacute;\": \"\\u00C9\",\n\t\"Eacute\": \"\\u00C9\",\n\t\"eacute;\": \"\\u00E9\",\n\t\"eacute\": \"\\u00E9\",\n\t\"easter;\": \"\\u2A6E\",\n\t\"Ecaron;\": \"\\u011A\",\n\t\"ecaron;\": \"\\u011B\",\n\t\"Ecirc;\": \"\\u00CA\",\n\t\"Ecirc\": \"\\u00CA\",\n\t\"ecirc;\": \"\\u00EA\",\n\t\"ecirc\": \"\\u00EA\",\n\t\"ecir;\": \"\\u2256\",\n\t\"ecolon;\": \"\\u2255\",\n\t\"Ecy;\": \"\\u042D\",\n\t\"ecy;\": \"\\u044D\",\n\t\"eDDot;\": \"\\u2A77\",\n\t\"Edot;\": \"\\u0116\",\n\t\"edot;\": \"\\u0117\",\n\t\"eDot;\": \"\\u2251\",\n\t\"ee;\": \"\\u2147\",\n\t\"efDot;\": \"\\u2252\",\n\t\"Efr;\": \"\\uD835\\uDD08\",\n\t\"efr;\": \"\\uD835\\uDD22\",\n\t\"eg;\": \"\\u2A9A\",\n\t\"Egrave;\": \"\\u00C8\",\n\t\"Egrave\": \"\\u00C8\",\n\t\"egrave;\": \"\\u00E8\",\n\t\"egrave\": \"\\u00E8\",\n\t\"egs;\": \"\\u2A96\",\n\t\"egsdot;\": \"\\u2A98\",\n\t\"el;\": \"\\u2A99\",\n\t\"Element;\": \"\\u2208\",\n\t\"elinters;\": \"\\u23E7\",\n\t\"ell;\": \"\\u2113\",\n\t\"els;\": \"\\u2A95\",\n\t\"elsdot;\": \"\\u2A97\",\n\t\"Emacr;\": \"\\u0112\",\n\t\"emacr;\": \"\\u0113\",\n\t\"empty;\": \"\\u2205\",\n\t\"emptyset;\": \"\\u2205\",\n\t\"EmptySmallSquare;\": \"\\u25FB\",\n\t\"emptyv;\": \"\\u2205\",\n\t\"EmptyVerySmallSquare;\": \"\\u25AB\",\n\t\"emsp13;\": \"\\u2004\",\n\t\"emsp14;\": \"\\u2005\",\n\t\"emsp;\": \"\\u2003\",\n\t\"ENG;\": \"\\u014A\",\n\t\"eng;\": \"\\u014B\",\n\t\"ensp;\": \"\\u2002\",\n\t\"Eogon;\": \"\\u0118\",\n\t\"eogon;\": \"\\u0119\",\n\t\"Eopf;\": \"\\uD835\\uDD3C\",\n\t\"eopf;\": \"\\uD835\\uDD56\",\n\t\"epar;\": \"\\u22D5\",\n\t\"eparsl;\": \"\\u29E3\",\n\t\"eplus;\": \"\\u2A71\",\n\t\"epsi;\": \"\\u03B5\",\n\t\"Epsilon;\": \"\\u0395\",\n\t\"epsilon;\": \"\\u03B5\",\n\t\"epsiv;\": \"\\u03F5\",\n\t\"eqcirc;\": \"\\u2256\",\n\t\"eqcolon;\": \"\\u2255\",\n\t\"eqsim;\": \"\\u2242\",\n\t\"eqslantgtr;\": \"\\u2A96\",\n\t\"eqslantless;\": \"\\u2A95\",\n\t\"Equal;\": \"\\u2A75\",\n\t\"equals;\": \"\\u003D\",\n\t\"EqualTilde;\": \"\\u2242\",\n\t\"equest;\": \"\\u225F\",\n\t\"Equilibrium;\": \"\\u21CC\",\n\t\"equiv;\": \"\\u2261\",\n\t\"equivDD;\": \"\\u2A78\",\n\t\"eqvparsl;\": \"\\u29E5\",\n\t\"erarr;\": \"\\u2971\",\n\t\"erDot;\": \"\\u2253\",\n\t\"escr;\": \"\\u212F\",\n\t\"Escr;\": \"\\u2130\",\n\t\"esdot;\": \"\\u2250\",\n\t\"Esim;\": \"\\u2A73\",\n\t\"esim;\": \"\\u2242\",\n\t\"Eta;\": \"\\u0397\",\n\t\"eta;\": \"\\u03B7\",\n\t\"ETH;\": \"\\u00D0\",\n\t\"ETH\": \"\\u00D0\",\n\t\"eth;\": \"\\u00F0\",\n\t\"eth\": \"\\u00F0\",\n\t\"Euml;\": \"\\u00CB\",\n\t\"Euml\": \"\\u00CB\",\n\t\"euml;\": \"\\u00EB\",\n\t\"euml\": \"\\u00EB\",\n\t\"euro;\": \"\\u20AC\",\n\t\"excl;\": \"\\u0021\",\n\t\"exist;\": \"\\u2203\",\n\t\"Exists;\": \"\\u2203\",\n\t\"expectation;\": \"\\u2130\",\n\t\"exponentiale;\": \"\\u2147\",\n\t\"ExponentialE;\": \"\\u2147\",\n\t\"fallingdotseq;\": \"\\u2252\",\n\t\"Fcy;\": \"\\u0424\",\n\t\"fcy;\": \"\\u0444\",\n\t\"female;\": \"\\u2640\",\n\t\"ffilig;\": \"\\uFB03\",\n\t\"fflig;\": \"\\uFB00\",\n\t\"ffllig;\": \"\\uFB04\",\n\t\"Ffr;\": \"\\uD835\\uDD09\",\n\t\"ffr;\": \"\\uD835\\uDD23\",\n\t\"filig;\": \"\\uFB01\",\n\t\"FilledSmallSquare;\": \"\\u25FC\",\n\t\"FilledVerySmallSquare;\": \"\\u25AA\",\n\t\"fjlig;\": \"\\u0066\\u006A\",\n\t\"flat;\": \"\\u266D\",\n\t\"fllig;\": \"\\uFB02\",\n\t\"fltns;\": \"\\u25B1\",\n\t\"fnof;\": \"\\u0192\",\n\t\"Fopf;\": \"\\uD835\\uDD3D\",\n\t\"fopf;\": \"\\uD835\\uDD57\",\n\t\"forall;\": \"\\u2200\",\n\t\"ForAll;\": \"\\u2200\",\n\t\"fork;\": \"\\u22D4\",\n\t\"forkv;\": \"\\u2AD9\",\n\t\"Fouriertrf;\": \"\\u2131\",\n\t\"fpartint;\": \"\\u2A0D\",\n\t\"frac12;\": \"\\u00BD\",\n\t\"frac12\": \"\\u00BD\",\n\t\"frac13;\": \"\\u2153\",\n\t\"frac14;\": \"\\u00BC\",\n\t\"frac14\": \"\\u00BC\",\n\t\"frac15;\": \"\\u2155\",\n\t\"frac16;\": \"\\u2159\",\n\t\"frac18;\": \"\\u215B\",\n\t\"frac23;\": \"\\u2154\",\n\t\"frac25;\": \"\\u2156\",\n\t\"frac34;\": \"\\u00BE\",\n\t\"frac34\": \"\\u00BE\",\n\t\"frac35;\": \"\\u2157\",\n\t\"frac38;\": \"\\u215C\",\n\t\"frac45;\": \"\\u2158\",\n\t\"frac56;\": \"\\u215A\",\n\t\"frac58;\": \"\\u215D\",\n\t\"frac78;\": \"\\u215E\",\n\t\"frasl;\": \"\\u2044\",\n\t\"frown;\": \"\\u2322\",\n\t\"fscr;\": \"\\uD835\\uDCBB\",\n\t\"Fscr;\": \"\\u2131\",\n\t\"gacute;\": \"\\u01F5\",\n\t\"Gamma;\": \"\\u0393\",\n\t\"gamma;\": \"\\u03B3\",\n\t\"Gammad;\": \"\\u03DC\",\n\t\"gammad;\": \"\\u03DD\",\n\t\"gap;\": \"\\u2A86\",\n\t\"Gbreve;\": \"\\u011E\",\n\t\"gbreve;\": \"\\u011F\",\n\t\"Gcedil;\": \"\\u0122\",\n\t\"Gcirc;\": \"\\u011C\",\n\t\"gcirc;\": \"\\u011D\",\n\t\"Gcy;\": \"\\u0413\",\n\t\"gcy;\": \"\\u0433\",\n\t\"Gdot;\": \"\\u0120\",\n\t\"gdot;\": \"\\u0121\",\n\t\"ge;\": \"\\u2265\",\n\t\"gE;\": \"\\u2267\",\n\t\"gEl;\": \"\\u2A8C\",\n\t\"gel;\": \"\\u22DB\",\n\t\"geq;\": \"\\u2265\",\n\t\"geqq;\": \"\\u2267\",\n\t\"geqslant;\": \"\\u2A7E\",\n\t\"gescc;\": \"\\u2AA9\",\n\t\"ges;\": \"\\u2A7E\",\n\t\"gesdot;\": \"\\u2A80\",\n\t\"gesdoto;\": \"\\u2A82\",\n\t\"gesdotol;\": \"\\u2A84\",\n\t\"gesl;\": \"\\u22DB\\uFE00\",\n\t\"gesles;\": \"\\u2A94\",\n\t\"Gfr;\": \"\\uD835\\uDD0A\",\n\t\"gfr;\": \"\\uD835\\uDD24\",\n\t\"gg;\": \"\\u226B\",\n\t\"Gg;\": \"\\u22D9\",\n\t\"ggg;\": \"\\u22D9\",\n\t\"gimel;\": \"\\u2137\",\n\t\"GJcy;\": \"\\u0403\",\n\t\"gjcy;\": \"\\u0453\",\n\t\"gla;\": \"\\u2AA5\",\n\t\"gl;\": \"\\u2277\",\n\t\"glE;\": \"\\u2A92\",\n\t\"glj;\": \"\\u2AA4\",\n\t\"gnap;\": \"\\u2A8A\",\n\t\"gnapprox;\": \"\\u2A8A\",\n\t\"gne;\": \"\\u2A88\",\n\t\"gnE;\": \"\\u2269\",\n\t\"gneq;\": \"\\u2A88\",\n\t\"gneqq;\": \"\\u2269\",\n\t\"gnsim;\": \"\\u22E7\",\n\t\"Gopf;\": \"\\uD835\\uDD3E\",\n\t\"gopf;\": \"\\uD835\\uDD58\",\n\t\"grave;\": \"\\u0060\",\n\t\"GreaterEqual;\": \"\\u2265\",\n\t\"GreaterEqualLess;\": \"\\u22DB\",\n\t\"GreaterFullEqual;\": \"\\u2267\",\n\t\"GreaterGreater;\": \"\\u2AA2\",\n\t\"GreaterLess;\": \"\\u2277\",\n\t\"GreaterSlantEqual;\": \"\\u2A7E\",\n\t\"GreaterTilde;\": \"\\u2273\",\n\t\"Gscr;\": \"\\uD835\\uDCA2\",\n\t\"gscr;\": \"\\u210A\",\n\t\"gsim;\": \"\\u2273\",\n\t\"gsime;\": \"\\u2A8E\",\n\t\"gsiml;\": \"\\u2A90\",\n\t\"gtcc;\": \"\\u2AA7\",\n\t\"gtcir;\": \"\\u2A7A\",\n\t\"gt;\": \"\\u003E\",\n\t\"gt\": \"\\u003E\",\n\t\"GT;\": \"\\u003E\",\n\t\"GT\": \"\\u003E\",\n\t\"Gt;\": \"\\u226B\",\n\t\"gtdot;\": \"\\u22D7\",\n\t\"gtlPar;\": \"\\u2995\",\n\t\"gtquest;\": \"\\u2A7C\",\n\t\"gtrapprox;\": \"\\u2A86\",\n\t\"gtrarr;\": \"\\u2978\",\n\t\"gtrdot;\": \"\\u22D7\",\n\t\"gtreqless;\": \"\\u22DB\",\n\t\"gtreqqless;\": \"\\u2A8C\",\n\t\"gtrless;\": \"\\u2277\",\n\t\"gtrsim;\": \"\\u2273\",\n\t\"gvertneqq;\": \"\\u2269\\uFE00\",\n\t\"gvnE;\": \"\\u2269\\uFE00\",\n\t\"Hacek;\": \"\\u02C7\",\n\t\"hairsp;\": \"\\u200A\",\n\t\"half;\": \"\\u00BD\",\n\t\"hamilt;\": \"\\u210B\",\n\t\"HARDcy;\": \"\\u042A\",\n\t\"hardcy;\": \"\\u044A\",\n\t\"harrcir;\": \"\\u2948\",\n\t\"harr;\": \"\\u2194\",\n\t\"hArr;\": \"\\u21D4\",\n\t\"harrw;\": \"\\u21AD\",\n\t\"Hat;\": \"\\u005E\",\n\t\"hbar;\": \"\\u210F\",\n\t\"Hcirc;\": \"\\u0124\",\n\t\"hcirc;\": \"\\u0125\",\n\t\"hearts;\": \"\\u2665\",\n\t\"heartsuit;\": \"\\u2665\",\n\t\"hellip;\": \"\\u2026\",\n\t\"hercon;\": \"\\u22B9\",\n\t\"hfr;\": \"\\uD835\\uDD25\",\n\t\"Hfr;\": \"\\u210C\",\n\t\"HilbertSpace;\": \"\\u210B\",\n\t\"hksearow;\": \"\\u2925\",\n\t\"hkswarow;\": \"\\u2926\",\n\t\"hoarr;\": \"\\u21FF\",\n\t\"homtht;\": \"\\u223B\",\n\t\"hookleftarrow;\": \"\\u21A9\",\n\t\"hookrightarrow;\": \"\\u21AA\",\n\t\"hopf;\": \"\\uD835\\uDD59\",\n\t\"Hopf;\": \"\\u210D\",\n\t\"horbar;\": \"\\u2015\",\n\t\"HorizontalLine;\": \"\\u2500\",\n\t\"hscr;\": \"\\uD835\\uDCBD\",\n\t\"Hscr;\": \"\\u210B\",\n\t\"hslash;\": \"\\u210F\",\n\t\"Hstrok;\": \"\\u0126\",\n\t\"hstrok;\": \"\\u0127\",\n\t\"HumpDownHump;\": \"\\u224E\",\n\t\"HumpEqual;\": \"\\u224F\",\n\t\"hybull;\": \"\\u2043\",\n\t\"hyphen;\": \"\\u2010\",\n\t\"Iacute;\": \"\\u00CD\",\n\t\"Iacute\": \"\\u00CD\",\n\t\"iacute;\": \"\\u00ED\",\n\t\"iacute\": \"\\u00ED\",\n\t\"ic;\": \"\\u2063\",\n\t\"Icirc;\": \"\\u00CE\",\n\t\"Icirc\": \"\\u00CE\",\n\t\"icirc;\": \"\\u00EE\",\n\t\"icirc\": \"\\u00EE\",\n\t\"Icy;\": \"\\u0418\",\n\t\"icy;\": \"\\u0438\",\n\t\"Idot;\": \"\\u0130\",\n\t\"IEcy;\": \"\\u0415\",\n\t\"iecy;\": \"\\u0435\",\n\t\"iexcl;\": \"\\u00A1\",\n\t\"iexcl\": \"\\u00A1\",\n\t\"iff;\": \"\\u21D4\",\n\t\"ifr;\": \"\\uD835\\uDD26\",\n\t\"Ifr;\": \"\\u2111\",\n\t\"Igrave;\": \"\\u00CC\",\n\t\"Igrave\": \"\\u00CC\",\n\t\"igrave;\": \"\\u00EC\",\n\t\"igrave\": \"\\u00EC\",\n\t\"ii;\": \"\\u2148\",\n\t\"iiiint;\": \"\\u2A0C\",\n\t\"iiint;\": \"\\u222D\",\n\t\"iinfin;\": \"\\u29DC\",\n\t\"iiota;\": \"\\u2129\",\n\t\"IJlig;\": \"\\u0132\",\n\t\"ijlig;\": \"\\u0133\",\n\t\"Imacr;\": \"\\u012A\",\n\t\"imacr;\": \"\\u012B\",\n\t\"image;\": \"\\u2111\",\n\t\"ImaginaryI;\": \"\\u2148\",\n\t\"imagline;\": \"\\u2110\",\n\t\"imagpart;\": \"\\u2111\",\n\t\"imath;\": \"\\u0131\",\n\t\"Im;\": \"\\u2111\",\n\t\"imof;\": \"\\u22B7\",\n\t\"imped;\": \"\\u01B5\",\n\t\"Implies;\": \"\\u21D2\",\n\t\"incare;\": \"\\u2105\",\n\t\"in;\": \"\\u2208\",\n\t\"infin;\": \"\\u221E\",\n\t\"infintie;\": \"\\u29DD\",\n\t\"inodot;\": \"\\u0131\",\n\t\"intcal;\": \"\\u22BA\",\n\t\"int;\": \"\\u222B\",\n\t\"Int;\": \"\\u222C\",\n\t\"integers;\": \"\\u2124\",\n\t\"Integral;\": \"\\u222B\",\n\t\"intercal;\": \"\\u22BA\",\n\t\"Intersection;\": \"\\u22C2\",\n\t\"intlarhk;\": \"\\u2A17\",\n\t\"intprod;\": \"\\u2A3C\",\n\t\"InvisibleComma;\": \"\\u2063\",\n\t\"InvisibleTimes;\": \"\\u2062\",\n\t\"IOcy;\": \"\\u0401\",\n\t\"iocy;\": \"\\u0451\",\n\t\"Iogon;\": \"\\u012E\",\n\t\"iogon;\": \"\\u012F\",\n\t\"Iopf;\": \"\\uD835\\uDD40\",\n\t\"iopf;\": \"\\uD835\\uDD5A\",\n\t\"Iota;\": \"\\u0399\",\n\t\"iota;\": \"\\u03B9\",\n\t\"iprod;\": \"\\u2A3C\",\n\t\"iquest;\": \"\\u00BF\",\n\t\"iquest\": \"\\u00BF\",\n\t\"iscr;\": \"\\uD835\\uDCBE\",\n\t\"Iscr;\": \"\\u2110\",\n\t\"isin;\": \"\\u2208\",\n\t\"isindot;\": \"\\u22F5\",\n\t\"isinE;\": \"\\u22F9\",\n\t\"isins;\": \"\\u22F4\",\n\t\"isinsv;\": \"\\u22F3\",\n\t\"isinv;\": \"\\u2208\",\n\t\"it;\": \"\\u2062\",\n\t\"Itilde;\": \"\\u0128\",\n\t\"itilde;\": \"\\u0129\",\n\t\"Iukcy;\": \"\\u0406\",\n\t\"iukcy;\": \"\\u0456\",\n\t\"Iuml;\": \"\\u00CF\",\n\t\"Iuml\": \"\\u00CF\",\n\t\"iuml;\": \"\\u00EF\",\n\t\"iuml\": \"\\u00EF\",\n\t\"Jcirc;\": \"\\u0134\",\n\t\"jcirc;\": \"\\u0135\",\n\t\"Jcy;\": \"\\u0419\",\n\t\"jcy;\": \"\\u0439\",\n\t\"Jfr;\": \"\\uD835\\uDD0D\",\n\t\"jfr;\": \"\\uD835\\uDD27\",\n\t\"jmath;\": \"\\u0237\",\n\t\"Jopf;\": \"\\uD835\\uDD41\",\n\t\"jopf;\": \"\\uD835\\uDD5B\",\n\t\"Jscr;\": \"\\uD835\\uDCA5\",\n\t\"jscr;\": \"\\uD835\\uDCBF\",\n\t\"Jsercy;\": \"\\u0408\",\n\t\"jsercy;\": \"\\u0458\",\n\t\"Jukcy;\": \"\\u0404\",\n\t\"jukcy;\": \"\\u0454\",\n\t\"Kappa;\": \"\\u039A\",\n\t\"kappa;\": \"\\u03BA\",\n\t\"kappav;\": \"\\u03F0\",\n\t\"Kcedil;\": \"\\u0136\",\n\t\"kcedil;\": \"\\u0137\",\n\t\"Kcy;\": \"\\u041A\",\n\t\"kcy;\": \"\\u043A\",\n\t\"Kfr;\": \"\\uD835\\uDD0E\",\n\t\"kfr;\": \"\\uD835\\uDD28\",\n\t\"kgreen;\": \"\\u0138\",\n\t\"KHcy;\": \"\\u0425\",\n\t\"khcy;\": \"\\u0445\",\n\t\"KJcy;\": \"\\u040C\",\n\t\"kjcy;\": \"\\u045C\",\n\t\"Kopf;\": \"\\uD835\\uDD42\",\n\t\"kopf;\": \"\\uD835\\uDD5C\",\n\t\"Kscr;\": \"\\uD835\\uDCA6\",\n\t\"kscr;\": \"\\uD835\\uDCC0\",\n\t\"lAarr;\": \"\\u21DA\",\n\t\"Lacute;\": \"\\u0139\",\n\t\"lacute;\": \"\\u013A\",\n\t\"laemptyv;\": \"\\u29B4\",\n\t\"lagran;\": \"\\u2112\",\n\t\"Lambda;\": \"\\u039B\",\n\t\"lambda;\": \"\\u03BB\",\n\t\"lang;\": \"\\u27E8\",\n\t\"Lang;\": \"\\u27EA\",\n\t\"langd;\": \"\\u2991\",\n\t\"langle;\": \"\\u27E8\",\n\t\"lap;\": \"\\u2A85\",\n\t\"Laplacetrf;\": \"\\u2112\",\n\t\"laquo;\": \"\\u00AB\",\n\t\"laquo\": \"\\u00AB\",\n\t\"larrb;\": \"\\u21E4\",\n\t\"larrbfs;\": \"\\u291F\",\n\t\"larr;\": \"\\u2190\",\n\t\"Larr;\": \"\\u219E\",\n\t\"lArr;\": \"\\u21D0\",\n\t\"larrfs;\": \"\\u291D\",\n\t\"larrhk;\": \"\\u21A9\",\n\t\"larrlp;\": \"\\u21AB\",\n\t\"larrpl;\": \"\\u2939\",\n\t\"larrsim;\": \"\\u2973\",\n\t\"larrtl;\": \"\\u21A2\",\n\t\"latail;\": \"\\u2919\",\n\t\"lAtail;\": \"\\u291B\",\n\t\"lat;\": \"\\u2AAB\",\n\t\"late;\": \"\\u2AAD\",\n\t\"lates;\": \"\\u2AAD\\uFE00\",\n\t\"lbarr;\": \"\\u290C\",\n\t\"lBarr;\": \"\\u290E\",\n\t\"lbbrk;\": \"\\u2772\",\n\t\"lbrace;\": \"\\u007B\",\n\t\"lbrack;\": \"\\u005B\",\n\t\"lbrke;\": \"\\u298B\",\n\t\"lbrksld;\": \"\\u298F\",\n\t\"lbrkslu;\": \"\\u298D\",\n\t\"Lcaron;\": \"\\u013D\",\n\t\"lcaron;\": \"\\u013E\",\n\t\"Lcedil;\": \"\\u013B\",\n\t\"lcedil;\": \"\\u013C\",\n\t\"lceil;\": \"\\u2308\",\n\t\"lcub;\": \"\\u007B\",\n\t\"Lcy;\": \"\\u041B\",\n\t\"lcy;\": \"\\u043B\",\n\t\"ldca;\": \"\\u2936\",\n\t\"ldquo;\": \"\\u201C\",\n\t\"ldquor;\": \"\\u201E\",\n\t\"ldrdhar;\": \"\\u2967\",\n\t\"ldrushar;\": \"\\u294B\",\n\t\"ldsh;\": \"\\u21B2\",\n\t\"le;\": \"\\u2264\",\n\t\"lE;\": \"\\u2266\",\n\t\"LeftAngleBracket;\": \"\\u27E8\",\n\t\"LeftArrowBar;\": \"\\u21E4\",\n\t\"leftarrow;\": \"\\u2190\",\n\t\"LeftArrow;\": \"\\u2190\",\n\t\"Leftarrow;\": \"\\u21D0\",\n\t\"LeftArrowRightArrow;\": \"\\u21C6\",\n\t\"leftarrowtail;\": \"\\u21A2\",\n\t\"LeftCeiling;\": \"\\u2308\",\n\t\"LeftDoubleBracket;\": \"\\u27E6\",\n\t\"LeftDownTeeVector;\": \"\\u2961\",\n\t\"LeftDownVectorBar;\": \"\\u2959\",\n\t\"LeftDownVector;\": \"\\u21C3\",\n\t\"LeftFloor;\": \"\\u230A\",\n\t\"leftharpoondown;\": \"\\u21BD\",\n\t\"leftharpoonup;\": \"\\u21BC\",\n\t\"leftleftarrows;\": \"\\u21C7\",\n\t\"leftrightarrow;\": \"\\u2194\",\n\t\"LeftRightArrow;\": \"\\u2194\",\n\t\"Leftrightarrow;\": \"\\u21D4\",\n\t\"leftrightarrows;\": \"\\u21C6\",\n\t\"leftrightharpoons;\": \"\\u21CB\",\n\t\"leftrightsquigarrow;\": \"\\u21AD\",\n\t\"LeftRightVector;\": \"\\u294E\",\n\t\"LeftTeeArrow;\": \"\\u21A4\",\n\t\"LeftTee;\": \"\\u22A3\",\n\t\"LeftTeeVector;\": \"\\u295A\",\n\t\"leftthreetimes;\": \"\\u22CB\",\n\t\"LeftTriangleBar;\": \"\\u29CF\",\n\t\"LeftTriangle;\": \"\\u22B2\",\n\t\"LeftTriangleEqual;\": \"\\u22B4\",\n\t\"LeftUpDownVector;\": \"\\u2951\",\n\t\"LeftUpTeeVector;\": \"\\u2960\",\n\t\"LeftUpVectorBar;\": \"\\u2958\",\n\t\"LeftUpVector;\": \"\\u21BF\",\n\t\"LeftVectorBar;\": \"\\u2952\",\n\t\"LeftVector;\": \"\\u21BC\",\n\t\"lEg;\": \"\\u2A8B\",\n\t\"leg;\": \"\\u22DA\",\n\t\"leq;\": \"\\u2264\",\n\t\"leqq;\": \"\\u2266\",\n\t\"leqslant;\": \"\\u2A7D\",\n\t\"lescc;\": \"\\u2AA8\",\n\t\"les;\": \"\\u2A7D\",\n\t\"lesdot;\": \"\\u2A7F\",\n\t\"lesdoto;\": \"\\u2A81\",\n\t\"lesdotor;\": \"\\u2A83\",\n\t\"lesg;\": \"\\u22DA\\uFE00\",\n\t\"lesges;\": \"\\u2A93\",\n\t\"lessapprox;\": \"\\u2A85\",\n\t\"lessdot;\": \"\\u22D6\",\n\t\"lesseqgtr;\": \"\\u22DA\",\n\t\"lesseqqgtr;\": \"\\u2A8B\",\n\t\"LessEqualGreater;\": \"\\u22DA\",\n\t\"LessFullEqual;\": \"\\u2266\",\n\t\"LessGreater;\": \"\\u2276\",\n\t\"lessgtr;\": \"\\u2276\",\n\t\"LessLess;\": \"\\u2AA1\",\n\t\"lesssim;\": \"\\u2272\",\n\t\"LessSlantEqual;\": \"\\u2A7D\",\n\t\"LessTilde;\": \"\\u2272\",\n\t\"lfisht;\": \"\\u297C\",\n\t\"lfloor;\": \"\\u230A\",\n\t\"Lfr;\": \"\\uD835\\uDD0F\",\n\t\"lfr;\": \"\\uD835\\uDD29\",\n\t\"lg;\": \"\\u2276\",\n\t\"lgE;\": \"\\u2A91\",\n\t\"lHar;\": \"\\u2962\",\n\t\"lhard;\": \"\\u21BD\",\n\t\"lharu;\": \"\\u21BC\",\n\t\"lharul;\": \"\\u296A\",\n\t\"lhblk;\": \"\\u2584\",\n\t\"LJcy;\": \"\\u0409\",\n\t\"ljcy;\": \"\\u0459\",\n\t\"llarr;\": \"\\u21C7\",\n\t\"ll;\": \"\\u226A\",\n\t\"Ll;\": \"\\u22D8\",\n\t\"llcorner;\": \"\\u231E\",\n\t\"Lleftarrow;\": \"\\u21DA\",\n\t\"llhard;\": \"\\u296B\",\n\t\"lltri;\": \"\\u25FA\",\n\t\"Lmidot;\": \"\\u013F\",\n\t\"lmidot;\": \"\\u0140\",\n\t\"lmoustache;\": \"\\u23B0\",\n\t\"lmoust;\": \"\\u23B0\",\n\t\"lnap;\": \"\\u2A89\",\n\t\"lnapprox;\": \"\\u2A89\",\n\t\"lne;\": \"\\u2A87\",\n\t\"lnE;\": \"\\u2268\",\n\t\"lneq;\": \"\\u2A87\",\n\t\"lneqq;\": \"\\u2268\",\n\t\"lnsim;\": \"\\u22E6\",\n\t\"loang;\": \"\\u27EC\",\n\t\"loarr;\": \"\\u21FD\",\n\t\"lobrk;\": \"\\u27E6\",\n\t\"longleftarrow;\": \"\\u27F5\",\n\t\"LongLeftArrow;\": \"\\u27F5\",\n\t\"Longleftarrow;\": \"\\u27F8\",\n\t\"longleftrightarrow;\": \"\\u27F7\",\n\t\"LongLeftRightArrow;\": \"\\u27F7\",\n\t\"Longleftrightarrow;\": \"\\u27FA\",\n\t\"longmapsto;\": \"\\u27FC\",\n\t\"longrightarrow;\": \"\\u27F6\",\n\t\"LongRightArrow;\": \"\\u27F6\",\n\t\"Longrightarrow;\": \"\\u27F9\",\n\t\"looparrowleft;\": \"\\u21AB\",\n\t\"looparrowright;\": \"\\u21AC\",\n\t\"lopar;\": \"\\u2985\",\n\t\"Lopf;\": \"\\uD835\\uDD43\",\n\t\"lopf;\": \"\\uD835\\uDD5D\",\n\t\"loplus;\": \"\\u2A2D\",\n\t\"lotimes;\": \"\\u2A34\",\n\t\"lowast;\": \"\\u2217\",\n\t\"lowbar;\": \"\\u005F\",\n\t\"LowerLeftArrow;\": \"\\u2199\",\n\t\"LowerRightArrow;\": \"\\u2198\",\n\t\"loz;\": \"\\u25CA\",\n\t\"lozenge;\": \"\\u25CA\",\n\t\"lozf;\": \"\\u29EB\",\n\t\"lpar;\": \"\\u0028\",\n\t\"lparlt;\": \"\\u2993\",\n\t\"lrarr;\": \"\\u21C6\",\n\t\"lrcorner;\": \"\\u231F\",\n\t\"lrhar;\": \"\\u21CB\",\n\t\"lrhard;\": \"\\u296D\",\n\t\"lrm;\": \"\\u200E\",\n\t\"lrtri;\": \"\\u22BF\",\n\t\"lsaquo;\": \"\\u2039\",\n\t\"lscr;\": \"\\uD835\\uDCC1\",\n\t\"Lscr;\": \"\\u2112\",\n\t\"lsh;\": \"\\u21B0\",\n\t\"Lsh;\": \"\\u21B0\",\n\t\"lsim;\": \"\\u2272\",\n\t\"lsime;\": \"\\u2A8D\",\n\t\"lsimg;\": \"\\u2A8F\",\n\t\"lsqb;\": \"\\u005B\",\n\t\"lsquo;\": \"\\u2018\",\n\t\"lsquor;\": \"\\u201A\",\n\t\"Lstrok;\": \"\\u0141\",\n\t\"lstrok;\": \"\\u0142\",\n\t\"ltcc;\": \"\\u2AA6\",\n\t\"ltcir;\": \"\\u2A79\",\n\t\"lt;\": \"\\u003C\",\n\t\"lt\": \"\\u003C\",\n\t\"LT;\": \"\\u003C\",\n\t\"LT\": \"\\u003C\",\n\t\"Lt;\": \"\\u226A\",\n\t\"ltdot;\": \"\\u22D6\",\n\t\"lthree;\": \"\\u22CB\",\n\t\"ltimes;\": \"\\u22C9\",\n\t\"ltlarr;\": \"\\u2976\",\n\t\"ltquest;\": \"\\u2A7B\",\n\t\"ltri;\": \"\\u25C3\",\n\t\"ltrie;\": \"\\u22B4\",\n\t\"ltrif;\": \"\\u25C2\",\n\t\"ltrPar;\": \"\\u2996\",\n\t\"lurdshar;\": \"\\u294A\",\n\t\"luruhar;\": \"\\u2966\",\n\t\"lvertneqq;\": \"\\u2268\\uFE00\",\n\t\"lvnE;\": \"\\u2268\\uFE00\",\n\t\"macr;\": \"\\u00AF\",\n\t\"macr\": \"\\u00AF\",\n\t\"male;\": \"\\u2642\",\n\t\"malt;\": \"\\u2720\",\n\t\"maltese;\": \"\\u2720\",\n\t\"Map;\": \"\\u2905\",\n\t\"map;\": \"\\u21A6\",\n\t\"mapsto;\": \"\\u21A6\",\n\t\"mapstodown;\": \"\\u21A7\",\n\t\"mapstoleft;\": \"\\u21A4\",\n\t\"mapstoup;\": \"\\u21A5\",\n\t\"marker;\": \"\\u25AE\",\n\t\"mcomma;\": \"\\u2A29\",\n\t\"Mcy;\": \"\\u041C\",\n\t\"mcy;\": \"\\u043C\",\n\t\"mdash;\": \"\\u2014\",\n\t\"mDDot;\": \"\\u223A\",\n\t\"measuredangle;\": \"\\u2221\",\n\t\"MediumSpace;\": \"\\u205F\",\n\t\"Mellintrf;\": \"\\u2133\",\n\t\"Mfr;\": \"\\uD835\\uDD10\",\n\t\"mfr;\": \"\\uD835\\uDD2A\",\n\t\"mho;\": \"\\u2127\",\n\t\"micro;\": \"\\u00B5\",\n\t\"micro\": \"\\u00B5\",\n\t\"midast;\": \"\\u002A\",\n\t\"midcir;\": \"\\u2AF0\",\n\t\"mid;\": \"\\u2223\",\n\t\"middot;\": \"\\u00B7\",\n\t\"middot\": \"\\u00B7\",\n\t\"minusb;\": \"\\u229F\",\n\t\"minus;\": \"\\u2212\",\n\t\"minusd;\": \"\\u2238\",\n\t\"minusdu;\": \"\\u2A2A\",\n\t\"MinusPlus;\": \"\\u2213\",\n\t\"mlcp;\": \"\\u2ADB\",\n\t\"mldr;\": \"\\u2026\",\n\t\"mnplus;\": \"\\u2213\",\n\t\"models;\": \"\\u22A7\",\n\t\"Mopf;\": \"\\uD835\\uDD44\",\n\t\"mopf;\": \"\\uD835\\uDD5E\",\n\t\"mp;\": \"\\u2213\",\n\t\"mscr;\": \"\\uD835\\uDCC2\",\n\t\"Mscr;\": \"\\u2133\",\n\t\"mstpos;\": \"\\u223E\",\n\t\"Mu;\": \"\\u039C\",\n\t\"mu;\": \"\\u03BC\",\n\t\"multimap;\": \"\\u22B8\",\n\t\"mumap;\": \"\\u22B8\",\n\t\"nabla;\": \"\\u2207\",\n\t\"Nacute;\": \"\\u0143\",\n\t\"nacute;\": \"\\u0144\",\n\t\"nang;\": \"\\u2220\\u20D2\",\n\t\"nap;\": \"\\u2249\",\n\t\"napE;\": \"\\u2A70\\u0338\",\n\t\"napid;\": \"\\u224B\\u0338\",\n\t\"napos;\": \"\\u0149\",\n\t\"napprox;\": \"\\u2249\",\n\t\"natural;\": \"\\u266E\",\n\t\"naturals;\": \"\\u2115\",\n\t\"natur;\": \"\\u266E\",\n\t\"nbsp;\": \"\\u00A0\",\n\t\"nbsp\": \"\\u00A0\",\n\t\"nbump;\": \"\\u224E\\u0338\",\n\t\"nbumpe;\": \"\\u224F\\u0338\",\n\t\"ncap;\": \"\\u2A43\",\n\t\"Ncaron;\": \"\\u0147\",\n\t\"ncaron;\": \"\\u0148\",\n\t\"Ncedil;\": \"\\u0145\",\n\t\"ncedil;\": \"\\u0146\",\n\t\"ncong;\": \"\\u2247\",\n\t\"ncongdot;\": \"\\u2A6D\\u0338\",\n\t\"ncup;\": \"\\u2A42\",\n\t\"Ncy;\": \"\\u041D\",\n\t\"ncy;\": \"\\u043D\",\n\t\"ndash;\": \"\\u2013\",\n\t\"nearhk;\": \"\\u2924\",\n\t\"nearr;\": \"\\u2197\",\n\t\"neArr;\": \"\\u21D7\",\n\t\"nearrow;\": \"\\u2197\",\n\t\"ne;\": \"\\u2260\",\n\t\"nedot;\": \"\\u2250\\u0338\",\n\t\"NegativeMediumSpace;\": \"\\u200B\",\n\t\"NegativeThickSpace;\": \"\\u200B\",\n\t\"NegativeThinSpace;\": \"\\u200B\",\n\t\"NegativeVeryThinSpace;\": \"\\u200B\",\n\t\"nequiv;\": \"\\u2262\",\n\t\"nesear;\": \"\\u2928\",\n\t\"nesim;\": \"\\u2242\\u0338\",\n\t\"NestedGreaterGreater;\": \"\\u226B\",\n\t\"NestedLessLess;\": \"\\u226A\",\n\t\"NewLine;\": \"\\u000A\",\n\t\"nexist;\": \"\\u2204\",\n\t\"nexists;\": \"\\u2204\",\n\t\"Nfr;\": \"\\uD835\\uDD11\",\n\t\"nfr;\": \"\\uD835\\uDD2B\",\n\t\"ngE;\": \"\\u2267\\u0338\",\n\t\"nge;\": \"\\u2271\",\n\t\"ngeq;\": \"\\u2271\",\n\t\"ngeqq;\": \"\\u2267\\u0338\",\n\t\"ngeqslant;\": \"\\u2A7E\\u0338\",\n\t\"nges;\": \"\\u2A7E\\u0338\",\n\t\"nGg;\": \"\\u22D9\\u0338\",\n\t\"ngsim;\": \"\\u2275\",\n\t\"nGt;\": \"\\u226B\\u20D2\",\n\t\"ngt;\": \"\\u226F\",\n\t\"ngtr;\": \"\\u226F\",\n\t\"nGtv;\": \"\\u226B\\u0338\",\n\t\"nharr;\": \"\\u21AE\",\n\t\"nhArr;\": \"\\u21CE\",\n\t\"nhpar;\": \"\\u2AF2\",\n\t\"ni;\": \"\\u220B\",\n\t\"nis;\": \"\\u22FC\",\n\t\"nisd;\": \"\\u22FA\",\n\t\"niv;\": \"\\u220B\",\n\t\"NJcy;\": \"\\u040A\",\n\t\"njcy;\": \"\\u045A\",\n\t\"nlarr;\": \"\\u219A\",\n\t\"nlArr;\": \"\\u21CD\",\n\t\"nldr;\": \"\\u2025\",\n\t\"nlE;\": \"\\u2266\\u0338\",\n\t\"nle;\": \"\\u2270\",\n\t\"nleftarrow;\": \"\\u219A\",\n\t\"nLeftarrow;\": \"\\u21CD\",\n\t\"nleftrightarrow;\": \"\\u21AE\",\n\t\"nLeftrightarrow;\": \"\\u21CE\",\n\t\"nleq;\": \"\\u2270\",\n\t\"nleqq;\": \"\\u2266\\u0338\",\n\t\"nleqslant;\": \"\\u2A7D\\u0338\",\n\t\"nles;\": \"\\u2A7D\\u0338\",\n\t\"nless;\": \"\\u226E\",\n\t\"nLl;\": \"\\u22D8\\u0338\",\n\t\"nlsim;\": \"\\u2274\",\n\t\"nLt;\": \"\\u226A\\u20D2\",\n\t\"nlt;\": \"\\u226E\",\n\t\"nltri;\": \"\\u22EA\",\n\t\"nltrie;\": \"\\u22EC\",\n\t\"nLtv;\": \"\\u226A\\u0338\",\n\t\"nmid;\": \"\\u2224\",\n\t\"NoBreak;\": \"\\u2060\",\n\t\"NonBreakingSpace;\": \"\\u00A0\",\n\t\"nopf;\": \"\\uD835\\uDD5F\",\n\t\"Nopf;\": \"\\u2115\",\n\t\"Not;\": \"\\u2AEC\",\n\t\"not;\": \"\\u00AC\",\n\t\"not\": \"\\u00AC\",\n\t\"NotCongruent;\": \"\\u2262\",\n\t\"NotCupCap;\": \"\\u226D\",\n\t\"NotDoubleVerticalBar;\": \"\\u2226\",\n\t\"NotElement;\": \"\\u2209\",\n\t\"NotEqual;\": \"\\u2260\",\n\t\"NotEqualTilde;\": \"\\u2242\\u0338\",\n\t\"NotExists;\": \"\\u2204\",\n\t\"NotGreater;\": \"\\u226F\",\n\t\"NotGreaterEqual;\": \"\\u2271\",\n\t\"NotGreaterFullEqual;\": \"\\u2267\\u0338\",\n\t\"NotGreaterGreater;\": \"\\u226B\\u0338\",\n\t\"NotGreaterLess;\": \"\\u2279\",\n\t\"NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\",\n\t\"NotGreaterTilde;\": \"\\u2275\",\n\t\"NotHumpDownHump;\": \"\\u224E\\u0338\",\n\t\"NotHumpEqual;\": \"\\u224F\\u0338\",\n\t\"notin;\": \"\\u2209\",\n\t\"notindot;\": \"\\u22F5\\u0338\",\n\t\"notinE;\": \"\\u22F9\\u0338\",\n\t\"notinva;\": \"\\u2209\",\n\t\"notinvb;\": \"\\u22F7\",\n\t\"notinvc;\": \"\\u22F6\",\n\t\"NotLeftTriangleBar;\": \"\\u29CF\\u0338\",\n\t\"NotLeftTriangle;\": \"\\u22EA\",\n\t\"NotLeftTriangleEqual;\": \"\\u22EC\",\n\t\"NotLess;\": \"\\u226E\",\n\t\"NotLessEqual;\": \"\\u2270\",\n\t\"NotLessGreater;\": \"\\u2278\",\n\t\"NotLessLess;\": \"\\u226A\\u0338\",\n\t\"NotLessSlantEqual;\": \"\\u2A7D\\u0338\",\n\t\"NotLessTilde;\": \"\\u2274\",\n\t\"NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\",\n\t\"NotNestedLessLess;\": \"\\u2AA1\\u0338\",\n\t\"notni;\": \"\\u220C\",\n\t\"notniva;\": \"\\u220C\",\n\t\"notnivb;\": \"\\u22FE\",\n\t\"notnivc;\": \"\\u22FD\",\n\t\"NotPrecedes;\": \"\\u2280\",\n\t\"NotPrecedesEqual;\": \"\\u2AAF\\u0338\",\n\t\"NotPrecedesSlantEqual;\": \"\\u22E0\",\n\t\"NotReverseElement;\": \"\\u220C\",\n\t\"NotRightTriangleBar;\": \"\\u29D0\\u0338\",\n\t\"NotRightTriangle;\": \"\\u22EB\",\n\t\"NotRightTriangleEqual;\": \"\\u22ED\",\n\t\"NotSquareSubset;\": \"\\u228F\\u0338\",\n\t\"NotSquareSubsetEqual;\": \"\\u22E2\",\n\t\"NotSquareSuperset;\": \"\\u2290\\u0338\",\n\t\"NotSquareSupersetEqual;\": \"\\u22E3\",\n\t\"NotSubset;\": \"\\u2282\\u20D2\",\n\t\"NotSubsetEqual;\": \"\\u2288\",\n\t\"NotSucceeds;\": \"\\u2281\",\n\t\"NotSucceedsEqual;\": \"\\u2AB0\\u0338\",\n\t\"NotSucceedsSlantEqual;\": \"\\u22E1\",\n\t\"NotSucceedsTilde;\": \"\\u227F\\u0338\",\n\t\"NotSuperset;\": \"\\u2283\\u20D2\",\n\t\"NotSupersetEqual;\": \"\\u2289\",\n\t\"NotTilde;\": \"\\u2241\",\n\t\"NotTildeEqual;\": \"\\u2244\",\n\t\"NotTildeFullEqual;\": \"\\u2247\",\n\t\"NotTildeTilde;\": \"\\u2249\",\n\t\"NotVerticalBar;\": \"\\u2224\",\n\t\"nparallel;\": \"\\u2226\",\n\t\"npar;\": \"\\u2226\",\n\t\"nparsl;\": \"\\u2AFD\\u20E5\",\n\t\"npart;\": \"\\u2202\\u0338\",\n\t\"npolint;\": \"\\u2A14\",\n\t\"npr;\": \"\\u2280\",\n\t\"nprcue;\": \"\\u22E0\",\n\t\"nprec;\": \"\\u2280\",\n\t\"npreceq;\": \"\\u2AAF\\u0338\",\n\t\"npre;\": \"\\u2AAF\\u0338\",\n\t\"nrarrc;\": \"\\u2933\\u0338\",\n\t\"nrarr;\": \"\\u219B\",\n\t\"nrArr;\": \"\\u21CF\",\n\t\"nrarrw;\": \"\\u219D\\u0338\",\n\t\"nrightarrow;\": \"\\u219B\",\n\t\"nRightarrow;\": \"\\u21CF\",\n\t\"nrtri;\": \"\\u22EB\",\n\t\"nrtrie;\": \"\\u22ED\",\n\t\"nsc;\": \"\\u2281\",\n\t\"nsccue;\": \"\\u22E1\",\n\t\"nsce;\": \"\\u2AB0\\u0338\",\n\t\"Nscr;\": \"\\uD835\\uDCA9\",\n\t\"nscr;\": \"\\uD835\\uDCC3\",\n\t\"nshortmid;\": \"\\u2224\",\n\t\"nshortparallel;\": \"\\u2226\",\n\t\"nsim;\": \"\\u2241\",\n\t\"nsime;\": \"\\u2244\",\n\t\"nsimeq;\": \"\\u2244\",\n\t\"nsmid;\": \"\\u2224\",\n\t\"nspar;\": \"\\u2226\",\n\t\"nsqsube;\": \"\\u22E2\",\n\t\"nsqsupe;\": \"\\u22E3\",\n\t\"nsub;\": \"\\u2284\",\n\t\"nsubE;\": \"\\u2AC5\\u0338\",\n\t\"nsube;\": \"\\u2288\",\n\t\"nsubset;\": \"\\u2282\\u20D2\",\n\t\"nsubseteq;\": \"\\u2288\",\n\t\"nsubseteqq;\": \"\\u2AC5\\u0338\",\n\t\"nsucc;\": \"\\u2281\",\n\t\"nsucceq;\": \"\\u2AB0\\u0338\",\n\t\"nsup;\": \"\\u2285\",\n\t\"nsupE;\": \"\\u2AC6\\u0338\",\n\t\"nsupe;\": \"\\u2289\",\n\t\"nsupset;\": \"\\u2283\\u20D2\",\n\t\"nsupseteq;\": \"\\u2289\",\n\t\"nsupseteqq;\": \"\\u2AC6\\u0338\",\n\t\"ntgl;\": \"\\u2279\",\n\t\"Ntilde;\": \"\\u00D1\",\n\t\"Ntilde\": \"\\u00D1\",\n\t\"ntilde;\": \"\\u00F1\",\n\t\"ntilde\": \"\\u00F1\",\n\t\"ntlg;\": \"\\u2278\",\n\t\"ntriangleleft;\": \"\\u22EA\",\n\t\"ntrianglelefteq;\": \"\\u22EC\",\n\t\"ntriangleright;\": \"\\u22EB\",\n\t\"ntrianglerighteq;\": \"\\u22ED\",\n\t\"Nu;\": \"\\u039D\",\n\t\"nu;\": \"\\u03BD\",\n\t\"num;\": \"\\u0023\",\n\t\"numero;\": \"\\u2116\",\n\t\"numsp;\": \"\\u2007\",\n\t\"nvap;\": \"\\u224D\\u20D2\",\n\t\"nvdash;\": \"\\u22AC\",\n\t\"nvDash;\": \"\\u22AD\",\n\t\"nVdash;\": \"\\u22AE\",\n\t\"nVDash;\": \"\\u22AF\",\n\t\"nvge;\": \"\\u2265\\u20D2\",\n\t\"nvgt;\": \"\\u003E\\u20D2\",\n\t\"nvHarr;\": \"\\u2904\",\n\t\"nvinfin;\": \"\\u29DE\",\n\t\"nvlArr;\": \"\\u2902\",\n\t\"nvle;\": \"\\u2264\\u20D2\",\n\t\"nvlt;\": \"\\u003C\\u20D2\",\n\t\"nvltrie;\": \"\\u22B4\\u20D2\",\n\t\"nvrArr;\": \"\\u2903\",\n\t\"nvrtrie;\": \"\\u22B5\\u20D2\",\n\t\"nvsim;\": \"\\u223C\\u20D2\",\n\t\"nwarhk;\": \"\\u2923\",\n\t\"nwarr;\": \"\\u2196\",\n\t\"nwArr;\": \"\\u21D6\",\n\t\"nwarrow;\": \"\\u2196\",\n\t\"nwnear;\": \"\\u2927\",\n\t\"Oacute;\": \"\\u00D3\",\n\t\"Oacute\": \"\\u00D3\",\n\t\"oacute;\": \"\\u00F3\",\n\t\"oacute\": \"\\u00F3\",\n\t\"oast;\": \"\\u229B\",\n\t\"Ocirc;\": \"\\u00D4\",\n\t\"Ocirc\": \"\\u00D4\",\n\t\"ocirc;\": \"\\u00F4\",\n\t\"ocirc\": \"\\u00F4\",\n\t\"ocir;\": \"\\u229A\",\n\t\"Ocy;\": \"\\u041E\",\n\t\"ocy;\": \"\\u043E\",\n\t\"odash;\": \"\\u229D\",\n\t\"Odblac;\": \"\\u0150\",\n\t\"odblac;\": \"\\u0151\",\n\t\"odiv;\": \"\\u2A38\",\n\t\"odot;\": \"\\u2299\",\n\t\"odsold;\": \"\\u29BC\",\n\t\"OElig;\": \"\\u0152\",\n\t\"oelig;\": \"\\u0153\",\n\t\"ofcir;\": \"\\u29BF\",\n\t\"Ofr;\": \"\\uD835\\uDD12\",\n\t\"ofr;\": \"\\uD835\\uDD2C\",\n\t\"ogon;\": \"\\u02DB\",\n\t\"Ograve;\": \"\\u00D2\",\n\t\"Ograve\": \"\\u00D2\",\n\t\"ograve;\": \"\\u00F2\",\n\t\"ograve\": \"\\u00F2\",\n\t\"ogt;\": \"\\u29C1\",\n\t\"ohbar;\": \"\\u29B5\",\n\t\"ohm;\": \"\\u03A9\",\n\t\"oint;\": \"\\u222E\",\n\t\"olarr;\": \"\\u21BA\",\n\t\"olcir;\": \"\\u29BE\",\n\t\"olcross;\": \"\\u29BB\",\n\t\"oline;\": \"\\u203E\",\n\t\"olt;\": \"\\u29C0\",\n\t\"Omacr;\": \"\\u014C\",\n\t\"omacr;\": \"\\u014D\",\n\t\"Omega;\": \"\\u03A9\",\n\t\"omega;\": \"\\u03C9\",\n\t\"Omicron;\": \"\\u039F\",\n\t\"omicron;\": \"\\u03BF\",\n\t\"omid;\": \"\\u29B6\",\n\t\"ominus;\": \"\\u2296\",\n\t\"Oopf;\": \"\\uD835\\uDD46\",\n\t\"oopf;\": \"\\uD835\\uDD60\",\n\t\"opar;\": \"\\u29B7\",\n\t\"OpenCurlyDoubleQuote;\": \"\\u201C\",\n\t\"OpenCurlyQuote;\": \"\\u2018\",\n\t\"operp;\": \"\\u29B9\",\n\t\"oplus;\": \"\\u2295\",\n\t\"orarr;\": \"\\u21BB\",\n\t\"Or;\": \"\\u2A54\",\n\t\"or;\": \"\\u2228\",\n\t\"ord;\": \"\\u2A5D\",\n\t\"order;\": \"\\u2134\",\n\t\"orderof;\": \"\\u2134\",\n\t\"ordf;\": \"\\u00AA\",\n\t\"ordf\": \"\\u00AA\",\n\t\"ordm;\": \"\\u00BA\",\n\t\"ordm\": \"\\u00BA\",\n\t\"origof;\": \"\\u22B6\",\n\t\"oror;\": \"\\u2A56\",\n\t\"orslope;\": \"\\u2A57\",\n\t\"orv;\": \"\\u2A5B\",\n\t\"oS;\": \"\\u24C8\",\n\t\"Oscr;\": \"\\uD835\\uDCAA\",\n\t\"oscr;\": \"\\u2134\",\n\t\"Oslash;\": \"\\u00D8\",\n\t\"Oslash\": \"\\u00D8\",\n\t\"oslash;\": \"\\u00F8\",\n\t\"oslash\": \"\\u00F8\",\n\t\"osol;\": \"\\u2298\",\n\t\"Otilde;\": \"\\u00D5\",\n\t\"Otilde\": \"\\u00D5\",\n\t\"otilde;\": \"\\u00F5\",\n\t\"otilde\": \"\\u00F5\",\n\t\"otimesas;\": \"\\u2A36\",\n\t\"Otimes;\": \"\\u2A37\",\n\t\"otimes;\": \"\\u2297\",\n\t\"Ouml;\": \"\\u00D6\",\n\t\"Ouml\": \"\\u00D6\",\n\t\"ouml;\": \"\\u00F6\",\n\t\"ouml\": \"\\u00F6\",\n\t\"ovbar;\": \"\\u233D\",\n\t\"OverBar;\": \"\\u203E\",\n\t\"OverBrace;\": \"\\u23DE\",\n\t\"OverBracket;\": \"\\u23B4\",\n\t\"OverParenthesis;\": \"\\u23DC\",\n\t\"para;\": \"\\u00B6\",\n\t\"para\": \"\\u00B6\",\n\t\"parallel;\": \"\\u2225\",\n\t\"par;\": \"\\u2225\",\n\t\"parsim;\": \"\\u2AF3\",\n\t\"parsl;\": \"\\u2AFD\",\n\t\"part;\": \"\\u2202\",\n\t\"PartialD;\": \"\\u2202\",\n\t\"Pcy;\": \"\\u041F\",\n\t\"pcy;\": \"\\u043F\",\n\t\"percnt;\": \"\\u0025\",\n\t\"period;\": \"\\u002E\",\n\t\"permil;\": \"\\u2030\",\n\t\"perp;\": \"\\u22A5\",\n\t\"pertenk;\": \"\\u2031\",\n\t\"Pfr;\": \"\\uD835\\uDD13\",\n\t\"pfr;\": \"\\uD835\\uDD2D\",\n\t\"Phi;\": \"\\u03A6\",\n\t\"phi;\": \"\\u03C6\",\n\t\"phiv;\": \"\\u03D5\",\n\t\"phmmat;\": \"\\u2133\",\n\t\"phone;\": \"\\u260E\",\n\t\"Pi;\": \"\\u03A0\",\n\t\"pi;\": \"\\u03C0\",\n\t\"pitchfork;\": \"\\u22D4\",\n\t\"piv;\": \"\\u03D6\",\n\t\"planck;\": \"\\u210F\",\n\t\"planckh;\": \"\\u210E\",\n\t\"plankv;\": \"\\u210F\",\n\t\"plusacir;\": \"\\u2A23\",\n\t\"plusb;\": \"\\u229E\",\n\t\"pluscir;\": \"\\u2A22\",\n\t\"plus;\": \"\\u002B\",\n\t\"plusdo;\": \"\\u2214\",\n\t\"plusdu;\": \"\\u2A25\",\n\t\"pluse;\": \"\\u2A72\",\n\t\"PlusMinus;\": \"\\u00B1\",\n\t\"plusmn;\": \"\\u00B1\",\n\t\"plusmn\": \"\\u00B1\",\n\t\"plussim;\": \"\\u2A26\",\n\t\"plustwo;\": \"\\u2A27\",\n\t\"pm;\": \"\\u00B1\",\n\t\"Poincareplane;\": \"\\u210C\",\n\t\"pointint;\": \"\\u2A15\",\n\t\"popf;\": \"\\uD835\\uDD61\",\n\t\"Popf;\": \"\\u2119\",\n\t\"pound;\": \"\\u00A3\",\n\t\"pound\": \"\\u00A3\",\n\t\"prap;\": \"\\u2AB7\",\n\t\"Pr;\": \"\\u2ABB\",\n\t\"pr;\": \"\\u227A\",\n\t\"prcue;\": \"\\u227C\",\n\t\"precapprox;\": \"\\u2AB7\",\n\t\"prec;\": \"\\u227A\",\n\t\"preccurlyeq;\": \"\\u227C\",\n\t\"Precedes;\": \"\\u227A\",\n\t\"PrecedesEqual;\": \"\\u2AAF\",\n\t\"PrecedesSlantEqual;\": \"\\u227C\",\n\t\"PrecedesTilde;\": \"\\u227E\",\n\t\"preceq;\": \"\\u2AAF\",\n\t\"precnapprox;\": \"\\u2AB9\",\n\t\"precneqq;\": \"\\u2AB5\",\n\t\"precnsim;\": \"\\u22E8\",\n\t\"pre;\": \"\\u2AAF\",\n\t\"prE;\": \"\\u2AB3\",\n\t\"precsim;\": \"\\u227E\",\n\t\"prime;\": \"\\u2032\",\n\t\"Prime;\": \"\\u2033\",\n\t\"primes;\": \"\\u2119\",\n\t\"prnap;\": \"\\u2AB9\",\n\t\"prnE;\": \"\\u2AB5\",\n\t\"prnsim;\": \"\\u22E8\",\n\t\"prod;\": \"\\u220F\",\n\t\"Product;\": \"\\u220F\",\n\t\"profalar;\": \"\\u232E\",\n\t\"profline;\": \"\\u2312\",\n\t\"profsurf;\": \"\\u2313\",\n\t\"prop;\": \"\\u221D\",\n\t\"Proportional;\": \"\\u221D\",\n\t\"Proportion;\": \"\\u2237\",\n\t\"propto;\": \"\\u221D\",\n\t\"prsim;\": \"\\u227E\",\n\t\"prurel;\": \"\\u22B0\",\n\t\"Pscr;\": \"\\uD835\\uDCAB\",\n\t\"pscr;\": \"\\uD835\\uDCC5\",\n\t\"Psi;\": \"\\u03A8\",\n\t\"psi;\": \"\\u03C8\",\n\t\"puncsp;\": \"\\u2008\",\n\t\"Qfr;\": \"\\uD835\\uDD14\",\n\t\"qfr;\": \"\\uD835\\uDD2E\",\n\t\"qint;\": \"\\u2A0C\",\n\t\"qopf;\": \"\\uD835\\uDD62\",\n\t\"Qopf;\": \"\\u211A\",\n\t\"qprime;\": \"\\u2057\",\n\t\"Qscr;\": \"\\uD835\\uDCAC\",\n\t\"qscr;\": \"\\uD835\\uDCC6\",\n\t\"quaternions;\": \"\\u210D\",\n\t\"quatint;\": \"\\u2A16\",\n\t\"quest;\": \"\\u003F\",\n\t\"questeq;\": \"\\u225F\",\n\t\"quot;\": \"\\u0022\",\n\t\"quot\": \"\\u0022\",\n\t\"QUOT;\": \"\\u0022\",\n\t\"QUOT\": \"\\u0022\",\n\t\"rAarr;\": \"\\u21DB\",\n\t\"race;\": \"\\u223D\\u0331\",\n\t\"Racute;\": \"\\u0154\",\n\t\"racute;\": \"\\u0155\",\n\t\"radic;\": \"\\u221A\",\n\t\"raemptyv;\": \"\\u29B3\",\n\t\"rang;\": \"\\u27E9\",\n\t\"Rang;\": \"\\u27EB\",\n\t\"rangd;\": \"\\u2992\",\n\t\"range;\": \"\\u29A5\",\n\t\"rangle;\": \"\\u27E9\",\n\t\"raquo;\": \"\\u00BB\",\n\t\"raquo\": \"\\u00BB\",\n\t\"rarrap;\": \"\\u2975\",\n\t\"rarrb;\": \"\\u21E5\",\n\t\"rarrbfs;\": \"\\u2920\",\n\t\"rarrc;\": \"\\u2933\",\n\t\"rarr;\": \"\\u2192\",\n\t\"Rarr;\": \"\\u21A0\",\n\t\"rArr;\": \"\\u21D2\",\n\t\"rarrfs;\": \"\\u291E\",\n\t\"rarrhk;\": \"\\u21AA\",\n\t\"rarrlp;\": \"\\u21AC\",\n\t\"rarrpl;\": \"\\u2945\",\n\t\"rarrsim;\": \"\\u2974\",\n\t\"Rarrtl;\": \"\\u2916\",\n\t\"rarrtl;\": \"\\u21A3\",\n\t\"rarrw;\": \"\\u219D\",\n\t\"ratail;\": \"\\u291A\",\n\t\"rAtail;\": \"\\u291C\",\n\t\"ratio;\": \"\\u2236\",\n\t\"rationals;\": \"\\u211A\",\n\t\"rbarr;\": \"\\u290D\",\n\t\"rBarr;\": \"\\u290F\",\n\t\"RBarr;\": \"\\u2910\",\n\t\"rbbrk;\": \"\\u2773\",\n\t\"rbrace;\": \"\\u007D\",\n\t\"rbrack;\": \"\\u005D\",\n\t\"rbrke;\": \"\\u298C\",\n\t\"rbrksld;\": \"\\u298E\",\n\t\"rbrkslu;\": \"\\u2990\",\n\t\"Rcaron;\": \"\\u0158\",\n\t\"rcaron;\": \"\\u0159\",\n\t\"Rcedil;\": \"\\u0156\",\n\t\"rcedil;\": \"\\u0157\",\n\t\"rceil;\": \"\\u2309\",\n\t\"rcub;\": \"\\u007D\",\n\t\"Rcy;\": \"\\u0420\",\n\t\"rcy;\": \"\\u0440\",\n\t\"rdca;\": \"\\u2937\",\n\t\"rdldhar;\": \"\\u2969\",\n\t\"rdquo;\": \"\\u201D\",\n\t\"rdquor;\": \"\\u201D\",\n\t\"rdsh;\": \"\\u21B3\",\n\t\"real;\": \"\\u211C\",\n\t\"realine;\": \"\\u211B\",\n\t\"realpart;\": \"\\u211C\",\n\t\"reals;\": \"\\u211D\",\n\t\"Re;\": \"\\u211C\",\n\t\"rect;\": \"\\u25AD\",\n\t\"reg;\": \"\\u00AE\",\n\t\"reg\": \"\\u00AE\",\n\t\"REG;\": \"\\u00AE\",\n\t\"REG\": \"\\u00AE\",\n\t\"ReverseElement;\": \"\\u220B\",\n\t\"ReverseEquilibrium;\": \"\\u21CB\",\n\t\"ReverseUpEquilibrium;\": \"\\u296F\",\n\t\"rfisht;\": \"\\u297D\",\n\t\"rfloor;\": \"\\u230B\",\n\t\"rfr;\": \"\\uD835\\uDD2F\",\n\t\"Rfr;\": \"\\u211C\",\n\t\"rHar;\": \"\\u2964\",\n\t\"rhard;\": \"\\u21C1\",\n\t\"rharu;\": \"\\u21C0\",\n\t\"rharul;\": \"\\u296C\",\n\t\"Rho;\": \"\\u03A1\",\n\t\"rho;\": \"\\u03C1\",\n\t\"rhov;\": \"\\u03F1\",\n\t\"RightAngleBracket;\": \"\\u27E9\",\n\t\"RightArrowBar;\": \"\\u21E5\",\n\t\"rightarrow;\": \"\\u2192\",\n\t\"RightArrow;\": \"\\u2192\",\n\t\"Rightarrow;\": \"\\u21D2\",\n\t\"RightArrowLeftArrow;\": \"\\u21C4\",\n\t\"rightarrowtail;\": \"\\u21A3\",\n\t\"RightCeiling;\": \"\\u2309\",\n\t\"RightDoubleBracket;\": \"\\u27E7\",\n\t\"RightDownTeeVector;\": \"\\u295D\",\n\t\"RightDownVectorBar;\": \"\\u2955\",\n\t\"RightDownVector;\": \"\\u21C2\",\n\t\"RightFloor;\": \"\\u230B\",\n\t\"rightharpoondown;\": \"\\u21C1\",\n\t\"rightharpoonup;\": \"\\u21C0\",\n\t\"rightleftarrows;\": \"\\u21C4\",\n\t\"rightleftharpoons;\": \"\\u21CC\",\n\t\"rightrightarrows;\": \"\\u21C9\",\n\t\"rightsquigarrow;\": \"\\u219D\",\n\t\"RightTeeArrow;\": \"\\u21A6\",\n\t\"RightTee;\": \"\\u22A2\",\n\t\"RightTeeVector;\": \"\\u295B\",\n\t\"rightthreetimes;\": \"\\u22CC\",\n\t\"RightTriangleBar;\": \"\\u29D0\",\n\t\"RightTriangle;\": \"\\u22B3\",\n\t\"RightTriangleEqual;\": \"\\u22B5\",\n\t\"RightUpDownVector;\": \"\\u294F\",\n\t\"RightUpTeeVector;\": \"\\u295C\",\n\t\"RightUpVectorBar;\": \"\\u2954\",\n\t\"RightUpVector;\": \"\\u21BE\",\n\t\"RightVectorBar;\": \"\\u2953\",\n\t\"RightVector;\": \"\\u21C0\",\n\t\"ring;\": \"\\u02DA\",\n\t\"risingdotseq;\": \"\\u2253\",\n\t\"rlarr;\": \"\\u21C4\",\n\t\"rlhar;\": \"\\u21CC\",\n\t\"rlm;\": \"\\u200F\",\n\t\"rmoustache;\": \"\\u23B1\",\n\t\"rmoust;\": \"\\u23B1\",\n\t\"rnmid;\": \"\\u2AEE\",\n\t\"roang;\": \"\\u27ED\",\n\t\"roarr;\": \"\\u21FE\",\n\t\"robrk;\": \"\\u27E7\",\n\t\"ropar;\": \"\\u2986\",\n\t\"ropf;\": \"\\uD835\\uDD63\",\n\t\"Ropf;\": \"\\u211D\",\n\t\"roplus;\": \"\\u2A2E\",\n\t\"rotimes;\": \"\\u2A35\",\n\t\"RoundImplies;\": \"\\u2970\",\n\t\"rpar;\": \"\\u0029\",\n\t\"rpargt;\": \"\\u2994\",\n\t\"rppolint;\": \"\\u2A12\",\n\t\"rrarr;\": \"\\u21C9\",\n\t\"Rrightarrow;\": \"\\u21DB\",\n\t\"rsaquo;\": \"\\u203A\",\n\t\"rscr;\": \"\\uD835\\uDCC7\",\n\t\"Rscr;\": \"\\u211B\",\n\t\"rsh;\": \"\\u21B1\",\n\t\"Rsh;\": \"\\u21B1\",\n\t\"rsqb;\": \"\\u005D\",\n\t\"rsquo;\": \"\\u2019\",\n\t\"rsquor;\": \"\\u2019\",\n\t\"rthree;\": \"\\u22CC\",\n\t\"rtimes;\": \"\\u22CA\",\n\t\"rtri;\": \"\\u25B9\",\n\t\"rtrie;\": \"\\u22B5\",\n\t\"rtrif;\": \"\\u25B8\",\n\t\"rtriltri;\": \"\\u29CE\",\n\t\"RuleDelayed;\": \"\\u29F4\",\n\t\"ruluhar;\": \"\\u2968\",\n\t\"rx;\": \"\\u211E\",\n\t\"Sacute;\": \"\\u015A\",\n\t\"sacute;\": \"\\u015B\",\n\t\"sbquo;\": \"\\u201A\",\n\t\"scap;\": \"\\u2AB8\",\n\t\"Scaron;\": \"\\u0160\",\n\t\"scaron;\": \"\\u0161\",\n\t\"Sc;\": \"\\u2ABC\",\n\t\"sc;\": \"\\u227B\",\n\t\"sccue;\": \"\\u227D\",\n\t\"sce;\": \"\\u2AB0\",\n\t\"scE;\": \"\\u2AB4\",\n\t\"Scedil;\": \"\\u015E\",\n\t\"scedil;\": \"\\u015F\",\n\t\"Scirc;\": \"\\u015C\",\n\t\"scirc;\": \"\\u015D\",\n\t\"scnap;\": \"\\u2ABA\",\n\t\"scnE;\": \"\\u2AB6\",\n\t\"scnsim;\": \"\\u22E9\",\n\t\"scpolint;\": \"\\u2A13\",\n\t\"scsim;\": \"\\u227F\",\n\t\"Scy;\": \"\\u0421\",\n\t\"scy;\": \"\\u0441\",\n\t\"sdotb;\": \"\\u22A1\",\n\t\"sdot;\": \"\\u22C5\",\n\t\"sdote;\": \"\\u2A66\",\n\t\"searhk;\": \"\\u2925\",\n\t\"searr;\": \"\\u2198\",\n\t\"seArr;\": \"\\u21D8\",\n\t\"searrow;\": \"\\u2198\",\n\t\"sect;\": \"\\u00A7\",\n\t\"sect\": \"\\u00A7\",\n\t\"semi;\": \"\\u003B\",\n\t\"seswar;\": \"\\u2929\",\n\t\"setminus;\": \"\\u2216\",\n\t\"setmn;\": \"\\u2216\",\n\t\"sext;\": \"\\u2736\",\n\t\"Sfr;\": \"\\uD835\\uDD16\",\n\t\"sfr;\": \"\\uD835\\uDD30\",\n\t\"sfrown;\": \"\\u2322\",\n\t\"sharp;\": \"\\u266F\",\n\t\"SHCHcy;\": \"\\u0429\",\n\t\"shchcy;\": \"\\u0449\",\n\t\"SHcy;\": \"\\u0428\",\n\t\"shcy;\": \"\\u0448\",\n\t\"ShortDownArrow;\": \"\\u2193\",\n\t\"ShortLeftArrow;\": \"\\u2190\",\n\t\"shortmid;\": \"\\u2223\",\n\t\"shortparallel;\": \"\\u2225\",\n\t\"ShortRightArrow;\": \"\\u2192\",\n\t\"ShortUpArrow;\": \"\\u2191\",\n\t\"shy;\": \"\\u00AD\",\n\t\"shy\": \"\\u00AD\",\n\t\"Sigma;\": \"\\u03A3\",\n\t\"sigma;\": \"\\u03C3\",\n\t\"sigmaf;\": \"\\u03C2\",\n\t\"sigmav;\": \"\\u03C2\",\n\t\"sim;\": \"\\u223C\",\n\t\"simdot;\": \"\\u2A6A\",\n\t\"sime;\": \"\\u2243\",\n\t\"simeq;\": \"\\u2243\",\n\t\"simg;\": \"\\u2A9E\",\n\t\"simgE;\": \"\\u2AA0\",\n\t\"siml;\": \"\\u2A9D\",\n\t\"simlE;\": \"\\u2A9F\",\n\t\"simne;\": \"\\u2246\",\n\t\"simplus;\": \"\\u2A24\",\n\t\"simrarr;\": \"\\u2972\",\n\t\"slarr;\": \"\\u2190\",\n\t\"SmallCircle;\": \"\\u2218\",\n\t\"smallsetminus;\": \"\\u2216\",\n\t\"smashp;\": \"\\u2A33\",\n\t\"smeparsl;\": \"\\u29E4\",\n\t\"smid;\": \"\\u2223\",\n\t\"smile;\": \"\\u2323\",\n\t\"smt;\": \"\\u2AAA\",\n\t\"smte;\": \"\\u2AAC\",\n\t\"smtes;\": \"\\u2AAC\\uFE00\",\n\t\"SOFTcy;\": \"\\u042C\",\n\t\"softcy;\": \"\\u044C\",\n\t\"solbar;\": \"\\u233F\",\n\t\"solb;\": \"\\u29C4\",\n\t\"sol;\": \"\\u002F\",\n\t\"Sopf;\": \"\\uD835\\uDD4A\",\n\t\"sopf;\": \"\\uD835\\uDD64\",\n\t\"spades;\": \"\\u2660\",\n\t\"spadesuit;\": \"\\u2660\",\n\t\"spar;\": \"\\u2225\",\n\t\"sqcap;\": \"\\u2293\",\n\t\"sqcaps;\": \"\\u2293\\uFE00\",\n\t\"sqcup;\": \"\\u2294\",\n\t\"sqcups;\": \"\\u2294\\uFE00\",\n\t\"Sqrt;\": \"\\u221A\",\n\t\"sqsub;\": \"\\u228F\",\n\t\"sqsube;\": \"\\u2291\",\n\t\"sqsubset;\": \"\\u228F\",\n\t\"sqsubseteq;\": \"\\u2291\",\n\t\"sqsup;\": \"\\u2290\",\n\t\"sqsupe;\": \"\\u2292\",\n\t\"sqsupset;\": \"\\u2290\",\n\t\"sqsupseteq;\": \"\\u2292\",\n\t\"square;\": \"\\u25A1\",\n\t\"Square;\": \"\\u25A1\",\n\t\"SquareIntersection;\": \"\\u2293\",\n\t\"SquareSubset;\": \"\\u228F\",\n\t\"SquareSubsetEqual;\": \"\\u2291\",\n\t\"SquareSuperset;\": \"\\u2290\",\n\t\"SquareSupersetEqual;\": \"\\u2292\",\n\t\"SquareUnion;\": \"\\u2294\",\n\t\"squarf;\": \"\\u25AA\",\n\t\"squ;\": \"\\u25A1\",\n\t\"squf;\": \"\\u25AA\",\n\t\"srarr;\": \"\\u2192\",\n\t\"Sscr;\": \"\\uD835\\uDCAE\",\n\t\"sscr;\": \"\\uD835\\uDCC8\",\n\t\"ssetmn;\": \"\\u2216\",\n\t\"ssmile;\": \"\\u2323\",\n\t\"sstarf;\": \"\\u22C6\",\n\t\"Star;\": \"\\u22C6\",\n\t\"star;\": \"\\u2606\",\n\t\"starf;\": \"\\u2605\",\n\t\"straightepsilon;\": \"\\u03F5\",\n\t\"straightphi;\": \"\\u03D5\",\n\t\"strns;\": \"\\u00AF\",\n\t\"sub;\": \"\\u2282\",\n\t\"Sub;\": \"\\u22D0\",\n\t\"subdot;\": \"\\u2ABD\",\n\t\"subE;\": \"\\u2AC5\",\n\t\"sube;\": \"\\u2286\",\n\t\"subedot;\": \"\\u2AC3\",\n\t\"submult;\": \"\\u2AC1\",\n\t\"subnE;\": \"\\u2ACB\",\n\t\"subne;\": \"\\u228A\",\n\t\"subplus;\": \"\\u2ABF\",\n\t\"subrarr;\": \"\\u2979\",\n\t\"subset;\": \"\\u2282\",\n\t\"Subset;\": \"\\u22D0\",\n\t\"subseteq;\": \"\\u2286\",\n\t\"subseteqq;\": \"\\u2AC5\",\n\t\"SubsetEqual;\": \"\\u2286\",\n\t\"subsetneq;\": \"\\u228A\",\n\t\"subsetneqq;\": \"\\u2ACB\",\n\t\"subsim;\": \"\\u2AC7\",\n\t\"subsub;\": \"\\u2AD5\",\n\t\"subsup;\": \"\\u2AD3\",\n\t\"succapprox;\": \"\\u2AB8\",\n\t\"succ;\": \"\\u227B\",\n\t\"succcurlyeq;\": \"\\u227D\",\n\t\"Succeeds;\": \"\\u227B\",\n\t\"SucceedsEqual;\": \"\\u2AB0\",\n\t\"SucceedsSlantEqual;\": \"\\u227D\",\n\t\"SucceedsTilde;\": \"\\u227F\",\n\t\"succeq;\": \"\\u2AB0\",\n\t\"succnapprox;\": \"\\u2ABA\",\n\t\"succneqq;\": \"\\u2AB6\",\n\t\"succnsim;\": \"\\u22E9\",\n\t\"succsim;\": \"\\u227F\",\n\t\"SuchThat;\": \"\\u220B\",\n\t\"sum;\": \"\\u2211\",\n\t\"Sum;\": \"\\u2211\",\n\t\"sung;\": \"\\u266A\",\n\t\"sup1;\": \"\\u00B9\",\n\t\"sup1\": \"\\u00B9\",\n\t\"sup2;\": \"\\u00B2\",\n\t\"sup2\": \"\\u00B2\",\n\t\"sup3;\": \"\\u00B3\",\n\t\"sup3\": \"\\u00B3\",\n\t\"sup;\": \"\\u2283\",\n\t\"Sup;\": \"\\u22D1\",\n\t\"supdot;\": \"\\u2ABE\",\n\t\"supdsub;\": \"\\u2AD8\",\n\t\"supE;\": \"\\u2AC6\",\n\t\"supe;\": \"\\u2287\",\n\t\"supedot;\": \"\\u2AC4\",\n\t\"Superset;\": \"\\u2283\",\n\t\"SupersetEqual;\": \"\\u2287\",\n\t\"suphsol;\": \"\\u27C9\",\n\t\"suphsub;\": \"\\u2AD7\",\n\t\"suplarr;\": \"\\u297B\",\n\t\"supmult;\": \"\\u2AC2\",\n\t\"supnE;\": \"\\u2ACC\",\n\t\"supne;\": \"\\u228B\",\n\t\"supplus;\": \"\\u2AC0\",\n\t\"supset;\": \"\\u2283\",\n\t\"Supset;\": \"\\u22D1\",\n\t\"supseteq;\": \"\\u2287\",\n\t\"supseteqq;\": \"\\u2AC6\",\n\t\"supsetneq;\": \"\\u228B\",\n\t\"supsetneqq;\": \"\\u2ACC\",\n\t\"supsim;\": \"\\u2AC8\",\n\t\"supsub;\": \"\\u2AD4\",\n\t\"supsup;\": \"\\u2AD6\",\n\t\"swarhk;\": \"\\u2926\",\n\t\"swarr;\": \"\\u2199\",\n\t\"swArr;\": \"\\u21D9\",\n\t\"swarrow;\": \"\\u2199\",\n\t\"swnwar;\": \"\\u292A\",\n\t\"szlig;\": \"\\u00DF\",\n\t\"szlig\": \"\\u00DF\",\n\t\"Tab;\": \"\\u0009\",\n\t\"target;\": \"\\u2316\",\n\t\"Tau;\": \"\\u03A4\",\n\t\"tau;\": \"\\u03C4\",\n\t\"tbrk;\": \"\\u23B4\",\n\t\"Tcaron;\": \"\\u0164\",\n\t\"tcaron;\": \"\\u0165\",\n\t\"Tcedil;\": \"\\u0162\",\n\t\"tcedil;\": \"\\u0163\",\n\t\"Tcy;\": \"\\u0422\",\n\t\"tcy;\": \"\\u0442\",\n\t\"tdot;\": \"\\u20DB\",\n\t\"telrec;\": \"\\u2315\",\n\t\"Tfr;\": \"\\uD835\\uDD17\",\n\t\"tfr;\": \"\\uD835\\uDD31\",\n\t\"there4;\": \"\\u2234\",\n\t\"therefore;\": \"\\u2234\",\n\t\"Therefore;\": \"\\u2234\",\n\t\"Theta;\": \"\\u0398\",\n\t\"theta;\": \"\\u03B8\",\n\t\"thetasym;\": \"\\u03D1\",\n\t\"thetav;\": \"\\u03D1\",\n\t\"thickapprox;\": \"\\u2248\",\n\t\"thicksim;\": \"\\u223C\",\n\t\"ThickSpace;\": \"\\u205F\\u200A\",\n\t\"ThinSpace;\": \"\\u2009\",\n\t\"thinsp;\": \"\\u2009\",\n\t\"thkap;\": \"\\u2248\",\n\t\"thksim;\": \"\\u223C\",\n\t\"THORN;\": \"\\u00DE\",\n\t\"THORN\": \"\\u00DE\",\n\t\"thorn;\": \"\\u00FE\",\n\t\"thorn\": \"\\u00FE\",\n\t\"tilde;\": \"\\u02DC\",\n\t\"Tilde;\": \"\\u223C\",\n\t\"TildeEqual;\": \"\\u2243\",\n\t\"TildeFullEqual;\": \"\\u2245\",\n\t\"TildeTilde;\": \"\\u2248\",\n\t\"timesbar;\": \"\\u2A31\",\n\t\"timesb;\": \"\\u22A0\",\n\t\"times;\": \"\\u00D7\",\n\t\"times\": \"\\u00D7\",\n\t\"timesd;\": \"\\u2A30\",\n\t\"tint;\": \"\\u222D\",\n\t\"toea;\": \"\\u2928\",\n\t\"topbot;\": \"\\u2336\",\n\t\"topcir;\": \"\\u2AF1\",\n\t\"top;\": \"\\u22A4\",\n\t\"Topf;\": \"\\uD835\\uDD4B\",\n\t\"topf;\": \"\\uD835\\uDD65\",\n\t\"topfork;\": \"\\u2ADA\",\n\t\"tosa;\": \"\\u2929\",\n\t\"tprime;\": \"\\u2034\",\n\t\"trade;\": \"\\u2122\",\n\t\"TRADE;\": \"\\u2122\",\n\t\"triangle;\": \"\\u25B5\",\n\t\"triangledown;\": \"\\u25BF\",\n\t\"triangleleft;\": \"\\u25C3\",\n\t\"trianglelefteq;\": \"\\u22B4\",\n\t\"triangleq;\": \"\\u225C\",\n\t\"triangleright;\": \"\\u25B9\",\n\t\"trianglerighteq;\": \"\\u22B5\",\n\t\"tridot;\": \"\\u25EC\",\n\t\"trie;\": \"\\u225C\",\n\t\"triminus;\": \"\\u2A3A\",\n\t\"TripleDot;\": \"\\u20DB\",\n\t\"triplus;\": \"\\u2A39\",\n\t\"trisb;\": \"\\u29CD\",\n\t\"tritime;\": \"\\u2A3B\",\n\t\"trpezium;\": \"\\u23E2\",\n\t\"Tscr;\": \"\\uD835\\uDCAF\",\n\t\"tscr;\": \"\\uD835\\uDCC9\",\n\t\"TScy;\": \"\\u0426\",\n\t\"tscy;\": \"\\u0446\",\n\t\"TSHcy;\": \"\\u040B\",\n\t\"tshcy;\": \"\\u045B\",\n\t\"Tstrok;\": \"\\u0166\",\n\t\"tstrok;\": \"\\u0167\",\n\t\"twixt;\": \"\\u226C\",\n\t\"twoheadleftarrow;\": \"\\u219E\",\n\t\"twoheadrightarrow;\": \"\\u21A0\",\n\t\"Uacute;\": \"\\u00DA\",\n\t\"Uacute\": \"\\u00DA\",\n\t\"uacute;\": \"\\u00FA\",\n\t\"uacute\": \"\\u00FA\",\n\t\"uarr;\": \"\\u2191\",\n\t\"Uarr;\": \"\\u219F\",\n\t\"uArr;\": \"\\u21D1\",\n\t\"Uarrocir;\": \"\\u2949\",\n\t\"Ubrcy;\": \"\\u040E\",\n\t\"ubrcy;\": \"\\u045E\",\n\t\"Ubreve;\": \"\\u016C\",\n\t\"ubreve;\": \"\\u016D\",\n\t\"Ucirc;\": \"\\u00DB\",\n\t\"Ucirc\": \"\\u00DB\",\n\t\"ucirc;\": \"\\u00FB\",\n\t\"ucirc\": \"\\u00FB\",\n\t\"Ucy;\": \"\\u0423\",\n\t\"ucy;\": \"\\u0443\",\n\t\"udarr;\": \"\\u21C5\",\n\t\"Udblac;\": \"\\u0170\",\n\t\"udblac;\": \"\\u0171\",\n\t\"udhar;\": \"\\u296E\",\n\t\"ufisht;\": \"\\u297E\",\n\t\"Ufr;\": \"\\uD835\\uDD18\",\n\t\"ufr;\": \"\\uD835\\uDD32\",\n\t\"Ugrave;\": \"\\u00D9\",\n\t\"Ugrave\": \"\\u00D9\",\n\t\"ugrave;\": \"\\u00F9\",\n\t\"ugrave\": \"\\u00F9\",\n\t\"uHar;\": \"\\u2963\",\n\t\"uharl;\": \"\\u21BF\",\n\t\"uharr;\": \"\\u21BE\",\n\t\"uhblk;\": \"\\u2580\",\n\t\"ulcorn;\": \"\\u231C\",\n\t\"ulcorner;\": \"\\u231C\",\n\t\"ulcrop;\": \"\\u230F\",\n\t\"ultri;\": \"\\u25F8\",\n\t\"Umacr;\": \"\\u016A\",\n\t\"umacr;\": \"\\u016B\",\n\t\"uml;\": \"\\u00A8\",\n\t\"uml\": \"\\u00A8\",\n\t\"UnderBar;\": \"\\u005F\",\n\t\"UnderBrace;\": \"\\u23DF\",\n\t\"UnderBracket;\": \"\\u23B5\",\n\t\"UnderParenthesis;\": \"\\u23DD\",\n\t\"Union;\": \"\\u22C3\",\n\t\"UnionPlus;\": \"\\u228E\",\n\t\"Uogon;\": \"\\u0172\",\n\t\"uogon;\": \"\\u0173\",\n\t\"Uopf;\": \"\\uD835\\uDD4C\",\n\t\"uopf;\": \"\\uD835\\uDD66\",\n\t\"UpArrowBar;\": \"\\u2912\",\n\t\"uparrow;\": \"\\u2191\",\n\t\"UpArrow;\": \"\\u2191\",\n\t\"Uparrow;\": \"\\u21D1\",\n\t\"UpArrowDownArrow;\": \"\\u21C5\",\n\t\"updownarrow;\": \"\\u2195\",\n\t\"UpDownArrow;\": \"\\u2195\",\n\t\"Updownarrow;\": \"\\u21D5\",\n\t\"UpEquilibrium;\": \"\\u296E\",\n\t\"upharpoonleft;\": \"\\u21BF\",\n\t\"upharpoonright;\": \"\\u21BE\",\n\t\"uplus;\": \"\\u228E\",\n\t\"UpperLeftArrow;\": \"\\u2196\",\n\t\"UpperRightArrow;\": \"\\u2197\",\n\t\"upsi;\": \"\\u03C5\",\n\t\"Upsi;\": \"\\u03D2\",\n\t\"upsih;\": \"\\u03D2\",\n\t\"Upsilon;\": \"\\u03A5\",\n\t\"upsilon;\": \"\\u03C5\",\n\t\"UpTeeArrow;\": \"\\u21A5\",\n\t\"UpTee;\": \"\\u22A5\",\n\t\"upuparrows;\": \"\\u21C8\",\n\t\"urcorn;\": \"\\u231D\",\n\t\"urcorner;\": \"\\u231D\",\n\t\"urcrop;\": \"\\u230E\",\n\t\"Uring;\": \"\\u016E\",\n\t\"uring;\": \"\\u016F\",\n\t\"urtri;\": \"\\u25F9\",\n\t\"Uscr;\": \"\\uD835\\uDCB0\",\n\t\"uscr;\": \"\\uD835\\uDCCA\",\n\t\"utdot;\": \"\\u22F0\",\n\t\"Utilde;\": \"\\u0168\",\n\t\"utilde;\": \"\\u0169\",\n\t\"utri;\": \"\\u25B5\",\n\t\"utrif;\": \"\\u25B4\",\n\t\"uuarr;\": \"\\u21C8\",\n\t\"Uuml;\": \"\\u00DC\",\n\t\"Uuml\": \"\\u00DC\",\n\t\"uuml;\": \"\\u00FC\",\n\t\"uuml\": \"\\u00FC\",\n\t\"uwangle;\": \"\\u29A7\",\n\t\"vangrt;\": \"\\u299C\",\n\t\"varepsilon;\": \"\\u03F5\",\n\t\"varkappa;\": \"\\u03F0\",\n\t\"varnothing;\": \"\\u2205\",\n\t\"varphi;\": \"\\u03D5\",\n\t\"varpi;\": \"\\u03D6\",\n\t\"varpropto;\": \"\\u221D\",\n\t\"varr;\": \"\\u2195\",\n\t\"vArr;\": \"\\u21D5\",\n\t\"varrho;\": \"\\u03F1\",\n\t\"varsigma;\": \"\\u03C2\",\n\t\"varsubsetneq;\": \"\\u228A\\uFE00\",\n\t\"varsubsetneqq;\": \"\\u2ACB\\uFE00\",\n\t\"varsupsetneq;\": \"\\u228B\\uFE00\",\n\t\"varsupsetneqq;\": \"\\u2ACC\\uFE00\",\n\t\"vartheta;\": \"\\u03D1\",\n\t\"vartriangleleft;\": \"\\u22B2\",\n\t\"vartriangleright;\": \"\\u22B3\",\n\t\"vBar;\": \"\\u2AE8\",\n\t\"Vbar;\": \"\\u2AEB\",\n\t\"vBarv;\": \"\\u2AE9\",\n\t\"Vcy;\": \"\\u0412\",\n\t\"vcy;\": \"\\u0432\",\n\t\"vdash;\": \"\\u22A2\",\n\t\"vDash;\": \"\\u22A8\",\n\t\"Vdash;\": \"\\u22A9\",\n\t\"VDash;\": \"\\u22AB\",\n\t\"Vdashl;\": \"\\u2AE6\",\n\t\"veebar;\": \"\\u22BB\",\n\t\"vee;\": \"\\u2228\",\n\t\"Vee;\": \"\\u22C1\",\n\t\"veeeq;\": \"\\u225A\",\n\t\"vellip;\": \"\\u22EE\",\n\t\"verbar;\": \"\\u007C\",\n\t\"Verbar;\": \"\\u2016\",\n\t\"vert;\": \"\\u007C\",\n\t\"Vert;\": \"\\u2016\",\n\t\"VerticalBar;\": \"\\u2223\",\n\t\"VerticalLine;\": \"\\u007C\",\n\t\"VerticalSeparator;\": \"\\u2758\",\n\t\"VerticalTilde;\": \"\\u2240\",\n\t\"VeryThinSpace;\": \"\\u200A\",\n\t\"Vfr;\": \"\\uD835\\uDD19\",\n\t\"vfr;\": \"\\uD835\\uDD33\",\n\t\"vltri;\": \"\\u22B2\",\n\t\"vnsub;\": \"\\u2282\\u20D2\",\n\t\"vnsup;\": \"\\u2283\\u20D2\",\n\t\"Vopf;\": \"\\uD835\\uDD4D\",\n\t\"vopf;\": \"\\uD835\\uDD67\",\n\t\"vprop;\": \"\\u221D\",\n\t\"vrtri;\": \"\\u22B3\",\n\t\"Vscr;\": \"\\uD835\\uDCB1\",\n\t\"vscr;\": \"\\uD835\\uDCCB\",\n\t\"vsubnE;\": \"\\u2ACB\\uFE00\",\n\t\"vsubne;\": \"\\u228A\\uFE00\",\n\t\"vsupnE;\": \"\\u2ACC\\uFE00\",\n\t\"vsupne;\": \"\\u228B\\uFE00\",\n\t\"Vvdash;\": \"\\u22AA\",\n\t\"vzigzag;\": \"\\u299A\",\n\t\"Wcirc;\": \"\\u0174\",\n\t\"wcirc;\": \"\\u0175\",\n\t\"wedbar;\": \"\\u2A5F\",\n\t\"wedge;\": \"\\u2227\",\n\t\"Wedge;\": \"\\u22C0\",\n\t\"wedgeq;\": \"\\u2259\",\n\t\"weierp;\": \"\\u2118\",\n\t\"Wfr;\": \"\\uD835\\uDD1A\",\n\t\"wfr;\": \"\\uD835\\uDD34\",\n\t\"Wopf;\": \"\\uD835\\uDD4E\",\n\t\"wopf;\": \"\\uD835\\uDD68\",\n\t\"wp;\": \"\\u2118\",\n\t\"wr;\": \"\\u2240\",\n\t\"wreath;\": \"\\u2240\",\n\t\"Wscr;\": \"\\uD835\\uDCB2\",\n\t\"wscr;\": \"\\uD835\\uDCCC\",\n\t\"xcap;\": \"\\u22C2\",\n\t\"xcirc;\": \"\\u25EF\",\n\t\"xcup;\": \"\\u22C3\",\n\t\"xdtri;\": \"\\u25BD\",\n\t\"Xfr;\": \"\\uD835\\uDD1B\",\n\t\"xfr;\": \"\\uD835\\uDD35\",\n\t\"xharr;\": \"\\u27F7\",\n\t\"xhArr;\": \"\\u27FA\",\n\t\"Xi;\": \"\\u039E\",\n\t\"xi;\": \"\\u03BE\",\n\t\"xlarr;\": \"\\u27F5\",\n\t\"xlArr;\": \"\\u27F8\",\n\t\"xmap;\": \"\\u27FC\",\n\t\"xnis;\": \"\\u22FB\",\n\t\"xodot;\": \"\\u2A00\",\n\t\"Xopf;\": \"\\uD835\\uDD4F\",\n\t\"xopf;\": \"\\uD835\\uDD69\",\n\t\"xoplus;\": \"\\u2A01\",\n\t\"xotime;\": \"\\u2A02\",\n\t\"xrarr;\": \"\\u27F6\",\n\t\"xrArr;\": \"\\u27F9\",\n\t\"Xscr;\": \"\\uD835\\uDCB3\",\n\t\"xscr;\": \"\\uD835\\uDCCD\",\n\t\"xsqcup;\": \"\\u2A06\",\n\t\"xuplus;\": \"\\u2A04\",\n\t\"xutri;\": \"\\u25B3\",\n\t\"xvee;\": \"\\u22C1\",\n\t\"xwedge;\": \"\\u22C0\",\n\t\"Yacute;\": \"\\u00DD\",\n\t\"Yacute\": \"\\u00DD\",\n\t\"yacute;\": \"\\u00FD\",\n\t\"yacute\": \"\\u00FD\",\n\t\"YAcy;\": \"\\u042F\",\n\t\"yacy;\": \"\\u044F\",\n\t\"Ycirc;\": \"\\u0176\",\n\t\"ycirc;\": \"\\u0177\",\n\t\"Ycy;\": \"\\u042B\",\n\t\"ycy;\": \"\\u044B\",\n\t\"yen;\": \"\\u00A5\",\n\t\"yen\": \"\\u00A5\",\n\t\"Yfr;\": \"\\uD835\\uDD1C\",\n\t\"yfr;\": \"\\uD835\\uDD36\",\n\t\"YIcy;\": \"\\u0407\",\n\t\"yicy;\": \"\\u0457\",\n\t\"Yopf;\": \"\\uD835\\uDD50\",\n\t\"yopf;\": \"\\uD835\\uDD6A\",\n\t\"Yscr;\": \"\\uD835\\uDCB4\",\n\t\"yscr;\": \"\\uD835\\uDCCE\",\n\t\"YUcy;\": \"\\u042E\",\n\t\"yucy;\": \"\\u044E\",\n\t\"yuml;\": \"\\u00FF\",\n\t\"yuml\": \"\\u00FF\",\n\t\"Yuml;\": \"\\u0178\",\n\t\"Zacute;\": \"\\u0179\",\n\t\"zacute;\": \"\\u017A\",\n\t\"Zcaron;\": \"\\u017D\",\n\t\"zcaron;\": \"\\u017E\",\n\t\"Zcy;\": \"\\u0417\",\n\t\"zcy;\": \"\\u0437\",\n\t\"Zdot;\": \"\\u017B\",\n\t\"zdot;\": \"\\u017C\",\n\t\"zeetrf;\": \"\\u2128\",\n\t\"ZeroWidthSpace;\": \"\\u200B\",\n\t\"Zeta;\": \"\\u0396\",\n\t\"zeta;\": \"\\u03B6\",\n\t\"zfr;\": \"\\uD835\\uDD37\",\n\t\"Zfr;\": \"\\u2128\",\n\t\"ZHcy;\": \"\\u0416\",\n\t\"zhcy;\": \"\\u0436\",\n\t\"zigrarr;\": \"\\u21DD\",\n\t\"zopf;\": \"\\uD835\\uDD6B\",\n\t\"Zopf;\": \"\\u2124\",\n\t\"Zscr;\": \"\\uD835\\uDCB5\",\n\t\"zscr;\": \"\\uD835\\uDCCF\",\n\t\"zwj;\": \"\\u200D\",\n\t\"zwnj;\": \"\\u200C\"\n};\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/ElementStack.js":"function isScopeMarker(node) {\r\n\tif (node.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\r\n\t\treturn node.localName === \"applet\"\r\n\t\t\t|| node.localName === \"caption\"\r\n\t\t\t|| node.localName === \"marquee\"\r\n\t\t\t|| node.localName === \"object\"\r\n\t\t\t|| node.localName === \"table\"\r\n\t\t\t|| node.localName === \"td\"\r\n\t\t\t|| node.localName === \"th\";\r\n\t}\r\n\tif (node.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\r\n\t\treturn node.localName === \"mi\"\r\n\t\t\t|| node.localName === \"mo\"\r\n\t\t\t|| node.localName === \"mn\"\r\n\t\t\t|| node.localName === \"ms\"\r\n\t\t\t|| node.localName === \"mtext\"\r\n\t\t\t|| node.localName === \"annotation-xml\";\r\n\t}\r\n\tif (node.namespaceURI === \"http://www.w3.org/2000/svg\") {\r\n\t\treturn node.localName === \"foreignObject\"\r\n\t\t\t|| node.localName === \"desc\"\r\n\t\t\t|| node.localName === \"title\";\r\n\t}\r\n}\r\n\r\nfunction isListItemScopeMarker(node) {\r\n\treturn isScopeMarker(node)\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'ol')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'ul');\r\n}\r\n\r\nfunction isTableScopeMarker(node) {\r\n\treturn (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'table')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html');\r\n}\r\n\r\nfunction isTableBodyScopeMarker(node) {\r\n\treturn (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tbody')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tfoot')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'thead')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html');\r\n}\r\n\r\nfunction isTableRowScopeMarker(node) {\r\n\treturn (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'tr')\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'html');\r\n}\r\n\r\nfunction isButtonScopeMarker(node) {\r\n\treturn isScopeMarker(node)\r\n\t\t|| (node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'button');\r\n}\r\n\r\nfunction isSelectScopeMarker(node) {\r\n\treturn !(node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'optgroup')\r\n\t\t&& !(node.namespaceURI === \"http://www.w3.org/1999/xhtml\" && node.localName === 'option');\r\n}\r\n\r\n/**\r\n * Represents a stack of open elements\r\n * @constructor\r\n */\r\nfunction ElementStack() {\r\n\tthis.elements = [];\r\n\tthis.rootNode = null;\r\n\tthis.headElement = null;\r\n\tthis.bodyElement = null;\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @param {Function} isMarker\r\n * @return {Boolean}\r\n * @private\r\n */\r\nElementStack.prototype._inScope = function(localName, isMarker) {\r\n\tfor (var i = this.elements.length - 1; i >= 0; i--) {\r\n\t\tvar node = this.elements[i];\r\n\t\tif (node.localName === localName)\r\n\t\t\treturn true;\r\n\t\tif (isMarker(node))\r\n\t\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * Pushes the item on the stack top\r\n * @param {StackItem} item\r\n */\r\nElementStack.prototype.push = function(item) {\r\n\tthis.elements.push(item);\r\n};\r\n\r\n/**\r\n * Pushes the item on the stack top\r\n * @param {StackItem} item HTML element stack item\r\n */\r\nElementStack.prototype.pushHtmlElement = function(item) {\r\n\tthis.rootNode = item.node;\r\n\tthis.push(item);\r\n};\r\n\r\n/**\r\n * Pushes the item on the stack top\r\n * @param {StackItem} item HEAD element stack item\r\n */\r\nElementStack.prototype.pushHeadElement = function(item) {\r\n\tthis.headElement = item.node;\r\n\tthis.push(item);\r\n};\r\n\r\n/**\r\n * Pushes the item on the stack top\r\n * @param {StackItem} item BODY element stack item\r\n */\r\nElementStack.prototype.pushBodyElement = function(item) {\r\n\tthis.bodyElement = item.node;\r\n\tthis.push(item);\r\n};\r\n\r\n/**\r\n * Pops the topmost item\r\n * @return {StackItem}\r\n */\r\nElementStack.prototype.pop = function() {\r\n\treturn this.elements.pop();\r\n};\r\n\r\n/**\r\n * Removes the item from the element stack\r\n * @param {StackItem} item The item to remove\r\n */\r\nElementStack.prototype.remove = function(item) {\r\n\tthis.elements.splice(this.elements.indexOf(item), 1);\r\n};\r\n\r\n/**\r\n * Pops until an element with a given localName is popped\r\n * @param {String} localName\r\n */\r\nElementStack.prototype.popUntilPopped = function(localName) {\r\n\tvar element;\r\n\tdo {\r\n\t\telement = this.pop();\r\n\t} while (element.localName != localName);\r\n};\r\n\r\nElementStack.prototype.popUntilTableScopeMarker = function() {\r\n\twhile (!isTableScopeMarker(this.top))\r\n\t\tthis.pop();\r\n};\r\n\r\nElementStack.prototype.popUntilTableBodyScopeMarker = function() {\r\n\twhile (!isTableBodyScopeMarker(this.top))\r\n\t\tthis.pop();\r\n};\r\n\r\nElementStack.prototype.popUntilTableRowScopeMarker = function() {\r\n\twhile (!isTableRowScopeMarker(this.top))\r\n\t\tthis.pop();\r\n};\r\n\r\n/**\r\n *\r\n * @param {Number} index\r\n * @return {StackItem}\r\n */\r\nElementStack.prototype.item = function(index) {\r\n\treturn this.elements[index];\r\n};\r\n\r\n/**\r\n *\r\n * @param {StackItem} element\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.contains = function(element) {\r\n\treturn this.elements.indexOf(element) !== -1;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.inScope = function(localName) {\r\n\treturn this._inScope(localName, isScopeMarker);\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.inListItemScope = function(localName) {\r\n\treturn this._inScope(localName, isListItemScopeMarker);\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.inTableScope = function(localName) {\r\n\treturn this._inScope(localName, isTableScopeMarker);\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.inButtonScope = function(localName) {\r\n\treturn this._inScope(localName, isButtonScopeMarker);\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.inSelectScope = function(localName) {\r\n\treturn this._inScope(localName, isSelectScopeMarker);\r\n};\r\n\r\n/**\r\n *\r\n * @return {Boolean}\r\n */\r\nElementStack.prototype.hasNumberedHeaderElementInScope = function() {\r\n\tfor (var i = this.elements.length - 1; i >= 0; i--) {\r\n\t\tvar node = this.elements[i];\r\n\t\tif (node.isNumberedHeader())\r\n\t\t\treturn true;\r\n\t\tif (isScopeMarker(node))\r\n\t\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} element\r\n * @return {StackItem}\r\n */\r\nElementStack.prototype.furthestBlockForFormattingElement = function(element) {\r\n\tvar furthestBlock = null;\r\n\tfor (var i = this.elements.length - 1; i >= 0; i--) {\r\n\t\tvar node = this.elements[i];\r\n\t\tif (node.node === element)\r\n\t\t\tbreak;\r\n\t\tif (node.isSpecial())\r\n\t\t\tfurthestBlock = node;\r\n\t}\r\n    return furthestBlock;\r\n};\r\n\r\n/**\r\n *\r\n * @param {String} localName\r\n * @return {Number}\r\n */\r\nElementStack.prototype.findIndex = function(localName) {\r\n\tfor (var i = this.elements.length - 1; i >= 0; i--) {\r\n\t\tif (this.elements[i].localName == localName)\r\n\t\t\treturn i;\r\n\t}\r\n    return -1;\r\n};\r\n\r\nElementStack.prototype.remove_openElements_until = function(callback) {\r\n\tvar finished = false;\r\n\tvar element;\r\n\twhile (!finished) {\r\n\t\telement = this.elements.pop();\r\n\t\tfinished = callback(element);\r\n\t}\r\n\treturn element;\r\n};\r\n\r\nObject.defineProperty(ElementStack.prototype, 'top', {\r\n\tget: function() {\r\n\t\treturn this.elements[this.elements.length - 1];\r\n\t}\r\n});\r\n\r\nObject.defineProperty(ElementStack.prototype, 'length', {\r\n\tget: function() {\r\n\t\treturn this.elements.length;\r\n\t}\r\n});\r\n\r\nexports.ElementStack = ElementStack;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/StackItem.js":"var SpecialElements = {\r\n\t\"http://www.w3.org/1999/xhtml\": [\r\n\t\t'address',\r\n\t\t'applet',\r\n\t\t'area',\r\n\t\t'article',\r\n\t\t'aside',\r\n\t\t'base',\r\n\t\t'basefont',\r\n\t\t'bgsound',\r\n\t\t'blockquote',\r\n\t\t'body',\r\n\t\t'br',\r\n\t\t'button',\r\n\t\t'caption',\r\n\t\t'center',\r\n\t\t'col',\r\n\t\t'colgroup',\r\n\t\t'dd',\r\n\t\t'details',\r\n\t\t'dir',\r\n\t\t'div',\r\n\t\t'dl',\r\n\t\t'dt',\r\n\t\t'embed',\r\n\t\t'fieldset',\r\n\t\t'figcaption',\r\n\t\t'figure',\r\n\t\t'footer',\r\n\t\t'form',\r\n\t\t'frame',\r\n\t\t'frameset',\r\n\t\t'h1',\r\n\t\t'h2',\r\n\t\t'h3',\r\n\t\t'h4',\r\n\t\t'h5',\r\n\t\t'h6',\r\n\t\t'head',\r\n\t\t'header',\r\n\t\t'hgroup',\r\n\t\t'hr',\r\n\t\t'html',\r\n\t\t'iframe',\r\n\t\t'img',\r\n\t\t'input',\r\n\t\t'isindex',\r\n\t\t'li',\r\n\t\t'link',\r\n\t\t'listing',\r\n\t\t'main',\r\n\t\t'marquee',\r\n\t\t'menu',\r\n\t\t'menuitem',\r\n\t\t'meta',\r\n\t\t'nav',\r\n\t\t'noembed',\r\n\t\t'noframes',\r\n\t\t'noscript',\r\n\t\t'object',\r\n\t\t'ol',\r\n\t\t'p',\r\n\t\t'param',\r\n\t\t'plaintext',\r\n\t\t'pre',\r\n\t\t'script',\r\n\t\t'section',\r\n\t\t'select',\r\n\t\t'source',\r\n\t\t'style',\r\n\t\t'summary',\r\n\t\t'table',\r\n\t\t'tbody',\r\n\t\t'td',\r\n\t\t'textarea',\r\n\t\t'tfoot',\r\n\t\t'th',\r\n\t\t'thead',\r\n\t\t'title',\r\n\t\t'tr',\r\n\t\t'track',\r\n\t\t'ul',\r\n\t\t'wbr',\r\n\t\t'xmp'\r\n\t],\r\n\t\"http://www.w3.org/1998/Math/MathML\": [\r\n\t\t'mi',\r\n\t\t'mo',\r\n\t\t'mn',\r\n\t\t'ms',\r\n\t\t'mtext',\r\n\t\t'annotation-xml'\r\n\t],\r\n\t\"http://www.w3.org/2000/svg\": [\r\n\t\t'foreignObject',\r\n\t\t'desc',\r\n\t\t'title'\r\n\t]\r\n};\r\n\r\n\r\nfunction StackItem(namespaceURI, localName, attributes, node) {\r\n\tthis.localName = localName;\r\n\tthis.namespaceURI = namespaceURI;\r\n\tthis.attributes = attributes;\r\n\tthis.node = node;\r\n}\r\n\r\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#special\r\nStackItem.prototype.isSpecial = function() {\r\n\treturn this.namespaceURI in SpecialElements &&\r\n\t\tSpecialElements[this.namespaceURI].indexOf(this.localName) > -1;\r\n};\r\n\r\nStackItem.prototype.isFosterParenting = function() {\r\n\tif (this.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\r\n\t\treturn this.localName === 'table' ||\r\n\t\t\tthis.localName === 'tbody' ||\r\n\t\t\tthis.localName === 'tfoot' ||\r\n\t\t\tthis.localName === 'thead' ||\r\n\t\t\tthis.localName === 'tr';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nStackItem.prototype.isNumberedHeader = function() {\r\n\tif (this.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\r\n\t\treturn this.localName === 'h1' ||\r\n\t\t\tthis.localName === 'h2' ||\r\n\t\t\tthis.localName === 'h3' ||\r\n\t\t\tthis.localName === 'h4' ||\r\n\t\t\tthis.localName === 'h5' ||\r\n\t\t\tthis.localName === 'h6';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nStackItem.prototype.isForeign = function() {\r\n\treturn this.namespaceURI != \"http://www.w3.org/1999/xhtml\";\r\n};\r\n\r\nfunction getAttribute(item, name) {\r\n\tfor (var i = 0; i < item.attributes.length; i++) {\r\n\t\tif (item.attributes[i].nodeName == name)\r\n\t\t\treturn item.attributes[i].nodeValue;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nStackItem.prototype.isHtmlIntegrationPoint = function() {\r\n\tif (this.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\r\n\t\tif (this.localName !== \"annotation-xml\")\r\n\t\t\treturn false;\r\n\t\tvar encoding = getAttribute(this, 'encoding');\r\n\t\tif (!encoding)\r\n\t\t\treturn false;\r\n\t\tencoding = encoding.toLowerCase();\r\n\t\treturn encoding === \"text/html\" || encoding === \"application/xhtml+xml\";\r\n\t}\r\n\tif (this.namespaceURI === \"http://www.w3.org/2000/svg\") {\r\n\t\treturn this.localName === \"foreignObject\"\r\n\t\t\t|| this.localName === \"desc\"\r\n\t\t\t|| this.localName === \"title\";\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nStackItem.prototype.isMathMLTextIntegrationPoint = function() {\r\n\tif (this.namespaceURI === \"http://www.w3.org/1998/Math/MathML\") {\r\n\t\treturn this.localName === \"mi\"\r\n\t\t\t|| this.localName === \"mo\"\r\n\t\t\t|| this.localName === \"mn\"\r\n\t\t\t|| this.localName === \"ms\"\r\n\t\t\t|| this.localName === \"mtext\";\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexports.StackItem = StackItem;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/jsdom/JSDOMParser.js":"var JSDOMTreeBuilder = require('./JSDOMTreeBuilder').JSDOMTreeBuilder;\nvar Tokenizer = require('../Tokenizer').Tokenizer;\n\n/**\n * @constructor\n * @param {Document} document\n */\nfunction JSDOMParser(document, core) {\n\tthis._treeBuilder = new JSDOMTreeBuilder(document, core);\n\tthis._tokenizer = new Tokenizer(this._treeBuilder);\n\tthis._scriptingEnabled = true;\n}\n\n/**\n * @param {String} source HTML source to parse\n */\nJSDOMParser.prototype.parse = function(source) {\n\tthis._tokenizer.tokenize(source);\n};\n\nJSDOMParser.prototype.parseFragment = function(source, fragment, contextElement) {\n\tthis._treeBuilder.setFragmentContext(contextElement.nodeName.toLowerCase());\n\tthis._tokenizer.tokenize(source);\n\tthis._treeBuilder.reparentChildren(this._treeBuilder.openElements.rootNode, fragment);\n};\n\nObject.defineProperty(JSDOMParser.prototype, 'scriptingEnabled', {\n\tget: function() {\n\t\treturn this._scriptingEnabled;\n\t},\n\tset: function(value) {\n\t\tthis._scriptingEnabled = value;\n\t\tthis._treeBuilder.scriptingEnabled = value;\n\t}\n});\n\nexports.JSDOMParser = JSDOMParser;\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/jsdom/JSDOMTreeBuilder.js":"var util = require('util');\nvar TreeBuilder = require('../TreeBuilder').TreeBuilder;\n\nfunction JSDOMTreeBuilder(document, core) {\n\tTreeBuilder.call(this);\n\tthis.scriptingEnabled = true;\n\tthis.document = document;\n\tthis.core = core;\n}\n\nutil.inherits(JSDOMTreeBuilder, TreeBuilder);\n\nJSDOMTreeBuilder.prototype.start = function() {\n\n};\n\nJSDOMTreeBuilder.prototype.insertDoctype = function(name, publicId, systemId) {\n\tvar doctype = new this.core.DocumentType(null, name);\n\tdoctype._publicId = publicId;\n\tdoctype._systemId = systemId;\n\tthis.attachNode(doctype, this.document);\n\t// TODO compatibility mode\n};\n\nJSDOMTreeBuilder.prototype.insertComment = function(data, parent) {\n\tif (!parent)\n\t\tparent = this.currentStackItem().node();\n\tvar comment = new this.core.Comment(this.document, data);\n\tthis.attachNode(comment, parent);\n};\n\nJSDOMTreeBuilder.prototype.appendCharacters = function(parent, data) {\n\tvar lastChild = parent.lastChild;\n\tif (lastChild && lastChild.nodeType == lastChild.TEXT_NODE) {\n\t\t// todo parserAppendData\n\t\tlastChild.appendData(data);\n\t\treturn;\n\t}\n\tvar textNode = new this.core.Text(this.document, data);\n\tthis.attachNode(textNode, parent);\n};\n\nJSDOMTreeBuilder.prototype.insertText = function(data) {\n\tif (this.redirectAttachToFosterParent && this.openElements.top.isFosterParenting()) {\n\t\tvar tableIndex = this.openElements.findIndex('table');\n\t\tvar tableItem = this.openElements.item(tableIndex);\n\t\tvar table = tableItem.node;\n\t\tif (tableIndex === 0) {\n\t\t\treturn this.appendCharacters(table, data);\n\t\t}\n\t\tvar parent = table.parentNode;\n\t\tif (parent) {\n\t\t\tvar previousSibling = table.previousSibling;\n\t\t\tif (previousSibling && previousSibling.nodeType === previousSibling.TEXT_NODE) {\n\t\t\t\t// todo parserAppendData\n\t\t\t\tpreviousSibling.appendData(data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar textNode = new this.core.Text(this.document, data);\n\t\t\t// todo parserInsertBefore\n\t\t\tparent.insertBefore(textNode, table);\n\t\t\treturn;\n\t\t}\n\t\tvar stackParent = this.openElements.item(tableIndex - 1).node;\n\t\tvar lastChild = stackParent.lastChild;\n\t\tif (listChild && lastChild.nodeType == lastChild.TEXT_NODE) {\n\t\t\t// todo parserAppendData\n\t\t\tlastChild.appendData(data);\n\t\t\treturn;\n\t\t}\n\t\tvar textNode = new this.core.Text(this.document, data);\n\t\tthis.attachNode(textNode, stackParent);\n\t\treturn;\n\t}\n\tthis.appendCharacters(this.currentStackItem().node, data);\n};\n\nJSDOMTreeBuilder.prototype.createElement = function(namespaceURI, localName, attributes) {\n\tvar element;\n\tif (namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n\t\telement = (this.document._elementBuilders[localName] || this.document._defaultElementBuilder)(this.document, localName);\n\t} else {\n\t\telement = new this.core.Element(this.document, localName);\n\t}\n\n\telement._created = false;\n\telement._namespaceURI = namespaceURI;\n\telement._nodeName = localName;\n\telement._localName = localName;\n\telement._created = true;\n\n\tif (attributes) {\n\t\tfor (var i = 0; i < attributes.length; i++) {\n\t\t\tvar attr = new this.core.Attr(this.document, attributes[i].nodeName, false);\n\t\t\tattr.namespaceURI = attributes[i].namespaceURI || null;\n\t\t\tattr._nodeName = (attributes[i].prefix ? attributes[i].prefix + ':' : '') + attributes[i].nodeName;\n\t\t\tattr._localName = attributes[i].nodeName;\n\t\t\tattr._prefix = attributes[i].prefix || null;\n\t\t\tattr.value = attributes[i].nodeValue;\n\t\t\telement._attributes.setNamedItemNS(attr);\n\t\t}\n\t}\n\treturn element;\n};\n\nJSDOMTreeBuilder.prototype.attachNode = function(child, parent) {\n\t// TODO parserAppendChild\n\tparent.appendChild(child);\n};\n\nJSDOMTreeBuilder.prototype.attachNodeToFosterParent = function(child, table, stackParent) {\n\tvar parent = table.parentNode;\n\tif (parent)\n\t\t// TODO parserInsertBefore\n\t\tparent.insertBefore(child, table);\n\telse\n\t\tthis.attachNode(child, stackParent);\n};\n\nJSDOMTreeBuilder.prototype.detachFromParent = function(node) {\n\tvar parent = node.parentNode;\n\tif (parent)\n\t\tparent.removeChild(node);\n};\n\nJSDOMTreeBuilder.prototype.reparentChildren = function(oldParent, newParent) {\n\twhile (oldParent.hasChildNodes()) {\n\t\tnewParent.appendChild(oldParent.firstChild);\n\t}\n};\n\nJSDOMTreeBuilder.prototype.addAttributesToElement = function(element, attributes) {\n\tfor (var i = 0; i < attributes.length; i++) {\n\t\tif (!element._attributes.getNamedItem(attributes[i].nodeName)) {\n\t\t\tvar attr = new this.core.Attr(this.document, attributes[i].nodeName, false);\n\t\t\tattr.namespaceURI = attributes[i].namespaceURI || null;\n\t\t\tattr._nodeName = (attributes[i].prefix ? attributes[i].prefix + ':' : '') + attributes[i].nodeName;\n\t\t\tattr._localName = attributes[i].nodeName;\n\t\t\tattr._prefix = attributes[i].prefix || null;\n\t\t\tattr.value = attributes[i].nodeValue;\n\t\t\telement._attributes.setNamedItemNS(attr);\n\t\t}\n\t}\n};\n\nexports.JSDOMTreeBuilder = JSDOMTreeBuilder;","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/sax/SAXParser.js":"var SAXTreeBuilder = require('./SAXTreeBuilder').SAXTreeBuilder;\nvar Tokenizer = require('../Tokenizer').Tokenizer;\nvar TreeParser = require('./TreeParser').TreeParser;\n\nfunction SAXParser() {\n\tthis.contentHandler = null;\n\tthis.lexicalHandler = null;\n\tthis._errorHandler = null;\n\tthis._treeBuilder = new SAXTreeBuilder();\n\tthis._tokenizer = new Tokenizer(this._treeBuilder);\n\tthis._scriptingEnabled = false;\n}\n\nSAXParser.prototype.parse = function(source) {\n\tthis._tokenizer.tokenize(source);\n\tvar document = this._treeBuilder.document;\n\tif (document) {\n\t\tnew TreeParser(this.contentHandler, this.lexicalHandler).parse(document);\n\t}\n};\n\nSAXParser.prototype.parseFragment = function(source, context) {\n\tthis._treeBuilder.setFragmentContext(context);\n\tthis._tokenizer.tokenize(source);\n\tvar fragment = this._treeBuilder.getFragment();\n\tif (fragment) {\n\t\tnew TreeParser(this.contentHandler, this.lexicalHandler).parse(fragment);\n\t}\n};\n\nObject.defineProperty(SAXParser.prototype, 'scriptingEnabled', {\n\tget: function() {\n\t\treturn this._scriptingEnabled;\n\t},\n\tset: function(value) {\n\t\tthis._scriptingEnabled = value;\n\t\tthis._treeBuilder.scriptingEnabled = value;\n\t}\n});\n\nObject.defineProperty(SAXParser.prototype, 'errorHandler', {\n\tget: function() {\n\t\treturn this._errorHandler;\n\t},\n\tset: function(value) {\n\t\tthis._errorHandler = value;\n\t\tthis._treeBuilder.errorHandler = value;\n\t}\n});\n\nexports.SAXParser = SAXParser;\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/sax/SAXTreeBuilder.js":"var util = require('util');\r\nvar TreeBuilder = require('../TreeBuilder').TreeBuilder;\r\n\r\nfunction SAXTreeBuilder() {\r\n\tTreeBuilder.call(this);\r\n}\r\n\r\nutil.inherits(SAXTreeBuilder, TreeBuilder);\r\n\r\nSAXTreeBuilder.prototype.start = function(tokenizer) {\r\n\tthis.document = new Document(this.tokenizer);\r\n};\r\n\r\nSAXTreeBuilder.prototype.end = function() {\r\n\tthis.document.endLocator = this.tokenizer;\r\n};\r\n\r\nSAXTreeBuilder.prototype.insertDoctype = function(name, publicId, systemId) {\r\n\tvar doctype = new DTD(this.tokenizer, name, publicId, systemId);\r\n\tdoctype.endLocator = this.tokenizer;\r\n\tthis.document.appendChild(doctype);\r\n};\r\n\r\nSAXTreeBuilder.prototype.createElement = function(namespaceURI, localName, attributes) {\r\n\tvar element = new Element(this.tokenizer, namespaceURI, localName, localName, attributes || []);\r\n\treturn element;\r\n};\r\n\r\nSAXTreeBuilder.prototype.insertComment = function(data, parent) {\r\n\tif (!parent)\r\n\t\tparent = this.currentStackItem();\r\n\tvar comment = new Comment(this.tokenizer, data);\r\n\tparent.appendChild(comment);\r\n};\r\n\r\nSAXTreeBuilder.prototype.appendCharacters = function(parent, data) {\r\n\tvar text = new Characters(this.tokenizer, data);\r\n\tparent.appendChild(text);\r\n};\r\n\r\nSAXTreeBuilder.prototype.insertText = function(data) {\r\n\tif (this.redirectAttachToFosterParent && this.openElements.top.isFosterParenting()) {\r\n\t\tvar tableIndex = this.openElements.findIndex('table');\r\n\t\tvar tableItem = this.openElements.item(tableIndex);\r\n\t\tvar table = tableItem.node;\r\n\t\tif (tableIndex === 0) {\r\n\t\t\treturn this.appendCharacters(table, data);\r\n\t\t}\r\n\t\tvar text = new Characters(this.tokenizer, data);\r\n\t\tvar parent = table.parentNode;\r\n\t\tif (parent) {\r\n\t\t\tparent.insertBetween(text, table.previousSibling, table);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar stackParent = this.openElements.item(tableIndex - 1).node;\r\n\t\tstackParent.appendChild(text);\r\n\t\treturn;\r\n\t}\r\n\tthis.appendCharacters(this.currentStackItem().node, data);\r\n};\r\n\r\nSAXTreeBuilder.prototype.attachNode = function(node, parent) {\r\n\tparent.appendChild(node);\r\n};\r\n\r\nSAXTreeBuilder.prototype.attachNodeToFosterParent = function(child, table, stackParent) {\r\n\tvar parent = table.parentNode;\r\n\tif (parent)\r\n\t\tparent.insertBetween(child, table.previousSibling, table);\r\n\telse\r\n\t\tstackParent.appendChild(child);\r\n};\r\n\r\nSAXTreeBuilder.prototype.detachFromParent = function(element) {\r\n\telement.detach();\r\n};\r\n\r\nSAXTreeBuilder.prototype.reparentChildren = function(oldParent, newParent) {\r\n\tnewParent.appendChildren(oldParent);\r\n};\r\n\r\nSAXTreeBuilder.prototype.getFragment = function() {\r\n\tvar fragment = new DocumentFragment();\r\n\tthis.reparentChildren(this.openElements.rootNode, fragment);\r\n\treturn fragment;\r\n};\r\n\r\nfunction getAttribute(node, name) {\r\n\tfor (var i = 0; i < node.attributes.length; i++) {\r\n\t\tvar attribute = node.attributes[i];\r\n\t\tif (attribute.nodeName === name)\r\n\t\t\treturn attribute.nodeValue;\r\n\t}\r\n}\r\n\r\nSAXTreeBuilder.prototype.addAttributesToElement = function(element, attributes) {\r\n\tfor (var i = 0; i < attributes.length; i++) {\r\n\t\tvar attribute = attributes[i];\r\n\t\tif (!getAttribute(element, attribute.nodeName))\r\n\t\t\telement.attributes.push(attribute);\r\n\t}\r\n};\r\n\r\nfunction Locator() {\r\n\tthis.lineNumber = -1;\r\n\tthis.columnNumber = -1;\r\n}\r\n\r\nvar NodeType = {\r\n\t/**\r\n\t * A CDATA section.\r\n\t */\r\n\tCDATA: 1,\r\n\t/**\r\n\t * A run of characters.\r\n\t */\r\n\tCHARACTERS: 2,\r\n\t/**\r\n\t * A comment.\r\n\t */\r\n\tCOMMENT: 3,\r\n\t/**\r\n\t * A document.\r\n\t */\r\n\tDOCUMENT: 4,\r\n\t/**\r\n\t * A document fragment.\r\n\t */\r\n\tDOCUMENT_FRAGMENT: 5,\r\n\t/**\r\n\t * A DTD.\r\n\t */\r\n\tDTD: 6,\r\n\t/**\r\n\t * An element.\r\n\t */\r\n\tELEMENT: 7,\r\n\t/**\r\n\t * An entity.\r\n\t */\r\n\tENTITY: 8,\r\n\t/**\r\n\t * A run of ignorable whitespace.\r\n\t */\r\n\tIGNORABLE_WHITESPACE: 9,\r\n\t/**\r\n\t * A processing instruction.\r\n\t */\r\n\tPROCESSING_INSTRUCTION: 10,\r\n\t/**\r\n\t * A skipped entity.\r\n\t */\r\n\tSKIPPED_ENTITY: 11\r\n};\r\n/**\r\n * The common node superclass.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\nfunction Node(locator) {\r\n\tif (!locator) {\r\n\t\tthis.columnNumber = -1;\r\n\t\tthis.lineNumber = -1;\r\n\t} else {\r\n\t\tthis.columnNumber = locator.columnNumber;\r\n\t\tthis.lineNumber = locator.lineNumber;\r\n\t}\r\n\tthis.parentNode = null;\r\n\tthis.nextSibling = null;\r\n\tthis.firstChild = null;\r\n}\r\n\r\n/**\r\n * Visit the node.\r\n * \r\n * @param treeParser the visitor\r\n * @throws SAXException if stuff goes wrong\r\n */\r\nNode.prototype.visit = function(treeParser) {\r\n\tthrow new Error(\"Not Implemented\");\r\n};\r\n\r\n/**\r\n * Revisit the node.\r\n * \r\n * @param treeParser the visitor\r\n * @throws SAXException if stuff goes wrong\r\n */\r\nNode.prototype.revisit = function(treeParser) {\r\n\treturn;\r\n};\r\n\r\n\r\n// Subclass-specific accessors that are hoisted here to \r\n// avoid casting.\r\n\r\n/**\r\n * Detach this node from its parent.\r\n */\r\nNode.prototype.detach = function() {\r\n\tif (this.parentNode !== null) {\r\n\t\tthis.parentNode.removeChild(this);\r\n\t\tthis.parentNode = null;\r\n\t}\r\n};\r\n\r\nObject.defineProperty(Node.prototype, 'previousSibling', {\r\n\tget: function() {\r\n\t\tvar prev = null;\r\n\t\tvar next = this.parentNode.firstChild;\r\n\t\tfor(;;) {\r\n\t\t\tif (this == next) {\r\n\t\t\t\treturn prev;\r\n\t\t\t}\r\n\t\t\tprev = next;\r\n\t\t\tnext = next.nextSibling;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nfunction ParentNode(locator) {\r\n\tNode.call(this, locator);\r\n\tthis.lastChild = null;\r\n\tthis._endLocator = null;\r\n}\r\n\r\nParentNode.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * Insert a new child before a pre-existing child and return the newly inserted child.\r\n * @param child the new child\r\n * @param sibling the existing child before which to insert (must be a child of this node) or <code>null</code> to append\r\n * @return <code>child</code>\r\n */\r\nParentNode.prototype.insertBefore = function(child, sibling) {\r\n\t//assert sibling == null || this == sibling.getParentNode();\r\n\tif (!sibling) {\r\n\t\treturn this.appendChild(child);\r\n\t}\r\n\tchild.detach();\r\n\tchild.parentNode = this;\r\n\tif (this.firstChild == sibling) {\r\n\t\tchild.nextSibling = sibling;\r\n\t\tthis.firstChild = child;\r\n\t} else {\r\n\t\tvar prev = this.firstChild;\r\n\t\tvar next = this.firstChild.nextSibling;\r\n\t\twhile (next != sibling) {\r\n\t\t\tprev = next;\r\n\t\t\tnext = next.nextSibling;\r\n\t\t}\r\n\t\tprev.nextSibling = child;\r\n\t\tchild.nextSibling = next;\r\n\t}\r\n\treturn child;\r\n};\r\n\r\nParentNode.prototype.insertBetween = function(child, prev, next) {\r\n\t// assert prev == null || this == prev.getParentNode();\r\n\t// assert next == null || this == next.getParentNode();\r\n\t// assert prev != null || next == firstChild;\r\n\t// assert next != null || prev == lastChild;\r\n\t// assert prev == null || next == null || prev.getNextSibling() == next;\r\n\tif (!next) {\r\n\t\treturn this.appendChild(child);\r\n\t}\r\n\tchild.detach();\r\n\tchild.parentNode = this;\r\n\tchild.nextSibling = next;\r\n\tif (!prev) {\r\n\t\tfirstChild = child;\r\n\t} else {\r\n\t\tprev.nextSibling = child;\r\n\t}\r\n\treturn child;\r\n};\r\n\r\n/**\r\n * Append a child to this node and return the child.\r\n * \r\n * @param child the child to append.\r\n * @return <code>child</code>\r\n */\r\nParentNode.prototype.appendChild = function(child) {\r\n\tchild.detach();\r\n\tchild.parentNode = this;\r\n\tif (!this.firstChild) {\r\n\t\tthis.firstChild = child;\r\n\t} else {\r\n\t\tthis.lastChild.nextSibling = child;\r\n\t}\r\n\tthis.lastChild = child;\r\n\treturn child;\r\n};\r\n\r\n/**\r\n * Append the children of another node to this node removing them from the other node .\r\n * @param parent the other node whose children to append to this one\r\n */\r\nParentNode.prototype.appendChildren = function(parent) {\r\n\tvar child = parent.firstChild;\r\n\tif (!child) {\r\n\t\treturn;\r\n\t}\r\n\tvar another = parent;\r\n\tif (!this.firstChild) {\r\n\t\tthis.firstChild = child;\r\n\t} else {\r\n\t\tthis.lastChild.nextSibling = child;\r\n\t}\r\n\tthis.lastChild = another.lastChild;\r\n\tdo {\r\n\t\tchild.parentNode = this;\r\n\t} while ((child = child.nextSibling));\r\n\tanother.firstChild = null;\r\n\tanother.lastChild = null;\r\n};\r\n\r\n/**\r\n * Remove a child from this node.\r\n * @param node the child to remove\r\n */\r\nParentNode.prototype.removeChild = function(node) {\r\n\t//assert this == node.getParentNode();\r\n\tif (this.firstChild == node) {\r\n\t\tthis.firstChild = node.nextSibling;\r\n\t\tif (this.lastChild == node) {\r\n\t\t\tthis.lastChild = null;\r\n\t\t}\r\n\t} else {\r\n\t\tvar prev = this.firstChild;\r\n\t\tvar next = this.firstChild.nextSibling;\r\n\t\twhile (next != node) {\r\n\t\t\tprev = next;\r\n\t\t\tnext = next.nextSibling;\r\n\t\t}\r\n\t\tprev.nextSibling = node.nextSibling;\r\n\t\tif (this.lastChild == node) {\r\n\t\t\tthis.lastChild = prev;\r\n\t\t}\r\n\t}\r\n\tnode.parentNode = null;\r\n\treturn node;\r\n};\r\n\r\nObject.defineProperty(ParentNode.prototype, 'endLocator', {\r\n\tget: function() {\r\n\t\treturn this._endLocator;\r\n\t},\r\n\tset: function(endLocator) {\r\n\t\tthis._endLocator = {\r\n\t\t\tlineNumber: endLocator.lineNumber,\r\n\t\t\tcolumnNumber: endLocator.columnNumber\r\n\t\t};\r\n\t}\r\n});\r\n\r\n/**\r\n * A document.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\nfunction Document (locator) {\r\n\tParentNode.call(this, locator);\r\n\tthis.nodeType = NodeType.DOCUMENT;\r\n}\r\n\r\nDocument.prototype = Object.create(ParentNode.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nDocument.prototype.visit = function(treeParser) {\r\n\ttreeParser.startDocument(this);\r\n};\r\n\r\n/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */\r\nDocument.prototype.revisit = function(treeParser) {\r\n\ttreeParser.endDocument(this.endLocator);\r\n};\r\n\r\n/**\r\n * A document fragment.\r\n * \r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * The constructor.\r\n */\r\nfunction DocumentFragment() {\r\n\tParentNode.call(this, new Locator());\r\n\tthis.nodeType = NodeType.DOCUMENT_FRAGMENT;\r\n}\r\n\r\nDocumentFragment.prototype = Object.create(ParentNode.prototype);\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nDocumentFragment.prototype.visit = function(treeParser) {\r\n\t// nothing\r\n};\r\n\r\n/**\r\n * An element.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\nfunction Element(locator, uri, localName, qName, atts, prefixMappings) {\r\n\tParentNode.call(this, locator);\r\n\tthis.uri = uri;\r\n\tthis.localName = localName;\r\n\tthis.qName = qName;\r\n\tthis.attributes = atts;\r\n\tthis.prefixMappings = prefixMappings;\r\n\tthis.nodeType = NodeType.ELEMENT;\r\n}\r\n\r\nElement.prototype = Object.create(ParentNode.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nElement.prototype.visit = function(treeParser) {\r\n\tif (this.prefixMappings) {\r\n\t\tfor (var key in prefixMappings) {\r\n\t\t\tvar mapping = prefixMappings[key];\r\n\t\t\ttreeParser.startPrefixMapping(mapping.getPrefix(),\r\n\t\t\t\t\tmapping.getUri(), this);\r\n\t\t}\r\n\t}\r\n\ttreeParser.startElement(this.uri, this.localName, this.qName, this.attributes, this);\r\n};\r\n\r\n/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */\r\nElement.prototype.revisit = function(treeParser) {\r\n\ttreeParser.endElement(this.uri, this.localName, this.qName, this.endLocator);\r\n\tif (this.prefixMappings) {\r\n\t\tfor (var key in prefixMappings) {\r\n\t\t\tvar mapping = prefixMappings[key];\r\n\t\t\ttreeParser.endPrefixMapping(mapping.getPrefix(), this.endLocator);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param {String} data the buffer\r\n */\r\nfunction Characters(locator, data){\r\n\tNode.call(this, locator);\r\n\tthis.data = data;\r\n\tthis.nodeType = NodeType.CHARACTERS;\r\n}\r\n\r\nCharacters.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nCharacters.prototype.visit = function (treeParser) {\r\n\ttreeParser.characters(this.data, 0, this.data.length, this);\r\n};\r\n\r\n/**\r\n * The constructor.\r\n * @param buf the buffer\r\n * @param start the offset\r\n * @param length the length\r\n */\r\nfunction IgnorableWhitespace(locator, data) {\r\n\tNode.call(this, locator);\r\n\tthis.data = data;\r\n\tthis.nodeType = NodeType.IGNORABLE_WHITESPACE;\r\n}\r\n\r\nIgnorableWhitespace.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nIgnorableWhitespace.prototype.visit = function(treeParser) {\r\n\ttreeParser.ignorableWhitespace(this.data, 0, this.data.length, this);\r\n};\r\n\r\n/**\r\n * A comment.\r\n * \r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param buf the buffer\r\n * @param start the offset\r\n * @param length the length\r\n */\r\nfunction Comment(locator, data) {\r\n\tNode.call(this, locator);\r\n\tthis.data = data;\r\n\tthis.nodeType = NodeType.COMMENT;\r\n}\r\n\r\nComment.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nComment.prototype.visit = function(treeParser) {\r\n\ttreeParser.comment(this.data, 0, this.data.length, this);\r\n};\r\n\r\n/**\r\n * A CDATA section.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n/**\r\n * The constructor.\r\n * @param locator the locator\r\n */\r\nfunction CDATA(locator) {\r\n\tParentNode.call(this, locator);\r\n\tthis.nodeType = NodeType.CDATA;\r\n}\r\n\r\nCDATA.prototype = Object.create(ParentNode.prototype);\r\n\r\n/**\r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nCDATA.prototype.visit = function(treeParser) {\r\n\ttreeParser.startCDATA(this);\r\n};\r\n\r\n/**\r\n * \r\n * @throws SAXException if things go wrong\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */\r\nCDATA.prototype.revisit = function(treeParser) {\r\n\ttreeParser.endCDATA(this.endLocator);\r\n};\r\n\r\n/**\r\n * An entity.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param name the name\r\n */\r\nfunction Entity(name) {\r\n\tParentNode.call(this);\r\n\tthis.name = name;\r\n\tthis.nodeType = NodeType.ENTITY;\r\n}\r\n\r\nEntity.prototype = Object.create(ParentNode.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nEntity.prototype.visit = function(treeParser) {\r\n\ttreeParser.startEntity(this.name, this);\r\n};\r\n\r\n/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */\r\nEntity.prototype.revisit = function(treeParser) {\r\n\ttreeParser.endEntity(this.name);\r\n};\r\n\r\n/**\r\n * A skipped entity.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * Constructor.\r\n * @param locator the locator\r\n * @param name the name\r\n */\r\n\r\nfunction SkippedEntity(name) {\r\n\tNode.call(this);\r\n\tthis.name = name;\r\n\tthis.nodeType = NodeType.SKIPPED_ENTITY;\r\n}\r\n\r\nSkippedEntity.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nSkippedEntity.prototype.visit = function(treeParser) {\r\n\ttreeParser.skippedEntity(this.name, this);\r\n};\r\n\r\n/**\r\n * A processing instruction.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * PI target.\r\n */\r\n//private final String target;\r\n\r\n/**\r\n * PI data.\r\n */\r\n//private final String data;\r\n\r\n/**\r\n * Constructor.\r\n * @param locator the locator\r\n * @param target PI target\r\n * @param data PI data\r\n */\r\nfunction ProcessingInstruction(target, data) {\r\n\tNode.call(this);\r\n\tthis.target = target;\r\n\tthis.data = data;\r\n}\r\n\r\nProcessingInstruction.prototype = Object.create(Node.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nProcessingInstruction.prototype.visit = function(treeParser) {\r\n\ttreeParser.processingInstruction(this.target, this.data, this);\r\n};\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#getNodeType()\r\n */\r\nProcessingInstruction.prototype.getNodeType = function() {\r\n\treturn NodeType.PROCESSING_INSTRUCTION;\r\n};\r\n\r\n/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param name the name\r\n * @param publicIdentifier the public id\r\n * @param systemIdentifier the system id\r\n */\r\nfunction DTD(locator, name, publicIdentifier, systemIdentifier) {\r\n\tParentNode.call(this, locator);\r\n\tthis.name = name;\r\n\tthis.publicIdentifier = publicIdentifier;\r\n\tthis.systemIdentifier = systemIdentifier;\r\n\tthis.nodeType = NodeType.DTD;\r\n}\r\n\r\nDTD.prototype = Object.create(ParentNode.prototype);\r\n\r\n/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */\r\nDTD.prototype.visit = function(treeParser) {\r\n\ttreeParser.startDTD(this.name, this.publicIdentifier, this.systemIdentifier, this);\r\n};\r\n\r\n/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */\r\nDTD.prototype.revisit = function(treeParser) {\r\n\ttreeParser.endDTD();\r\n};\r\n\r\nexports.SAXTreeBuilder = SAXTreeBuilder;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/sax/TreeParser.js":"/**\r\n * A tree visitor that replays a tree as SAX events.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n\r\n/**\r\n * The constructor.\r\n * \r\n * @param contentHandler\r\n *            must not be <code>null</code>\r\n * @param lexicalHandler\r\n *            may be <code>null</code>\r\n */\r\nfunction TreeParser(contentHandler, lexicalHandler){\r\n\r\n\t/**\r\n\t * The content handler.\r\n\t */\r\n\tthis.contentHandler;\r\n\r\n\t/**\r\n\t * The lexical handler.\r\n\t */\r\n\tthis.lexicalHandler;\r\n\r\n\t/**\r\n\t * The current locator.\r\n\t */\r\n\tthis.locatorDelegate;\r\n\r\n\tif (!contentHandler) {\r\n\t\tthrow new Error(\"contentHandler was null.\");\r\n\t}\r\n\tthis.contentHandler = contentHandler;\r\n\tif (!lexicalHandler) {\r\n\t\tthis.lexicalHandler = new NullLexicalHandler();\r\n\t} else {\r\n\t\tthis.lexicalHandler = lexicalHandler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Causes SAX events for the tree rooted at the argument to be emitted.\r\n * <code>startDocument()</code> and <code>endDocument()</code> are only\r\n * emitted for a <code>Document</code> node.\r\n * \r\n * @param node\r\n *            the root\r\n * @throws SAXException\r\n */\r\nTreeParser.prototype.parse = function(node) {\r\n\tthis.contentHandler.documentLocator = this;\r\n\tvar current = node;\r\n\tvar next;\r\n\tfor (;;) {\r\n\t\tcurrent.visit(this);\r\n\t\tif (next = current.firstChild) {\r\n\t\t\tcurrent = next;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (;;) {\r\n\t\t\tcurrent.revisit(this);\r\n\t\t\tif (current == node) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (next = current.nextSibling) {\r\n\t\t\t\tcurrent = next;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcurrent = current.parentNode;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#characters(char[], int, int)\r\n */\r\nTreeParser.prototype.characters = function(ch, start, length, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.characters(ch, start, length);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#endDocument()\r\n */\r\nTreeParser.prototype.endDocument = function(locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.endDocument();\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#endElement(java.lang.String,\r\n *      java.lang.String, java.lang.String)\r\n */\r\nTreeParser.prototype.endElement = function(uri, localName, qName, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.endElement(uri, localName, qName);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#endPrefixMapping(java.lang.String)\r\n */\r\nTreeParser.prototype.endPrefixMapping = function(prefix, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.endPrefixMapping(prefix);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)\r\n */\r\nTreeParser.prototype.ignorableWhitespace = function(ch, start, length, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.ignorableWhitespace(ch, start, length);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#processingInstruction(java.lang.String,\r\n *      java.lang.String)\r\n */\r\nTreeParser.prototype.processingInstruction = function(target, data, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.processingInstruction(target, data);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#skippedEntity(java.lang.String)\r\n */\r\nTreeParser.prototype.skippedEntity = function(name, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.skippedEntity(name);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#startDocument()\r\n */\r\nTreeParser.prototype.startDocument = function(locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.startDocument();\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\r\n *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\r\n */\r\nTreeParser.prototype.startElement = function(uri, localName, qName, atts, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.startElement(uri, localName, qName, atts);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ContentHandler#startPrefixMapping(java.lang.String,\r\n *      java.lang.String)\r\n */\r\nTreeParser.prototype.startPrefixMapping = function(prefix, uri, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.contentHandler.startPrefixMapping(prefix, uri);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)\r\n */\r\nTreeParser.prototype.comment = function(ch, start, length, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.comment(ch, start, length);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#endCDATA()\r\n */\r\nTreeParser.prototype.endCDATA = function(locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.endCDATA();\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#endDTD()\r\n */\r\nTreeParser.prototype.endDTD = function(locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.endDTD();\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#endEntity(java.lang.String)\r\n */\r\nTreeParser.prototype.endEntity = function(name, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.endEntity(name);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#startCDATA()\r\n */\r\nTreeParser.prototype.startCDATA = function(locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.startCDATA();\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#startDTD(java.lang.String,\r\n *      java.lang.String, java.lang.String)\r\n */\r\nTreeParser.prototype.startDTD = function(name, publicId, systemId, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.startDTD(name, publicId, systemId);\r\n};\r\n\r\n/**\r\n * @see org.xml.sax.ext.LexicalHandler#startEntity(java.lang.String)\r\n */\r\nTreeParser.prototype.startEntity = function(name, locator) {\r\n\tthis.locatorDelegate = locator;\r\n\tthis.lexicalHandler.startEntity(name);\r\n};\r\n\r\nObject.defineProperty(TreeParser.prototype, 'columnNumber', {\r\n\tget: function() {\r\n\t\tif (!this.locatorDelegate)\r\n\t\t\treturn -1;\r\n\t\telse\r\n\t\t\treturn this.locatorDelegate.columnNumber;\r\n\t}\r\n});\r\n\r\nObject.defineProperty(TreeParser.prototype, 'lineNumber', {\r\n\tget: function() {\r\n\t\tif (!this.locatorDelegate)\r\n\t\t\treturn -1;\r\n\t\telse\r\n\t\t\treturn this.locatorDelegate.lineNumber;\r\n\t}\r\n});\r\n\r\n/**\r\n * A lexical handler that does nothing.\r\n * @version $Id$\r\n * @author hsivonen\r\n */\r\n// implements LexicalHandler\r\nfunction NullLexicalHandler() {\r\n\r\n}\r\n\r\nNullLexicalHandler.prototype.comment = function() {};\r\nNullLexicalHandler.prototype.endCDATA = function() {};\r\nNullLexicalHandler.prototype.endDTD = function() {};\r\nNullLexicalHandler.prototype.endEntity = function() {};\r\nNullLexicalHandler.prototype.startCDATA = function() {};\r\nNullLexicalHandler.prototype.startDTD = function() {};\r\nNullLexicalHandler.prototype.startEntity = function() {};\r\n\r\nexports.TreeParser = TreeParser;\r\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/lib/array-helpers.js":"exports.last = function(array) {\n  return array[array.length - 1];\n};\n","/home/travis/build/npmtest/node-npmtest-html5/node_modules/html5/tools/testbed.js":"var HTML5 = require('../lib/html5'),\n\tevents = require('events'),\n\tutil = require('util'),\n\tfs = require('fs'),\n\tassert = require('assert'),\n\tserialize = require('../test/lib/serializeTestOutput').serializeTestOutput;\n\nif(process.argv[4]) {\n\tvar debugs = process.argv[4].split(',');\n\tfor(var d in debugs) HTML5.enableDebug(debugs[d]);\n}\n\nvar base = __dirname + '/../data/tree-construction/'\nvar l = fs.readdirSync(base);\nfor(var t in l) {\n\tif(process.argv[2] && process.argv[2] != l[t]) continue;\n\tvar testname = l[t];\n\tif(testname.match(/\\.js$/)) continue;\n        if(fs.statSync(base+testname).isDirectory()) continue;\n\tutil.debug(\"Test file: \" + testname);\n\tvar f = require('../test/lib/readTestData')\n\tvar td = f.readTestData(base+testname);\n\tvar tests = 1;\n\tfor(var i in td) {\n\t\ttry {\n\t\t\tif(process.argv[3] && process.argv[3] != i) continue;\n\t\t\tutil.debug(\"Test #\" + i + \": \");\n\t\t\tutil.debug(\"Input data: \" + util.inspect(td[i].data.slice(0, td[i].data.length - 1)));\n\t\t\tif(td[i]['document-fragment']) util.debug(\"Input document fragment: \" + util.inspect(td[i]['document-fragment']))\n\t\t\tvar p = new HTML5.Parser()\n\t\t\tif(td[i]['document-fragment']) {\n\t\t\t\tp.parse_fragment(td[i].data.slice(0, td[i].data.length - 1), td[i]['document-fragment'].slice(0, td[i]['document-fragment'].length - 1))\n\t\t\t} else {\n\t\t\t\tp.parse(td[i].data.slice(0, td[i].data.length - 1));\n\t\t\t}\n\t\t\tvar errorsFixed = p.errors.map(function(e) {\n\t\t\t\tif(!HTML5.E[e[0]]) return e;\n\t\t\t\treturn HTML5.E[e[0]].replace(/%\\(.*?\\)/, function(r) {\n\t\t\t\t\tif(e[1]) {\n\t\t\t\t\t\treturn e[1][r.slice(2).slice(0, r.length - 3)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tassert.ok(p.document);\n\t\t\tHTML5.debug('testbed', \"parse complete\");\n\n\t\t\tHTML5.debug('testdata.errors', \"Expected \", td[i].errors);\n\t\t\tHTML5.debug('testdata.errors', \"Actual \", errorsFixed);\n\t\t\tvar serialized = serialize(p.inner_html ? p.fragment : p.document);\n\t\t\tutil.debug(\"Output : \" + serialized);\n\t\t\t//util.debug(\"Tree : \" + require('util').inspect(p));\n\t\t\tutil.debug(\"Check  : \" + td[i].document);\n\t\t\tassert.deepEqual(serialized, td[i].document);\n\t\t\tif(td[i].errors && p.errors.length !== td[i].errors.length) {\n\t\t\t\tutil.debug(\"Expected errors: \" + util.inspect(td[i].errors));\n\t\t\t\tutil.debug(\"Actual errors  : \" + util.inspect(p.errors));\n\t\t\t}\n\t\t} catch(e) {\n                        util.debug('error in parsing: ' + e.message + \" \" + e.stack);\n\t\t}\n\t}\n}\n"}